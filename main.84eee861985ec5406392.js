/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.html":
/*!************************!*\
  !*** ./src/index.html ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/html-loader/dist/runtime/getUrl.js */ \"./node_modules/html-loader/dist/runtime/getUrl.js\");\n/* harmony import */ var _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___HTML_LOADER_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(/*! ./img/icons/favicon.png */ \"./src/img/icons/favicon.png\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(/* asset import */ __webpack_require__(/*! ./img/icons/logo.png */ \"./src/img/icons/logo.png\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_2___ = new URL(/* asset import */ __webpack_require__(/*! ./img/icons/company1.png */ \"./src/img/icons/company1.png\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_3___ = new URL(/* asset import */ __webpack_require__(/*! ./img/icons/company2.png */ \"./src/img/icons/company2.png\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_4___ = new URL(/* asset import */ __webpack_require__(/*! ./img/icons/company3.png */ \"./src/img/icons/company3.png\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_5___ = new URL(/* asset import */ __webpack_require__(/*! ./img/icons/company4.png */ \"./src/img/icons/company4.png\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_6___ = new URL(/* asset import */ __webpack_require__(/*! ./img/hero.png */ \"./src/img/hero.png\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_7___ = new URL(/* asset import */ __webpack_require__(/*! ./img/icons/Ornament.png */ \"./src/img/icons/Ornament.png\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_8___ = new URL(/* asset import */ __webpack_require__(/*! ./img/Rectangle 24.jpeg */ \"./src/img/Rectangle 24.jpeg\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_9___ = new URL(/* asset import */ __webpack_require__(/*! ./img/Rectangle 25.jpeg */ \"./src/img/Rectangle 25.jpeg\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_10___ = new URL(/* asset import */ __webpack_require__(/*! ./img/Rectangle 26.jpeg */ \"./src/img/Rectangle 26.jpeg\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_11___ = new URL(/* asset import */ __webpack_require__(/*! ./img/card1.jpeg */ \"./src/img/card1.jpeg\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_12___ = new URL(/* asset import */ __webpack_require__(/*! ./img/card3.jpeg */ \"./src/img/card3.jpeg\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_13___ = new URL(/* asset import */ __webpack_require__(/*! ./img/card2.jpeg */ \"./src/img/card2.jpeg\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_14___ = new URL(/* asset import */ __webpack_require__(/*! ./img/card4.jpeg */ \"./src/img/card4.jpeg\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_15___ = new URL(/* asset import */ __webpack_require__(/*! ./img/avatar_1.png */ \"./src/img/avatar_1.png\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_16___ = new URL(/* asset import */ __webpack_require__(/*! ./img/avatar_2.jpg */ \"./src/img/avatar_2.jpg\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_17___ = new URL(/* asset import */ __webpack_require__(/*! ./img/icons/Vector.png */ \"./src/img/icons/Vector.png\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_18___ = new URL(/* asset import */ __webpack_require__(/*! ./img/icons/facebook.png */ \"./src/img/icons/facebook.png\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_19___ = new URL(/* asset import */ __webpack_require__(/*! ./img/icons/instagram.png */ \"./src/img/icons/instagram.png\"), __webpack_require__.b);\nvar ___HTML_LOADER_IMPORT_20___ = new URL(/* asset import */ __webpack_require__(/*! ./img/icons/linkedin.png */ \"./src/img/icons/linkedin.png\"), __webpack_require__.b);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_1___);\nvar ___HTML_LOADER_REPLACEMENT_2___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_2___);\nvar ___HTML_LOADER_REPLACEMENT_3___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_3___);\nvar ___HTML_LOADER_REPLACEMENT_4___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_4___);\nvar ___HTML_LOADER_REPLACEMENT_5___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_5___);\nvar ___HTML_LOADER_REPLACEMENT_6___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_6___);\nvar ___HTML_LOADER_REPLACEMENT_7___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_7___);\nvar ___HTML_LOADER_REPLACEMENT_8___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_8___);\nvar ___HTML_LOADER_REPLACEMENT_9___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_9___);\nvar ___HTML_LOADER_REPLACEMENT_10___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_10___);\nvar ___HTML_LOADER_REPLACEMENT_11___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_11___);\nvar ___HTML_LOADER_REPLACEMENT_12___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_12___);\nvar ___HTML_LOADER_REPLACEMENT_13___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_13___);\nvar ___HTML_LOADER_REPLACEMENT_14___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_14___);\nvar ___HTML_LOADER_REPLACEMENT_15___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_15___);\nvar ___HTML_LOADER_REPLACEMENT_16___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_16___);\nvar ___HTML_LOADER_REPLACEMENT_17___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_17___);\nvar ___HTML_LOADER_REPLACEMENT_18___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_18___);\nvar ___HTML_LOADER_REPLACEMENT_19___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_19___);\nvar ___HTML_LOADER_REPLACEMENT_20___ = _node_modules_html_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_0___default()(___HTML_LOADER_IMPORT_20___);\nvar code = \"<!doctype html>\\r\\n<html lang=\\\"en\\\">\\r\\n<head>\\r\\n    <meta charset=\\\"UTF-8\\\">\\r\\n    <meta name=\\\"viewport\\\"\\r\\n          content=\\\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\\\">\\r\\n    <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\r\\n    <link rel=\\\"icon\\\" type=\\\"image/x-icon\\\" href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\">\\r\\n    <title>Document</title>\\r\\n</head>\\r\\n<body>\\r\\n<div class=\\\"wrapper\\\">\\r\\n\\r\\n    <header class=\\\"header\\\">\\r\\n        <div class=\\\"header__container _container\\\">\\r\\n            <div class=\\\"header-logo__block\\\">\\r\\n                <div class=\\\"header-logo__image\\\">\\r\\n                    <img class=\\\"logo__image\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\" alt=\\\"logo\\\">\\r\\n                </div>\\r\\n                <div class=\\\"header-logo__text\\\">\\r\\n                    <span>Canvix</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <nav class=\\\"header-menu__block\\\">\\r\\n                <ul class=\\\"header__menu menu\\\">\\r\\n                    <li class=\\\"menu__link\\\"><a href=\\\"#\\\">Home</a></li>\\r\\n                    <li class=\\\"menu__link\\\"><a href=\\\"#\\\">About</a></li>\\r\\n                    <li class=\\\"menu__link\\\"><a href=\\\"#\\\">Contact Us</a></li>\\r\\n                </ul>\\r\\n            </nav>\\r\\n            <div class=\\\"header-button__block\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"header__button\\\">Get in touch</a>\\r\\n            </div>\\r\\n            <div class=\\\"burger\\\">\\r\\n                <div class=\\\"line-1\\\"></div>\\r\\n                <div class=\\\"line-2\\\"></div>\\r\\n                <div class=\\\"line-3\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </header>\\r\\n\\r\\n\\r\\n    <main class=\\\"page\\\">\\r\\n        <section class=\\\"hero\\\">\\r\\n            <div class=\\\"hero__container _container\\\">\\r\\n                <div class=\\\"hero-ready\\\">\\r\\n                    <div class=\\\"hero-ready__block\\\">\\r\\n                        <div class=\\\"ready__title _scr-item\\\">\\r\\n                            <h1>\\r\\n                                Ready to take your <span>Business Growth</span> to the next level?\\r\\n                            </h1>\\r\\n                        </div>\\r\\n                        <div class=\\\"ready__text _scr-item\\\">\\r\\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit- et ut massa libero egestas\\r\\n                            malesuada viverra gravida libero cursus nulla leo pulvinar.\\r\\n                        </div>\\r\\n                        <div class=\\\"ready__button\\\">\\r\\n                            <a href=\\\"#\\\">Start your Free Trial</a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"hero-trusted__block\\\">\\r\\n                        <div class=\\\"hero-trusted__title\\\">\\r\\n                            Trusted by Leading Brands\\r\\n                        </div>\\r\\n                        <div class=\\\"hero-trusted__companies\\\">\\r\\n                            <div class=\\\"trusted__company\\\">\\r\\n                                <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_2___ + \"\\\" alt=\\\"company1\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"trusted__company\\\">\\r\\n                                <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_3___ + \"\\\" alt=\\\"company2\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"trusted__company\\\">\\r\\n                                <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_4___ + \"\\\" alt=\\\"company3\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"trusted__company\\\">\\r\\n                                <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_5___ + \"\\\" alt=\\\"company4\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"hero-images__wrapper\\\">\\r\\n                    <div class=\\\"hero-images__block _scr-item\\\">\\r\\n                        <div class=\\\"hero-images__circle1\\\"></div>\\r\\n                        <div class=\\\"hero-images__circle2\\\"></div>\\r\\n                        <div class=\\\"hero-images__circle3\\\"></div>\\r\\n                        <div class=\\\"hero-images__circle4\\\">\\r\\n                            <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_6___ + \"\\\" alt=\\\"hero\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"hero_background\\\">\\r\\n                <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_7___ + \"\\\" alt=\\\"background\\\">\\r\\n            </div>\\r\\n        </section>\\r\\n\\r\\n        <section class=\\\"services\\\">\\r\\n            <div class=\\\"services__container _container\\\">\\r\\n                <div class=\\\"section__description\\\">Our Services</div>\\r\\n                <div class=\\\"section__title\\\">\\r\\n                    <h2>High-impact services for your business</h2>\\r\\n                </div>\\r\\n                <div class=\\\"services-block\\\">\\r\\n                    <a href=\\\"#\\\" class=\\\"services__card\\\">\\r\\n                        <div class=\\\"card__image\\\">\\r\\n                            <svg class=\\\"card__img\\\" width=\\\"80.028320\\\" height=\\\"80.028259\\\" viewBox=\\\"0 0 80.0283 80.0283\\\"\\r\\n                                 fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"\\r\\n                                 xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\r\\n                                <desc>\\r\\n                                    Created with Pixso.\\r\\n                                </desc>\\r\\n                                <defs>\\r\\n                                    <clipPath id=\\\"clip121_1325\\\">\\r\\n                                        <rect id=\\\"content-writing\\\" width=\\\"80.028244\\\" height=\\\"80.028244\\\" fill=\\\"white\\\"\\r\\n                                              fill-opacity=\\\"0\\\"/>\\r\\n                                    </clipPath>\\r\\n                                </defs>\\r\\n                                <rect id=\\\"content-writing\\\" width=\\\"80.028244\\\" height=\\\"80.028244\\\" fill=\\\"#FFFFFF\\\"\\r\\n                                      fill-opacity=\\\"0\\\"/>\\r\\n                                <g clip-path=\\\"url(#clip121_1325)\\\">\\r\\n                                    <path class=\\\"fill-color\\\" id=\\\"Vector\\\"\\r\\n                                          d=\\\"M80.0283 40.0141C80.0283 62.1133 62.1133 80.0283 40.0137 80.0283C17.915 80.0283 0 62.1133 0 40.0141C0 17.9149 17.915 0 40.0137 0C62.1133 0 80.0283 17.9149 80.0283 40.0141Z\\\"\\r\\n                                          fill=\\\"#0C0C0C\\\" fill-opacity=\\\"1.000000\\\" fill-rule=\\\"evenodd\\\"/>\\r\\n                                    <path class=\\\"stroke-color\\\" id=\\\"Vector\\\"\\r\\n                                          d=\\\"M25 55L28.3584 46.5849L45.8457 29.0982L47.415 27.5282C48.8115 26.1319 51.0752 26.1319 52.4717 27.5282C53.8682 28.9244 53.8682 31.1883 52.4717 32.5845L50.9014 34.1545L33.415 51.6413L25 55ZM50.9014 34.1545L45.8457 29.0982M28.3584 46.5849L32.7422 47.2566L33.415 51.6413\\\"\\r\\n                                          stroke=\\\"#FBFBFB\\\" stroke-opacity=\\\"1.000000\\\" stroke-width=\\\"2.368421\\\"\\r\\n                                          stroke-linejoin=\\\"round\\\"/>\\r\\n                                </g>\\r\\n                            </svg>\\r\\n                        </div>\\r\\n                        <div class=\\\"services__title\\\">Content Marketing</div>\\r\\n                        <div class=\\\"services__description\\\">\\r\\n                            Our team creates engaging and shareable content that resonates with your audience, drives\\r\\n                            organic traffic\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a href=\\\"#\\\" class=\\\"services__card\\\">\\r\\n                        <div class=\\\"card__image\\\">\\r\\n                            <svg class=\\\"card__img\\\" width=\\\"80.000000\\\" height=\\\"80.000000\\\" viewBox=\\\"0 0 80 80\\\" fill=\\\"none\\\"\\r\\n                                 xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\r\\n                                <desc>\\r\\n                                    Created with Pixso.\\r\\n                                </desc>\\r\\n                                <defs>\\r\\n                                    <clipPath id=\\\"clip121_1345\\\">\\r\\n                                        <rect id=\\\"vector\\\" width=\\\"80.000000\\\" height=\\\"80.000000\\\" fill=\\\"white\\\"\\r\\n                                              fill-opacity=\\\"0\\\"/>\\r\\n                                    </clipPath>\\r\\n                                </defs>\\r\\n                                <rect id=\\\"vector\\\" width=\\\"80.000000\\\" height=\\\"80.000000\\\" fill=\\\"#FFFFFF\\\" fill-opacity=\\\"0\\\"/>\\r\\n                                <g clip-path=\\\"url(#clip121_1345)\\\">\\r\\n                                    <path class=\\\"fill-color\\\" id=\\\"Vector\\\"\\r\\n                                          d=\\\"M79.5195 39.9999C79.5195 17.9086 61.6104 0 39.5195 0C17.4277 0 -0.480469 17.9085 -0.480469 39.9999C-0.480469 62.0913 17.4277 79.9999 39.5195 79.9999C61.6104 79.9999 79.5195 62.0913 79.5195 39.9999Z\\\"\\r\\n                                          fill=\\\"#0C0C0C\\\" fill-opacity=\\\"1.000000\\\" fill-rule=\\\"evenodd\\\"/>\\r\\n                                    <path class=\\\"stroke-color\\\" id=\\\"Vector\\\"\\r\\n                                          d=\\\"M32.9756 54.0115C29.2686 54.987 27.415 55.4748 26.2383 54.709C25.8682 54.4679 25.5518 54.1518 25.3105 53.7812C24.5449 52.6043 25.0322 50.7507 26.0078 47.0436L29.8262 32.5347C30.0352 31.7395 30.1396 31.342 30.3838 31.04C30.4648 30.9407 30.5547 30.8503 30.6543 30.77C30.9561 30.5259 31.3535 30.4213 32.1484 30.2121L38.9111 28.4324L42.0391 25.3048C42.999 24.3445 43.4795 23.8644 44.0605 23.7724C44.248 23.7426 44.4395 23.7426 44.627 23.7724C45.208 23.8644 45.6885 24.3445 46.6484 25.3048L54.7148 33.3709C55.6748 34.3311 56.1553 34.8113 56.2471 35.3924C56.2773 35.5801 56.2773 35.7713 56.2471 35.959C56.1553 36.5401 55.6748 37.0202 54.7148 37.9805L51.5869 41.1081L49.8076 47.8707C49.5986 48.6659 49.4932 49.0634 49.249 49.3654C49.1689 49.4647 49.0791 49.5551 48.9795 49.6354C48.6777 49.8795 48.2803 49.9841 47.4844 50.1933L32.9756 54.0115ZM38.9111 28.4324L51.5869 41.1081\\\"\\r\\n                                          stroke=\\\"#FBFBFB\\\" stroke-opacity=\\\"1.000000\\\" stroke-width=\\\"1.763299\\\"\\r\\n                                          stroke-linejoin=\\\"round\\\"/>\\r\\n                                    <path class=\\\"stroke-color\\\" id=\\\"Vector\\\"\\r\\n                                          d=\\\"M36.4209 38.8529C37.7344 37.5403 39.8623 37.5403 41.1748 38.8529C42.4873 40.1655 42.4873 42.2936 41.1748 43.6062C39.8623 44.9189 37.7344 44.9189 36.4209 43.6062C35.1084 42.2936 35.1084 40.1655 36.4209 38.8529ZM36.4209 43.6062L31.668 48.3596\\\"\\r\\n                                          stroke=\\\"#FBFBFB\\\" stroke-opacity=\\\"1.000000\\\" stroke-width=\\\"2.716216\\\"\\r\\n                                          stroke-linejoin=\\\"round\\\"/>\\r\\n                                </g>\\r\\n                            </svg>\\r\\n                        </div>\\r\\n                        <div class=\\\"services__title\\\">Graphic Design</div>\\r\\n                        <div class=\\\"services__description\\\">\\r\\n                            Unlock the power of visual storytelling with our expert graphic design services tailored to\\r\\n                            elevate your brand and captivate.\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a href=\\\"#\\\" class=\\\"services__card\\\">\\r\\n                        <div class=\\\"card__image\\\">\\r\\n                            <svg class=\\\"card__img\\\" width=\\\"80.000000\\\" height=\\\"80.000000\\\" viewBox=\\\"0 0 80 80\\\" fill=\\\"none\\\"\\r\\n                                 xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\r\\n                                <desc>\\r\\n                                    Created with Pixso.\\r\\n                                </desc>\\r\\n                                <defs/>\\r\\n                                <path class=\\\"fill-color\\\" id=\\\"Vector\\\"\\r\\n                                      d=\\\"M80 40C80 62.0914 62.0913 80 40 80C17.9087 80 0 62.0914 0 40C0 17.9086 17.9087 0 40 0C62.0913 0 80 17.9086 80 40Z\\\"\\r\\n                                      fill=\\\"#0C0C0C\\\" fill-opacity=\\\"1.000000\\\" fill-rule=\\\"evenodd\\\"/>\\r\\n                                <path class=\\\"stroke-color\\\" id=\\\"Vector\\\"\\r\\n                                      d=\\\"M36.6401 33.5176L39.9771 30.5936C44.1279 26.9568 46.2031 25.1384 47.9761 25.4916C48.5278 25.6014 49.0464 25.8366 49.4927 26.179C50.9263 27.2798 50.9263 30.039 50.9263 35.5576L50.9263 50.6364C50.9263 53.7647 47.2612 55.4556 44.8823 53.424C41.0679 50.1659 36.8237 46.5362 36.6401 46.3575C36.1289 44.7778 36.0537 41.5987 36.0537 39.9376C36.0537 38.2764 36.3389 35.1509 36.6401 33.5176ZM36.6401 46.3575C35.687 46.4242 30.3882 46.4313 26.6929 46.4277C24.6729 46.4277 23.0391 44.7863 23.0391 42.7662L23.0391 37.1527C23.0391 35.14 24.6616 33.5038 26.6743 33.4917C30.3701 33.4696 35.6851 33.4508 36.6401 33.5176M26.7578 46.4203L26.7173 55.8253C26.7173 57.346 27.9424 58.5812 29.4629 58.5812C30.978 58.5812 32.2056 57.3521 32.2056 55.8371L32.2056 46.4212M54.6445 32.4657C56.5039 38.0696 56.5039 41.8055 54.6445 47.4095\\\"\\r\\n                                      stroke=\\\"#FBFBFB\\\" stroke-opacity=\\\"1.000000\\\" stroke-width=\\\"1.500000\\\"\\r\\n                                      stroke-linejoin=\\\"round\\\"/>\\r\\n                            </svg>\\r\\n                        </div>\\r\\n                        <div class=\\\"services__title\\\">Digital Marketing</div>\\r\\n                        <div class=\\\"services__description\\\">\\r\\n                            Elevate your brand's online presence with our data-driven digital marketing strategies. From\\r\\n                            SEO and content marketing\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a href=\\\"#\\\" class=\\\"services__card\\\">\\r\\n                        <div class=\\\"card__image\\\">\\r\\n                            <svg class=\\\"card__img\\\" width=\\\"80.028320\\\" height=\\\"80.028244\\\" viewBox=\\\"0 0 80.0283 80.0282\\\"\\r\\n                                 fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"\\r\\n                                 xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\r\\n                                <desc>\\r\\n                                    Created with Pixso.\\r\\n                                </desc>\\r\\n                                <defs/>\\r\\n                                <path class=\\\"fill-color\\\" id=\\\"Vector\\\"\\r\\n                                      d=\\\"M80.0283 40.0141C80.0283 62.1133 62.1133 80.0282 40.0137 80.0282C17.915 80.0282 0 62.1133 0 40.0141C0 17.9149 17.915 0 40.0137 0C62.1133 0 80.0283 17.9149 80.0283 40.0141Z\\\"\\r\\n                                      fill=\\\"#0C0C0C\\\" fill-opacity=\\\"1.000000\\\" fill-rule=\\\"evenodd\\\"/>\\r\\n                                <path class=\\\"stroke-color\\\" id=\\\"Vector\\\"\\r\\n                                      d=\\\"M46.9688 38.2635C45.1025 38.2635 43.5889 36.7977 43.5889 34.9896C43.5889 33.1814 45.1025 31.7156 46.9688 31.7156C48.8359 31.7156 50.3486 33.1814 50.3486 34.9896C50.3486 36.7977 48.8359 38.2635 46.9688 38.2635ZM34.415 38.2635C32.5479 38.2635 31.0352 36.7977 31.0352 34.9896C31.0352 33.1814 32.5479 31.7156 34.415 31.7156C36.2812 31.7156 37.7949 33.1814 37.7949 34.9896C37.7949 36.7977 36.2812 38.2635 34.415 38.2635ZM35.3809 49.4884C33.5137 49.4884 32.001 48.0226 32.001 46.2145C32.001 44.4063 33.5137 42.9406 35.3809 42.9406C37.2471 42.9406 38.7607 44.4063 38.7607 46.2145C38.7607 48.0226 37.2471 49.4884 35.3809 49.4884ZM56.9971 36.1802C57.1533 42.6644 51.8936 43.5613 47.4922 43.1856C45.3232 43.0005 43.5615 45.6934 44.5352 47.5797C45.1846 48.8372 46.1074 49.9432 47.2412 50.8215C51.3145 54.1655 46.4863 56.9717 40.6924 56.9717C34.8975 56.9717 25.6738 51.1108 24.2754 42.9405C22.8359 34.5373 27.0957 25.8609 35.9004 24.2603C44.7061 22.6597 56.7959 27.865 56.9971 36.1802Z\\\"\\r\\n                                      stroke=\\\"#FBFBFB\\\" stroke-opacity=\\\"1.000000\\\" stroke-width=\\\"1.650000\\\"/>\\r\\n                            </svg>\\r\\n                        </div>\\r\\n                        <div class=\\\"services__title\\\">Web Design</div>\\r\\n                        <div class=\\\"services__description\\\">\\r\\n                            We specialize in creating visually stunning, user-friendly websites that align with your\\r\\n                            brand identity and deliver an exceptional.\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a href=\\\"#\\\" class=\\\"services__card\\\">\\r\\n                        <div class=\\\"card__image\\\">\\r\\n                            <svg class=\\\"card__img\\\" width=\\\"80.000000\\\" height=\\\"80.000000\\\" viewBox=\\\"0 0 80 80\\\" fill=\\\"none\\\"\\r\\n                                 xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\r\\n                                <desc>\\r\\n                                    Created with Pixso.\\r\\n                                </desc>\\r\\n                                <defs>\\r\\n                                    <clipPath id=\\\"clip121_1414\\\">\\r\\n                                        <rect id=\\\"vector\\\" width=\\\"80.000000\\\" height=\\\"80.000000\\\" fill=\\\"white\\\"\\r\\n                                              fill-opacity=\\\"0\\\"/>\\r\\n                                    </clipPath>\\r\\n                                </defs>\\r\\n                                <rect id=\\\"vector\\\" width=\\\"80.000000\\\" height=\\\"80.000000\\\" fill=\\\"#FFFFFF\\\" fill-opacity=\\\"0\\\"/>\\r\\n                                <g clip-path=\\\"url(#clip121_1414)\\\">\\r\\n                                    <path class=\\\"fill-color\\\" id=\\\"Vector\\\"\\r\\n                                          d=\\\"M79.5195 39.9999C79.5195 17.9086 61.6104 0 39.5195 0C17.4277 0 -0.480469 17.9085 -0.480469 39.9999C-0.480469 62.0913 17.4277 79.9999 39.5195 79.9999C61.6104 79.9999 79.5195 62.0914 79.5195 39.9999Z\\\"\\r\\n                                          fill=\\\"#0C0C0C\\\" fill-opacity=\\\"1.000000\\\" fill-rule=\\\"evenodd\\\"/>\\r\\n                                    <path class=\\\"stroke-color\\\" id=\\\"Vector\\\"\\r\\n                                          d=\\\"M42.0527 40.2717C46.7148 40.2717 50.9395 43.0173 52.833 47.2775C54.5664 51.1781 51.7119 55.5717 47.4434 55.5717L31.5957 55.5717C27.3271 55.5717 24.4727 51.1781 26.2061 47.2775C28.0996 43.0173 32.3242 40.2717 36.9863 40.2717L42.0527 40.2717ZM34.4199 30.0717C34.4199 27.255 36.7031 24.9717 39.5195 24.9717C42.3359 24.9717 44.6191 27.255 44.6191 30.0717C44.6191 32.8883 42.3359 35.1717 39.5195 35.1717C36.7031 35.1717 34.4199 32.8883 34.4199 30.0717ZM49.7197 27.5277C50.5195 28.2351 50.9941 29.1188 50.9951 30.0774C50.9951 31.036 50.5205 31.9196 49.7207 32.6267M54.3242 24.9717C55.457 26.5082 56.0947 28.243 56.0947 30.0789C56.0947 31.9093 55.4619 33.6389 54.3359 35.1717\\\"\\r\\n                                          stroke=\\\"#FBFBFB\\\" stroke-opacity=\\\"1.000000\\\" stroke-width=\\\"1.500000\\\"\\r\\n                                          stroke-linejoin=\\\"round\\\"/>\\r\\n                                </g>\\r\\n                            </svg>\\r\\n                        </div>\\r\\n                        <div class=\\\"services__title\\\">IT Consulting</div>\\r\\n                        <div class=\\\"services__description\\\">\\r\\n                            IT consulting, or information technology consulting, refers to the practice of providing\\r\\n                            advisory and implementation services\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a href=\\\"#\\\" class=\\\"services__card\\\">\\r\\n                        <div class=\\\"card__image\\\">\\r\\n                            <svg class=\\\"card__img\\\" width=\\\"80.000000\\\" height=\\\"80.000000\\\" viewBox=\\\"0 0 80 80\\\" fill=\\\"none\\\"\\r\\n                                 xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\r\\n                                <desc>\\r\\n                                    Created with Pixso.\\r\\n                                </desc>\\r\\n                                <defs/>\\r\\n                                <path class=\\\"fill-color\\\" id=\\\"Vector\\\"\\r\\n                                      d=\\\"M80 40C80 62.0914 62.0913 80 40 80C17.9087 80 0 62.0914 0 40C0 17.9086 17.9087 0 40 0C62.0913 0 80 17.9086 80 40Z\\\"\\r\\n                                      fill=\\\"#0C0C0C\\\" fill-opacity=\\\"1.000000\\\" fill-rule=\\\"evenodd\\\"/>\\r\\n                                <path class=\\\"stroke-color\\\" id=\\\"Vector\\\"\\r\\n                                      d=\\\"M45.4268 49.0863C43.2417 51.9237 42.1494 53.3424 40.7261 53.6057C40.272 53.6897 39.8062 53.6897 39.3521 53.6057C37.9287 53.3424 36.8364 51.9237 34.6514 49.0863L26.5737 38.5968C25.0811 36.658 24.3345 35.6886 24.2339 34.5976C24.2017 34.243 24.2192 33.8857 24.2866 33.5361C24.4941 32.4604 25.3325 31.5694 27.0098 29.7875L30.4697 26.1112C31.3506 25.1754 31.791 24.7075 32.3398 24.4152C32.521 24.3185 32.7104 24.2369 32.9048 24.171C33.4941 23.9717 34.1367 23.9717 35.4214 23.9717L44.6567 23.9717C45.9414 23.9717 46.584 23.9717 47.1733 24.171C47.3677 24.2369 47.5571 24.3185 47.7383 24.4152C48.2871 24.7075 48.7275 25.1754 49.6084 26.1112L53.0684 29.7875C54.7456 31.5694 55.584 32.4603 55.7915 33.5361C55.8589 33.8857 55.8765 34.243 55.8442 34.5976C55.7437 35.6886 54.9971 36.658 53.5044 38.5968L45.4268 49.0863ZM34.3726 39.0238L30.5947 34.0064L32.3384 31.9901C33.2266 30.9633 33.6704 30.4498 34.2402 30.1277C34.4282 30.0213 34.6255 29.9312 34.8291 29.8585C35.4453 29.6383 36.124 29.6383 37.4819 29.6383L40.0391 29.6383\\\"\\r\\n                                      stroke=\\\"#FBFBFB\\\" stroke-opacity=\\\"1.000000\\\" stroke-width=\\\"1.500000\\\"\\r\\n                                      stroke-linejoin=\\\"round\\\" stroke-linecap=\\\"round\\\"/>\\r\\n                            </svg>\\r\\n                        </div>\\r\\n                        <div class=\\\"services__title\\\">Brand Identity</div>\\r\\n                        <div class=\\\"services__description\\\">\\r\\n                            It involves creating a unique and recognizable identity that sets the brand apart from\\r\\n                            competitors and resonates with the target audience.\\r\\n                        </div>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </section>\\r\\n\\r\\n        <section class=\\\"about\\\">\\r\\n            <div class=\\\"about__container _container\\\">\\r\\n                <div class=\\\"about-gallery__block _scr-item\\\">\\r\\n                    <div class=\\\"gallery__img gallery__image1\\\">\\r\\n                        <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_8___ + \"\\\" alt=\\\"img1\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"gallery__img gallery__image2\\\">\\r\\n                        <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_9___ + \"\\\" alt=\\\"img2\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"gallery__img gallery__image3\\\">\\r\\n                        <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_10___ + \"\\\" alt=\\\"img3\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"about-content__block _scr-item\\\">\\r\\n                    <div class=\\\"about__description section__description\\\">\\r\\n                        About us\\r\\n                    </div>\\r\\n                    <div class=\\\"about__title section__title _scr-item\\\">\\r\\n                        <h2>\\r\\n                            The core mission behind all our work\\r\\n                        </h2>\\r\\n                    </div>\\r\\n                    <div class=\\\"about__text _scr-item\\\">\\r\\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit metus ut tortor purus tincidunt sed\\r\\n                        lectus ut eros, turpis tincidunt id.\\r\\n                    </div>\\r\\n                    <div class=\\\"about__statistic\\\">\\r\\n                        <div class=\\\"statistic-block\\\">\\r\\n                            <div class=\\\"statistic-block__value\\\">330 +</div>\\r\\n                            <div class=\\\"statistic-block__text\\\">Companies helped</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"statistic-block\\\">\\r\\n                            <div class=\\\"statistic-block__value\\\">230 +</div>\\r\\n                            <div class=\\\"statistic-block__text\\\">Revenue generated</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"about__button\\\">\\r\\n                        <a href=\\\"#\\\">Start your Free Trial</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </section>\\r\\n\\r\\n        <section class=\\\"process\\\">\\r\\n            <div class=\\\"process__container _container\\\">\\r\\n                <div class=\\\"process__description section__description\\\">\\r\\n                    Process\\r\\n                </div>\\r\\n                <div class=\\\"process__title section__title\\\">\\r\\n                    <h2>Process that moves things forward</h2>\\r\\n                </div>\\r\\n                <div class=\\\"process-road__block _scr-item\\\">\\r\\n                    <div class=\\\"road-card\\\">\\r\\n                        <div class=\\\"road-card__header\\\">\\r\\n                            <div class=\\\"road-card__ico\\\">\\r\\n\\r\\n                                <svg width=\\\"83.000000\\\" height=\\\"83.000000\\\" viewBox=\\\"0 0 83 83\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\r\\n                                    <defs/>\\r\\n                                    <path id=\\\"Vector\\\" d=\\\"M80.44 41.33C80.44 63.08 62.86 80.71 41.17 80.71C19.48 80.71 1.9 63.08 1.9 41.33C1.9 19.58 19.48 1.95 41.17 1.95C62.86 1.95 80.44 19.58 80.44 41.33Z\\\" fill=\\\"#0C0C0C\\\" fill-opacity=\\\"0.900000\\\" fill-rule=\\\"evenodd\\\"/>\\r\\n                                    <path id=\\\"Vector\\\" d=\\\"M41.17 82.62C33.02 82.62 25.05 80.21 18.27 75.67C11.49 71.13 6.2 64.68 3.08 57.13C-0.04 49.58 -0.87 41.28 0.72 33.26C2.31 25.24 6.23 17.88 11.99 12.1C17.75 6.31 25.1 2.38 33.09 0.78C41.08 -0.82 49.37 0 56.9 3.13C64.43 6.25 70.87 11.55 75.4 18.34C79.93 25.14 82.35 33.13 82.35 41.3C82.34 52.25 78 62.75 70.28 70.5C62.56 78.24 52.09 82.6 41.17 82.62ZM41.17 3.83C33.77 3.83 26.53 6.03 20.37 10.16C14.22 14.28 9.42 20.14 6.59 27C3.76 33.86 3.01 41.4 4.46 48.69C5.9 55.97 9.47 62.65 14.7 67.9C19.94 73.15 26.61 76.73 33.87 78.17C41.13 79.62 48.66 78.88 55.5 76.04C62.34 73.2 68.18 68.39 72.29 62.21C76.41 56.04 78.6 48.79 78.6 41.36C78.6 36.43 77.64 31.55 75.75 27C73.87 22.45 71.12 18.31 67.64 14.82C64.16 11.34 60.04 8.57 55.5 6.69C50.96 4.8 46.09 3.83 41.17 3.83Z\\\" fill=\\\"#FFFFFF\\\" fill-opacity=\\\"1.000000\\\" fill-rule=\\\"nonzero\\\"/>\\r\\n                                    <path id=\\\"Vector\\\" d=\\\"M48.84 53.37L34.11 53.37M48.84 55.82C48.84 58.11 48.84 59.25 48.47 60.16C47.97 61.36 47.02 62.32 45.81 62.82C44.91 63.19 43.77 63.19 41.48 63.19C39.19 63.19 38.04 63.19 37.14 62.82C35.94 62.32 34.98 61.36 34.48 60.16C34.11 59.25 34.11 58.11 34.11 55.82L34.11 53.37L34.11 50.89C34.11 50.11 33.86 49.34 33.4 48.7L29.23 42.9C22.04 32.92 29.17 18.99 41.48 18.99C53.78 18.99 60.91 32.92 53.73 42.9L49.55 48.7C49.09 49.34 48.84 50.11 48.84 50.89L48.84 53.37L48.84 55.82ZM45.16 39.86L41.48 46L37.79 \\\" stroke=\\\"#FBFBFB\\\" stroke-opacity=\\\"1.000000\\\" stroke-width=\\\"1.500000\\\" stroke-linejoin=\\\"round\\\" stroke-linecap=\\\"round\\\"/>\\r\\n                                </svg>\\r\\n                            </div>\\r\\n                            <div class=\\\"road-card__title\\\">Ideate</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"road__text\\\">\\r\\n                            The ideation process is a crucial phase in the design process where creative thinking and brainstorming\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"road-card animate__delay-1s\\\">\\r\\n                        <div class=\\\"road-card__header\\\">\\r\\n                            <div class=\\\"road-card__ico\\\">\\r\\n                                <svg width=\\\"82.000000\\\" height=\\\"82.000000\\\" viewBox=\\\"0 0 82 82\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\r\\n                                    <defs/>\\r\\n                                    <path id=\\\"Vector\\\" d=\\\"M79.54 40.37C79.54 62.11 61.96 79.74 40.28 79.74C18.59 79.74 1.01 62.11 1.01 40.37C1.01 18.62 18.59 0.99 40.28 0.99C61.96 0.99 79.54 18.62 79.54 40.37Z\\\" fill=\\\"#0C0C0C\\\" fill-opacity=\\\"0.900000\\\" fill-rule=\\\"evenodd\\\"/>\\r\\n                                    <path id=\\\"Vector\\\" d=\\\"\\\" fill=\\\"#FBFBFB\\\" fill-opacity=\\\"1.000000\\\" fill-rule=\\\"evenodd\\\"/>\\r\\n                                    <path id=\\\"Vector\\\" d=\\\"M40.31 81.68C32.16 81.69 24.19 79.27 17.41 74.74C10.63 70.2 5.34 63.75 2.22 56.2C-0.91 48.65 -1.73 40.34 -0.14 32.33C1.44 24.31 5.37 16.94 11.13 11.16C16.89 5.38 24.23 1.44 32.23 -0.15C40.22 -1.75 48.51 -0.93 56.04 2.19C63.57 5.32 70.01 10.61 74.54 17.41C79.07 24.2 81.48 32.19 81.48 40.37C81.48 51.32 77.14 61.82 69.42 69.56C61.7 77.31 51.23 81.67 40.31 81.68ZM40.31 2.9C32.9 2.9 25.67 5.1 19.51 9.22C13.36 13.35 8.56 19.21 5.73 26.07C2.89 32.92 2.15 40.47 3.59 47.75C5.04 55.03 8.6 61.72 13.84 66.97C19.07 72.22 25.74 75.79 33.01 77.24C40.27 78.69 47.79 77.95 54.63 75.11C61.47 72.26 67.32 67.45 71.43 61.28C75.54 55.11 77.74 47.85 77.74 40.43C77.74 35.5 76.77 30.62 74.89 26.07C73.01 21.51 70.25 17.38 66.78 13.89C63.3 10.41 59.17 7.64 54.63 5.75C50.09 3.87 45.22 2.9 40.31 2.9Z\\\" fill=\\\"#FFFFFF\\\" fill-opacity=\\\"1.000000\\\" fill-rule=\\\"nonzero\\\"/>\\r\\n                                    <path id=\\\"Vector\\\" d=\\\"M42.85 25.99C47.25 25.99 49.45 25.99 51.19 26.71C53.5 27.67 55.34 29.51 56.3 31.82C57.02 33.56 57.02 35.76 57.02 40.16C57.02 44.56 57.02 46.76 56.3 48.5C55.34 50.81 53.5 52.65 51.19 53.61C49.45 54.33 47.25 54.33 42.85 54.33L37.18 54.33C32.78 54.33 30.58 54.33 28.84 53.61C26.53 52.65 24.69 50.81 23.73 48.5C23.01 46.76 23.01 44.56 23.01 40.16C23.01 35.76 23.01 33.56 23.73 31.82C24.69 29.51 26.53 27.67 28.84 26.71C30.58 25.99 32.78 25.99 37.18 25.99L42.85 25.99Z\\\" stroke=\\\"#FBFBFB\\\" stroke-opacity=\\\"1.000000\\\" stroke-width=\\\"1.500000\\\" stroke-linejoin=\\\"round\\\"/>\\r\\n                                    <path id=\\\"Vector\\\" d=\\\"M23.01 32.6L29.58 37.71C34.02 41.16 36.24 42.89 38.77 43.22C39.6 43.33 40.44 43.33 41.26 43.22C43.8 42.89 46.02 41.16 50.46 37.71L57.02 \\\" stroke=\\\"#FBFBFB\\\" stroke-opacity=\\\"1.000000\\\" stroke-width=\\\"1.500000\\\" stroke-linejoin=\\\"round\\\"/>\\r\\n                                </svg>\\r\\n                            </div>\\r\\n                            <div class=\\\"road-card__title\\\">Reserach</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"road__text\\\">\\r\\n                            Research is a critical component of the design process, helping designers understand the problem\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"road-card animate__delay-2s\\\">\\r\\n                        <div class=\\\"road-card__header\\\">\\r\\n                            <div class=\\\"road-card__ico\\\">\\r\\n                                <svg width=\\\"82.000000\\\" height=\\\"83.000000\\\" viewBox=\\\"0 0 82 83\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\r\\n                                    <defs/>\\r\\n                                    <path id=\\\"Vector\\\" d=\\\"M79.54 40.37C79.54 62.11 61.96 79.74 40.28 79.74C18.59 79.74 1.01 62.11 1.01 40.37C1.01 18.62 18.59 0.99 40.28 0.99C61.96 0.99 79.54 18.62 79.54 40.37Z\\\" fill=\\\"#0C0C0C\\\" fill-opacity=\\\"0.900000\\\" fill-rule=\\\"evenodd\\\"/>\\r\\n                                    <path id=\\\"Vector\\\" d=\\\"M25.01 30.53L28.31 30.53M37.38 30.53L54.7 30.53M25.01 51.14L28.31 51.14M37.38 51.14L54.7 51.14M54.7 40.83L51.4 40.83M42.33 40.83L25.01 40.83M51.4 40.83C51.4 38.33 49.37 36.3 46.87 36.3C44.36 36.3 42.33 38.33 42.33 40.83C42.33 43.34 44.36 45.37 46.87 45.37C49.37 45.37 51.4 43.34 51.4 40.83ZM28.31 51.14C28.31 48.64 30.34 46.61 32.85 46.61C35.35 46.61 37.38 48.64 37.38 51.14C37.38 53.65 35.35 55.68 32.85 55.68C30.34 55.68 28.31 53.65 28.31 51.14ZM28.31 30.53C28.31 28.02 30.34 25.99 32.85 25.99C35.35 25.99 37.38 28.02 37.38 30.53C37.38 33.03 35.35 35.06 32.85 35.06C30.34 35.06 28.31 33.03 28.31 30.53Z\\\" stroke=\\\"#FBFBFB\\\" stroke-opacity=\\\"1.000000\\\" stroke-width=\\\"1.500000\\\" stroke-linejoin=\\\"round\\\"/>\\r\\n                                    <path id=\\\"Vector\\\" d=\\\"M40.21 82.62C32.06 82.62 24.1 80.2 17.32 75.66C10.55 71.12 5.27 64.67 2.15 57.12C-0.97 49.57 -1.79 41.26 -0.2 33.25C1.39 25.23 5.32 17.87 11.08 12.09C16.84 6.31 24.18 2.38 32.17 0.78C40.16 -0.81 48.45 0.01 55.98 3.13C63.51 6.26 69.94 11.56 74.47 18.35C79 25.15 81.41 33.13 81.41 41.31C81.39 52.26 77.05 62.76 69.33 70.5C61.6 78.25 51.13 82.61 40.21 82.62ZM40.21 3.84C32.81 3.84 25.57 6.04 19.42 10.16C13.26 14.29 8.47 20.15 5.63 27.01C2.8 33.86 2.06 41.41 3.5 48.69C4.95 55.97 8.51 62.66 13.75 67.91C18.98 73.16 25.65 76.73 32.91 78.18C40.17 79.63 47.69 78.89 54.53 76.04C61.37 73.2 67.22 68.39 71.33 62.22C75.44 56.05 77.64 48.79 77.64 41.37C77.64 36.44 76.67 31.56 74.79 27.01C72.91 22.45 70.15 18.31 66.68 14.83C63.2 11.34 59.07 8.58 54.53 6.69C49.99 4.81 45.13 3.84 40.21 3.84Z\\\" fill=\\\"#FFFFFF\\\" fill-opacity=\\\"1.000000\\\" fill-rule=\\\"nonzero\\\"/>\\r\\n                                </svg>\\r\\n                            </div>\\r\\n                            <div class=\\\"road-card__title\\\">Create</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"road__text\\\">\\r\\n                            Designing a process involves several key steps to ensure clarity, efficiency, successful implementation\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"road-card animate__delay-3s\\\">\\r\\n                        <div class=\\\"road-card__header\\\">\\r\\n                            <div class=\\\"road-card__ico\\\">\\r\\n                                <svg width=\\\"83.000000\\\" height=\\\"83.000000\\\" viewBox=\\\"0 0 83 83\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\r\\n                                    <defs/>\\r\\n                                    <path id=\\\"Vector\\\" d=\\\"M80.54 40.37C80.54 62.11 62.96 79.74 41.28 79.74C19.59 79.74 2.01 62.11 2.01 40.37C2.01 18.62 19.59 0.99 41.28 0.99C62.96 0.99 80.54 18.62 80.54 40.37Z\\\" fill=\\\"#0C0C0C\\\" fill-opacity=\\\"0.900000\\\" fill-rule=\\\"evenodd\\\"/>\\r\\n                                    <path id=\\\"Vector\\\" d=\\\"M41.13 82.62C32.98 82.62 25.01 80.2 18.24 75.66C11.46 71.12 6.18 64.66 3.06 57.11C-0.06 49.56 -0.87 41.26 0.72 33.24C2.31 25.23 6.23 17.87 11.99 12.09C17.75 6.31 25.1 2.37 33.09 0.78C41.08 -0.81 49.36 0 56.89 3.13C64.42 6.26 70.86 11.55 75.38 18.35C79.91 25.14 82.33 33.13 82.33 41.3C82.31 52.26 77.96 62.76 70.24 70.5C62.52 78.25 52.05 82.6 41.13 82.62ZM41.13 3.83C33.72 3.83 26.49 6.03 20.33 10.16C14.18 14.28 9.38 20.14 6.55 27C3.72 33.86 2.97 41.41 4.42 48.69C5.86 55.97 9.43 62.66 14.66 67.9C19.9 73.15 26.56 76.73 33.82 78.18C41.08 79.62 48.61 78.88 55.45 76.04C62.29 73.2 68.13 68.39 72.25 62.22C76.36 56.05 78.55 48.79 78.55 41.37C78.55 36.44 77.58 31.56 75.7 27C73.82 22.45 71.07 18.31 67.59 14.83C64.12 11.34 59.99 8.58 55.45 6.69C50.91 4.8 46.04 3.83 41.13 3.83Z\\\" fill=\\\"#FFFFFF\\\" fill-opacity=\\\"1.000000\\\" fill-rule=\\\"nonzero\\\"/>\\r\\n                                    <path id=\\\"Vector\\\" d=\\\"M40.86 55.68C32.66 55.68 26.01 49.03 26.01 40.83C26.01 32.64 32.66 25.99 40.86 25.99C49.05 25.99 55.7 32.64 55.7 40.83C55.7 49.03 49.05 55.68 40.86 55.68ZM32.41 40.42L35.3 43.31L41.89 36.71M41.07 44.13L42.72 45.78L49.32 \\\" stroke=\\\"#FBFBFB\\\" stroke-opacity=\\\"1.000000\\\" stroke-width=\\\"1.793597\\\" stroke-linejoin=\\\"round\\\"/>\\r\\n                                </svg>\\r\\n                            </div>\\r\\n                            <div class=\\\"road-card__title\\\">Testing</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"road__text\\\">\\r\\n                            Testing is a crucial phase in the design process to ensure that the product or system meets the specified requirements\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </section>\\r\\n\\r\\n        <section class=\\\"showcase\\\">\\r\\n            <div class=\\\"showcase__container _container\\\">\\r\\n                <div class=\\\"showcase__title section__title\\\">\\r\\n                    <h2>Recent Showcase</h2>\\r\\n                </div>\\r\\n                <div class=\\\"design-block__button\\\">\\r\\n                    <a href=\\\"#\\\">Start your Free Trial</a>\\r\\n                </div>\\r\\n                <div class=\\\"design-block\\\">\\r\\n                    <div class=\\\"design-block__column1\\\">\\r\\n                        <div class=\\\"design-block__card\\\">\\r\\n                            <a href=\\\"#\\\" class=\\\"card__link\\\">\\r\\n                                <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_11___ + \"\\\" alt=\\\"Image\\\" class=\\\"card__image\\\">\\r\\n                                <div class=\\\"card__overlay\\\">\\r\\n                                    <span class=\\\"card__text\\\">Creative  UI design</span>\\r\\n                                </div>\\r\\n                            </a>\\r\\n                            <a href=\\\"#\\\" class=\\\"card__link\\\">\\r\\n                                <div class=\\\"card__description\\\">\\r\\n                                    Web UI design\\r\\n                                </div>\\r\\n                            </a>\\r\\n                            <div class=\\\"card__about\\\">\\r\\n                                Creative  UI design\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"design-block__card\\\">\\r\\n                            <a href=\\\"#\\\" class=\\\"card__link\\\">\\r\\n                                <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_12___ + \"\\\" alt=\\\"Image\\\" class=\\\"card__image\\\">\\r\\n                                <div class=\\\"card__overlay\\\">\\r\\n                                    <span class=\\\"card__text\\\">Creative Rebranding for logo</span>\\r\\n                                </div>\\r\\n                            </a>\\r\\n                            <a href=\\\"#\\\" class=\\\"card__link\\\">\\r\\n                                <div class=\\\"card__description\\\">\\r\\n                                    UI Design\\r\\n                                </div>\\r\\n                            </a>\\r\\n                            <div class=\\\"card__about\\\">\\r\\n                                Creative Rebranding for logo\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"design-block__column2\\\">\\r\\n                        <div class=\\\"design-block__card\\\">\\r\\n                            <a href=\\\"#\\\" class=\\\"card__link\\\">\\r\\n                                <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_13___ + \"\\\" alt=\\\"Image\\\" class=\\\"card__image\\\">\\r\\n                                <div class=\\\"card__overlay\\\">\\r\\n                                    <span class=\\\"card__text\\\">Social Media Marketing</span>\\r\\n                                </div>\\r\\n                            </a>\\r\\n                            <a href=\\\"#\\\" class=\\\"card__link\\\">\\r\\n                                <div class=\\\"card__description\\\">\\r\\n                                    To design Digital Strategy\\r\\n                                </div>\\r\\n                            </a>\\r\\n                            <div class=\\\"card__about\\\">\\r\\n                                Social Media Marketing\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"design-block__card\\\">\\r\\n                            <a href=\\\"#\\\" class=\\\"card__link\\\">\\r\\n                                <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_14___ + \"\\\" alt=\\\"Image\\\" class=\\\"card__image\\\">\\r\\n                                <div class=\\\"card__overlay\\\">\\r\\n                                    <span class=\\\"card__text\\\">Creative Rebranding for logo</span>\\r\\n                                </div>\\r\\n                            </a>\\r\\n                            <a href=\\\"#\\\" class=\\\"card__link\\\">\\r\\n                                <div class=\\\"card__description\\\">\\r\\n                                    UI Design\\r\\n                                </div>\\r\\n                            </a>\\r\\n                            <div class=\\\"card__about\\\">\\r\\n                                Creative Rebranding for logo\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </section>\\r\\n\\r\\n        <section class=\\\"authors\\\">\\r\\n            <div class=\\\"authors__container _container\\\">\\r\\n                <div class=\\\"authors__wrapper\\\">\\r\\n\\r\\n                    <div class=\\\"swiper\\\">\\r\\n                        <!-- Additional required wrapper -->\\r\\n                        <div class=\\\"swiper-wrapper\\\">\\r\\n                            <!-- Slides -->\\r\\n                            <div class=\\\"swiper-slide\\\">\\r\\n                                <div class=\\\"slide_avatar\\\">\\r\\n                                    <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_15___ + \"\\\" alt=\\\"avatar_1\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"slider_description\\\">\\r\\n                                    “Be genuine in your assessment, and provide constructive feedback to benefit both potential customers and the company providing the product or service.”\\r\\n                                </div>\\r\\n                                <div class=\\\"slider_job\\\">\\r\\n                                    <span class=\\\"job_name\\\">Jacqueline Miller</span>\\r\\n                                    <span class=\\\"job_profession\\\">CEO of an eduport</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"swiper-slide\\\">\\r\\n                                <div class=\\\"slide_avatar\\\">\\r\\n                                    <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_16___ + \"\\\" alt=\\\"avatar_2\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"slider_description\\\">\\r\\n                                    “Success is not the key to happiness. Happiness is the key to success. If you love what you are doing, you will be successful.”\\r\\n                                </div>\\r\\n                                <div class=\\\"slider_job\\\">\\r\\n                                    <span class=\\\"job_name\\\">Alexander Brooks</span>\\r\\n                                    <span class=\\\"job_profession\\\">Chief Financial Officer (CFO)</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"slider_buttons\\\">\\r\\n                            <div class=\\\"swiper-button-prev\\\"></div>\\r\\n                            <div class=\\\"swiper-button-next\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </section>\\r\\n    </main>\\r\\n\\r\\n\\r\\n    <footer class=\\\"footer\\\">\\r\\n        <div class=\\\"footer__container _container\\\">\\r\\n            <div class=\\\"footer-pages\\\">\\r\\n                <div class=\\\"footer-pages__block footer__column column__1\\\">\\r\\n                    <div class=\\\"pages-block__logo\\\">\\r\\n                        <div class=\\\"pages-block__image\\\">\\r\\n                            <img class=\\\"description__logo\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_17___ + \"\\\" alt=\\\"logo\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"pages-block__text\\\">\\r\\n                            <span>Canvix</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"pages-block__description\\\">\\r\\n                        We’re a team of strategic creator and digital innovator, united focus in our pursuit of mastery\\r\\n                        and joyful.\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"footer__column column__2\\\">\\r\\n                    <div class=\\\"column__title\\\">\\r\\n                        <h3>Pages</h3>\\r\\n                    </div>\\r\\n                    <div class=\\\"pages-links\\\">\\r\\n                        <div class=\\\"link__item\\\">\\r\\n                            <a href=\\\"#\\\">Home</a>\\r\\n                        </div>\\r\\n                        <div class=\\\"link__item\\\">\\r\\n                            <a href=\\\"#\\\">Home 2</a>\\r\\n                        </div>\\r\\n                        <div class=\\\"link__item\\\">\\r\\n                            <a href=\\\"#\\\">About</a>\\r\\n                        </div>\\r\\n                        <div class=\\\"link__item\\\">\\r\\n                            <a href=\\\"#\\\">Conatct Us</a>\\r\\n                        </div>\\r\\n                        <div class=\\\"link__item\\\">\\r\\n                            <a href=\\\"#\\\">Portfolio</a>\\r\\n                        </div>\\r\\n                        <div class=\\\"link__item\\\">\\r\\n                            <a href=\\\"#\\\">Portfolio Single</a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"footer__column column__3\\\">\\r\\n                    <div class=\\\"column__title\\\">\\r\\n                        <h3>Utility Pages</h3>\\r\\n                    </div>\\r\\n                    <div class=\\\"pages-links\\\">\\r\\n                        <div class=\\\"link__item\\\">\\r\\n                            <a href=\\\"#\\\">Style Guide</a>\\r\\n                        </div>\\r\\n                        <div class=\\\"link__item\\\">\\r\\n                            <a href=\\\"#\\\">Instruction</a>\\r\\n                        </div>\\r\\n                        <div class=\\\"link__item\\\">\\r\\n                            <a href=\\\"#\\\">License</a>\\r\\n                        </div>\\r\\n                        <div class=\\\"link__item\\\">\\r\\n                            <a href=\\\"#\\\">Changelog</a>\\r\\n                        </div>\\r\\n                        <div class=\\\"link__item\\\">\\r\\n                            <a href=\\\"#\\\">Error 404 </a>\\r\\n                        </div>\\r\\n                        <div class=\\\"link__item\\\">\\r\\n                            <a href=\\\"#\\\">Password Protected</a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"pages-subscribe footer__column column__4\\\">\\r\\n                    <div class=\\\"column__title\\\">\\r\\n                        <h3>Subscribe</h3>\\r\\n                    </div>\\r\\n                    <div class=\\\"subscribe__form\\\">\\r\\n                        <form action=\\\"\\\" class=\\\"form__mail js-form\\\">\\r\\n                            <input type=\\\"email\\\" class=\\\"mail input js-input js-input-email\\\" name=\\\"email\\\"\\r\\n                                   placeholder=\\\"Enter your email here\\\">\\r\\n                            <button type=\\\"submit\\\" class=\\\"submit\\\">Subscribe</button>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"footer-block\\\">\\r\\n                <div class=\\\"footer__column\\\">\\r\\n                    <div class=\\\"column__title copy--title\\\">\\r\\n                        <h3>Copyright by</h3>\\r\\n                    </div>\\r\\n                    <div class=\\\"link__item\\\">\\r\\n                        Designed by\\r\\n                        <a href=\\\"http://Iconstica.com\\\"> Iconstica.com</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"footer__column\\\">\\r\\n                    <div class=\\\"column__title\\\">\\r\\n                        <h3>Contact Us</h3>\\r\\n                    </div>\\r\\n                    <div class=\\\"link__item\\\">\\r\\n                        <a href=\\\"#\\\">+0 12 457 4578</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"footer__column\\\">\\r\\n                    <div class=\\\"column__title\\\">\\r\\n                        <h3>Address</h3>\\r\\n                    </div>\\r\\n                    <div class=\\\"link__item\\\">\\r\\n                        <a href=\\\"#\\\">119 Tanglewood Lane Gulfport, MS 39503</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"footer-soc footer__column\\\">\\r\\n                    <div class=\\\"footer-social\\\">\\r\\n                        <a href=\\\"#\\\" class=\\\"social__link\\\">\\r\\n                            <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_18___ + \"\\\" alt=\\\"facebook\\\">\\r\\n                        </a>\\r\\n                    </div>\\r\\n                    <div class=\\\"footer-social\\\">\\r\\n                        <a href=\\\"#\\\" class=\\\"social__link\\\">\\r\\n                            <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_19___ + \"\\\" alt=\\\"instagram\\\">\\r\\n                        </a>\\r\\n                    </div>\\r\\n                    <div class=\\\"footer-social\\\">\\r\\n                        <a href=\\\"#\\\" class=\\\"social__link\\\">\\r\\n                            <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_20___ + \"\\\" alt=\\\"linkedin\\\">\\r\\n                        </a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"footer-created\\\">\\r\\n                created by Igor Stadnik\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </footer>\\r\\n\\r\\n</div>\\r\\n</body>\\r\\n</html>\";\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);\n\n//# sourceURL=webpack://name-project/./src/index.html?");

/***/ }),

/***/ "./node_modules/html-loader/dist/runtime/getUrl.js":
/*!*********************************************************!*\
  !*** ./node_modules/html-loader/dist/runtime/getUrl.js ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};\n\n//# sourceURL=webpack://name-project/./node_modules/html-loader/dist/runtime/getUrl.js?");

/***/ }),

/***/ "./node_modules/swiper/swiper.css":
/*!****************************************!*\
  !*** ./node_modules/swiper/swiper.css ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://name-project/./node_modules/swiper/swiper.css?");

/***/ }),

/***/ "./src/scss/style.scss":
/*!*****************************!*\
  !*** ./src/scss/style.scss ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://name-project/./src/scss/style.scss?");

/***/ }),

/***/ "./src/temp/burger_header/burger.scss":
/*!********************************************!*\
  !*** ./src/temp/burger_header/burger.scss ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://name-project/./src/temp/burger_header/burger.scss?");

/***/ }),

/***/ "./src/temp/slider-swiper/swiper.scss":
/*!********************************************!*\
  !*** ./src/temp/slider-swiper/swiper.scss ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://name-project/./src/temp/slider-swiper/swiper.scss?");

/***/ }),

/***/ "./node_modules/smooth-scroll/dist/smooth-scroll.polyfills.min.js":
/*!************************************************************************!*\
  !*** ./node_modules/smooth-scroll/dist/smooth-scroll.polyfills.min.js ***!
  \************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! smooth-scroll v16.1.3 | (c) 2020 Chris Ferdinandi | MIT License | http://github.com/cferdinandi/smooth-scroll */\nwindow.Element&&!Element.prototype.closest&&(Element.prototype.closest=function(e){var t,n=(this.document||this.ownerDocument).querySelectorAll(e),o=this;do{for(t=n.length;0<=--t&&n.item(t)!==o;);}while(t<0&&(o=o.parentElement));return o}),(function(){if(\"function\"==typeof window.CustomEvent)return;function e(e,t){t=t||{bubbles:!1,cancelable:!1,detail:void 0};var n=document.createEvent(\"CustomEvent\");return n.initCustomEvent(e,t.bubbles,t.cancelable,t.detail),n}e.prototype=window.Event.prototype,window.CustomEvent=e})(),(function(){for(var r=0,e=[\"ms\",\"moz\",\"webkit\",\"o\"],t=0;t<e.length&&!window.requestAnimationFrame;++t)window.requestAnimationFrame=window[e[t]+\"RequestAnimationFrame\"],window.cancelAnimationFrame=window[e[t]+\"CancelAnimationFrame\"]||window[e[t]+\"CancelRequestAnimationFrame\"];window.requestAnimationFrame||(window.requestAnimationFrame=function(e,t){var n=(new Date).getTime(),o=Math.max(0,16-(n-r)),a=window.setTimeout((function(){e(n+o)}),o);return r=n+o,a}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(e){clearTimeout(e)})})(),(function(e,t){ true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return t(e)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):0})(\"undefined\"!=typeof __webpack_require__.g?__webpack_require__.g:\"undefined\"!=typeof window?window:this,(function(M){\"use strict\";var q={ignore:\"[data-scroll-ignore]\",header:null,topOnEmptyHash:!0,speed:500,speedAsDuration:!1,durationMax:null,durationMin:null,clip:!0,offset:0,easing:\"easeInOutCubic\",customEasing:null,updateURL:!0,popstate:!0,emitEvents:!0},I=function(){var n={};return Array.prototype.forEach.call(arguments,(function(e){for(var t in e){if(!e.hasOwnProperty(t))return;n[t]=e[t]}})),n},r=function(e){\"#\"===e.charAt(0)&&(e=e.substr(1));for(var t,n=String(e),o=n.length,a=-1,r=\"\",i=n.charCodeAt(0);++a<o;){if(0===(t=n.charCodeAt(a)))throw new InvalidCharacterError(\"Invalid character: the input contains U+0000.\");1<=t&&t<=31||127==t||0===a&&48<=t&&t<=57||1===a&&48<=t&&t<=57&&45===i?r+=\"\\\\\"+t.toString(16)+\" \":r+=128<=t||45===t||95===t||48<=t&&t<=57||65<=t&&t<=90||97<=t&&t<=122?n.charAt(a):\"\\\\\"+n.charAt(a)}return\"#\"+r},F=function(){return Math.max(document.body.scrollHeight,document.documentElement.scrollHeight,document.body.offsetHeight,document.documentElement.offsetHeight,document.body.clientHeight,document.documentElement.clientHeight)},L=function(e){return e?(t=e,parseInt(M.getComputedStyle(t).height,10)+e.offsetTop):0;var t},x=function(e,t,n){0===e&&document.body.focus(),n||(e.focus(),document.activeElement!==e&&(e.setAttribute(\"tabindex\",\"-1\"),e.focus(),e.style.outline=\"none\"),M.scrollTo(0,t))},H=function(e,t,n,o){if(t.emitEvents&&\"function\"==typeof M.CustomEvent){var a=new CustomEvent(e,{bubbles:!0,detail:{anchor:n,toggle:o}});document.dispatchEvent(a)}};return function(o,e){var b,a,A,O,C={};C.cancelScroll=function(e){cancelAnimationFrame(O),O=null,e||H(\"scrollCancel\",b)},C.animateScroll=function(a,r,e){C.cancelScroll();var i=I(b||q,e||{}),c=\"[object Number]\"===Object.prototype.toString.call(a),t=c||!a.tagName?null:a;if(c||t){var s=M.pageYOffset;i.header&&!A&&(A=document.querySelector(i.header));var n,o,u,l,m,d,f,h,p=L(A),g=c?a:(function(e,t,n,o){var a=0;if(e.offsetParent)for(;a+=e.offsetTop,e=e.offsetParent;);return a=Math.max(a-t-n,0),o&&(a=Math.min(a,F()-M.innerHeight)),a})(t,p,parseInt(\"function\"==typeof i.offset?i.offset(a,r):i.offset,10),i.clip),y=g-s,v=F(),w=0,S=(n=y,u=(o=i).speedAsDuration?o.speed:Math.abs(n/1e3*o.speed),o.durationMax&&u>o.durationMax?o.durationMax:o.durationMin&&u<o.durationMin?o.durationMin:parseInt(u,10)),E=function(e){var t,n,o;l||(l=e),w+=e-l,d=s+y*(n=m=1<(m=0===S?0:w/S)?1:m,\"easeInQuad\"===(t=i).easing&&(o=n*n),\"easeOutQuad\"===t.easing&&(o=n*(2-n)),\"easeInOutQuad\"===t.easing&&(o=n<.5?2*n*n:(4-2*n)*n-1),\"easeInCubic\"===t.easing&&(o=n*n*n),\"easeOutCubic\"===t.easing&&(o=--n*n*n+1),\"easeInOutCubic\"===t.easing&&(o=n<.5?4*n*n*n:(n-1)*(2*n-2)*(2*n-2)+1),\"easeInQuart\"===t.easing&&(o=n*n*n*n),\"easeOutQuart\"===t.easing&&(o=1- --n*n*n*n),\"easeInOutQuart\"===t.easing&&(o=n<.5?8*n*n*n*n:1-8*--n*n*n*n),\"easeInQuint\"===t.easing&&(o=n*n*n*n*n),\"easeOutQuint\"===t.easing&&(o=1+--n*n*n*n*n),\"easeInOutQuint\"===t.easing&&(o=n<.5?16*n*n*n*n*n:1+16*--n*n*n*n*n),t.customEasing&&(o=t.customEasing(n)),o||n),M.scrollTo(0,Math.floor(d)),(function(e,t){var n=M.pageYOffset;if(e==t||n==t||(s<t&&M.innerHeight+n)>=v)return C.cancelScroll(!0),x(a,t,c),H(\"scrollStop\",i,a,r),!(O=l=null)})(d,g)||(O=M.requestAnimationFrame(E),l=e)};0===M.pageYOffset&&M.scrollTo(0,0),f=a,h=i,c||history.pushState&&h.updateURL&&history.pushState({smoothScroll:JSON.stringify(h),anchor:f.id},document.title,f===document.documentElement?\"#top\":\"#\"+f.id),\"matchMedia\"in M&&M.matchMedia(\"(prefers-reduced-motion)\").matches?x(a,Math.floor(g),!1):(H(\"scrollStart\",i,a,r),C.cancelScroll(!0),M.requestAnimationFrame(E))}};var t=function(e){if(!e.defaultPrevented&&!(0!==e.button||e.metaKey||e.ctrlKey||e.shiftKey)&&\"closest\"in e.target&&(a=e.target.closest(o))&&\"a\"===a.tagName.toLowerCase()&&!e.target.closest(b.ignore)&&a.hostname===M.location.hostname&&a.pathname===M.location.pathname&&/#/.test(a.href)){var t,n;try{t=r(decodeURIComponent(a.hash))}catch(e){t=r(a.hash)}if(\"#\"===t){if(!b.topOnEmptyHash)return;n=document.documentElement}else n=document.querySelector(t);(n=n||\"#top\"!==t?n:document.documentElement)&&(e.preventDefault(),(function(e){if(history.replaceState&&e.updateURL&&!history.state){var t=M.location.hash;t=t||\"\",history.replaceState({smoothScroll:JSON.stringify(e),anchor:t||M.pageYOffset},document.title,t||M.location.href)}})(b),C.animateScroll(n,a))}},n=function(e){if(null!==history.state&&history.state.smoothScroll&&history.state.smoothScroll===JSON.stringify(b)){var t=history.state.anchor;\"string\"==typeof t&&t&&!(t=document.querySelector(r(history.state.anchor)))||C.animateScroll(t,null,{updateURL:!1})}};C.destroy=function(){b&&(document.removeEventListener(\"click\",t,!1),M.removeEventListener(\"popstate\",n,!1),C.cancelScroll(),O=A=a=b=null)};return (function(){if(!(\"querySelector\"in document&&\"addEventListener\"in M&&\"requestAnimationFrame\"in M&&\"closest\"in M.Element.prototype))throw\"Smooth Scroll: This browser does not support the required JavaScript methods and browser APIs.\";C.destroy(),b=I(q,e||{}),A=b.header?document.querySelector(b.header):null,document.addEventListener(\"click\",t,!1),b.updateURL&&b.popstate&&M.addEventListener(\"popstate\",n,!1)})(),C}}));\n\n//# sourceURL=webpack://name-project/./node_modules/smooth-scroll/dist/smooth-scroll.polyfills.min.js?");

/***/ }),

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index.html */ \"./src/index.html\");\n/* harmony import */ var _img_icons_favicon_png__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../img/icons/favicon.png */ \"./src/img/icons/favicon.png\");\n/* harmony import */ var _scss_style_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scss/style.scss */ \"./src/scss/style.scss\");\n/* harmony import */ var _js_files_script__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../js/files/script */ \"./src/js/files/script.js\");\n/* harmony import */ var _js_files_script__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_js_files_script__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _temp_burger_header_burger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../temp/burger_header/burger */ \"./src/temp/burger_header/burger.js\");\n/* harmony import */ var _temp_burger_header_burger__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_temp_burger_header_burger__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _temp_burger_header_burger_scss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../temp/burger_header/burger.scss */ \"./src/temp/burger_header/burger.scss\");\n/* harmony import */ var _temp_slider_swiper_swiper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../temp/slider-swiper/swiper */ \"./src/temp/slider-swiper/swiper.js\");\n/* harmony import */ var _temp_scroll_scroll__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../temp/scroll/scroll */ \"./src/temp/scroll/scroll.js\");\n\r\n\r\n\r\n\r\n// import '../js/files/functions';\r\n\r\n\r\n\r\n\r\n// import '../temp/popup/popup';\r\n// import '../temp/popup/popup.scss';\r\n\r\n\r\n\r\n// import AirDatepicker from 'air-datepicker';\r\n// import 'air-datepicker/air-datepicker.css';\r\n\r\n// import Swal from 'sweetalert2/dist/sweetalert2.js';\r\n// import 'sweetalert2/src/sweetalert2.scss';\r\n\r\n// import 'animate.css';\r\n\r\n\r\n\r\n// import '../temp/tippy/tippy';\r\n\r\n// import '../temp/gsap/gsap'\r\n\r\n// import \"../temp/forms/creditcard/creditcard\";\r\n// import '../temp/forms/creditcard/creditcard.scss';\r\n\r\n// import \"../temp/forms/forms\";\r\n// import \"../temp/forms/forms.scss\";\r\n\r\n// import '../temp/filtr/filtr';\r\n// import '../temp/filtr/nouislider.min.css';\r\n\r\n\n\n//# sourceURL=webpack://name-project/./src/js/app.js?");

/***/ }),

/***/ "./src/js/files/script.js":
/*!********************************!*\
  !*** ./src/js/files/script.js ***!
  \********************************/
/***/ (() => {

eval("// Функция для добавления классов дочерним элементам\r\nfunction addAnimationClassesToChildren(block) {\r\n        block.querySelectorAll('*').forEach(child => {\r\n            child.classList.add('animate__animated', 'animate__flipInX');\r\n        });\r\n    // }\r\n}\r\n// Функция для удаления классов дочерним элементам\r\nfunction removeAnimationClassesToChildren(block) {\r\n    block.querySelectorAll('*').forEach(child => {\r\n            child.classList.remove('animate__animated', 'animate__flipInX');\r\n        });\r\n}\r\n\r\n// Получаем все элементы с классом process-road__block\r\nconst process_road_blocks = document.querySelectorAll('.process-road__block');\r\n\r\n// Перебираем каждый элемент и добавляем слушатель событий\r\nprocess_road_blocks.forEach(block => {\r\n    // Вызываем функцию для добавления классов дочерним элементам при загрузке страницы\r\n    addAnimationClassesToChildren(block);\r\n\r\n    // Добавляем слушатель события DOMContentLoaded, чтобы проверить наличие класса _active при загрузке страницы\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n        addAnimationClassesToChildren(block);\r\n    });\r\n\r\n    // Добавляем слушатель события mutation для проверки изменений DOM\r\n    const observer = new MutationObserver(mutations => {\r\n        mutations.forEach(mutation => {\r\n            if (mutation.type === 'attributes' && mutation.attributeName === 'class') {\r\n                // Проверяем, содержит ли элемент класс _active после изменения атрибутов\r\n                if (block.classList.contains('_active')) {\r\n                    // Вызываем функцию для добавления классов дочерним элементам\r\n                    addAnimationClassesToChildren(block);\r\n                } else{\r\n                    removeAnimationClassesToChildren(block);\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    // Настраиваем наблюдатель за изменениями атрибутов\r\n    observer.observe(block, { attributes: true });\r\n});\r\n\n\n//# sourceURL=webpack://name-project/./src/js/files/script.js?");

/***/ }),

/***/ "./src/temp/burger_header/burger.js":
/*!******************************************!*\
  !*** ./src/temp/burger_header/burger.js ***!
  \******************************************/
/***/ (() => {

eval("// Selection of HTML objects\r\nconst burger = document.querySelector(\".burger\");\r\nconst nav = document.querySelector(\".menu\");\r\nconst horzontanlLine =document.querySelector(\".line-2\");\r\nconst daigonalOne =document.querySelector(\".line-1\");\r\nconst daigonalTwo =document.querySelector(\".line-3\");\r\n\r\nconst menuBlock = document.querySelector('.header-menu');\r\nconst headerButton = document.querySelector('.header__button');\r\n\r\n\r\n// Defining a function\r\nfunction toggleNav() {\r\n    nav.classList.toggle(\"nav-active\");\r\n    horzontanlLine.classList.toggle(\"horizontal-line\")\r\n    daigonalOne.classList.toggle(\"diagonal-line-1\");\r\n    daigonalTwo.classList.toggle(\"diagonal-line-2\")\r\n}\r\n\r\n// Calling the function after click event occurs\r\nburger.addEventListener(\"click\", function() {\r\n    const container = document.documentElement || document.body;\r\n    container.scrollTop = 0;\r\n\r\n    if (nav.classList.contains(\"nav-active\")){\r\n        document.body.style.overflow = '';\r\n    } else {\r\n        document.body.style.overflow = 'hidden';\r\n    }\r\n    toggleNav();\r\n});\r\n\r\n//перемещение кнопки в меню бургер\r\nwindow.onload = function() {\r\n    const menu = document.querySelector('.header__menu');\r\n    const button = document.querySelector('.header__button');\r\n\r\n    function handleResize() {\r\n        if (window.innerWidth < 991) {//задать ширину для перемещения кнопки\r\n            const existingButton = document.querySelector('.header__menu .menu__link[data-type=\"header__button\"]');\r\n            if (!existingButton) {\r\n                const newLi = document.createElement('li');\r\n                newLi.classList.add('menu__link'); // Убираем 'header__button'\r\n                newLi.setAttribute('data-type', 'header__button'); // Добавляем атрибут\r\n                newLi.appendChild(button);\r\n                menu.appendChild(newLi);\r\n            }\r\n\r\n            const headerButtonBlock = document.querySelector('.header-button__block');\r\n            if (headerButtonBlock) {\r\n                headerButtonBlock.remove();\r\n            }\r\n        } else {\r\n            const headerButtonBlock = document.querySelector('.header-button__block');\r\n            if (!headerButtonBlock) {\r\n                const newButtonBlock = document.createElement('div');\r\n                newButtonBlock.classList.add('header-button__block');\r\n                newButtonBlock.appendChild(button);\r\n\r\n                const headerMenuBlock = document.querySelector('.header-menu__block');\r\n                headerMenuBlock.parentNode.insertBefore(newButtonBlock, headerMenuBlock.nextElementSibling);\r\n            } else {\r\n                const buttonLi = document.querySelector('.header__menu .menu__link[data-type=\"header__button\"]');\r\n                if (buttonLi) {\r\n                    buttonLi.remove();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleResize();\r\n    window.addEventListener('resize', handleResize);\r\n};\n\n//# sourceURL=webpack://name-project/./src/temp/burger_header/burger.js?");

/***/ }),

/***/ "./src/temp/scroll/scroll.js":
/*!***********************************!*\
  !*** ./src/temp/scroll/scroll.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var smooth_scroll__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! smooth-scroll */ \"./node_modules/smooth-scroll/dist/smooth-scroll.polyfills.min.js\");\n/* harmony import */ var smooth_scroll__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(smooth_scroll__WEBPACK_IMPORTED_MODULE_0__);\n/** Нужным блокам добавить класс _scr-item\r\n * Когда блок будет видим - к нему добавится класс active\r\n * можно анимировать появления блоков при скроле*/\r\n\r\n/** Чтобы скролить по клику на меню\r\n * ссылкам меню добавить класс _goto-block и хэш #название_класса_блока\r\n * можно задать стили для класса _active*/\r\n\r\n\r\n\r\nlet scr_body = document.querySelector('body');\r\nlet scr_blocks = document.querySelectorAll('._scr-sector');\r\nlet scr_items = document.querySelectorAll('._scr-item');\r\nlet scr_fix_block = document.querySelectorAll('._side-wrapper');\r\nlet scr_min_height = 750;\r\n\r\nlet scrolling = true;\r\nlet scrolling_full = true;\r\n\r\nlet scrollDirection = 0;\r\n\r\nlet currentScroll;\r\n\r\n//ScrollOnScroll\r\nwindow.addEventListener('scroll', scroll_scroll);\r\nfunction scroll_scroll() {\r\n\tlet src_value = currentScroll = pageYOffset;\r\n\tlet header = document.querySelector('header.header');\r\n\tif (header !== null) {\r\n\t\tif (src_value > 10) {\r\n\t\t\theader.classList.add('_scroll');\r\n\t\t} else {\r\n\t\t\theader.classList.remove('_scroll');\r\n\t\t}\r\n\t}\r\n\tif (scr_blocks.length > 0) {\r\n\t\tfor (let index = 0; index < scr_blocks.length; index++) {\r\n\t\t\tlet block = scr_blocks[index];\r\n\t\t\tlet block_offset = offset(block).top;\r\n\t\t\tlet block_height = block.offsetHeight;\r\n\r\n\t\t\t/*\r\n\t\t\tif ((src_value > block_offset - block_height) && src_value < (block_offset + block_height) && window.innerHeight > scr_min_height && window.innerWidth > 992) {\r\n\t\t\t\tlet scrProcent = (src_value - block_offset) / block_height * 100;\r\n\t\t\t\tscrParallax(block, scrProcent, block_height);\r\n\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t\tif ((pageYOffset > block_offset - window.innerHeight / 1.5) && pageYOffset < (block_offset + block_height) - window.innerHeight / 5) {\r\n\t\t\t\tblock.classList.add('_scr-sector_active');\r\n\t\t\t} else {\r\n\t\t\t\tif (block.classList.contains('_scr-sector_active')) {\r\n\t\t\t\t\tblock.classList.remove('_scr-sector_active');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((pageYOffset > block_offset - window.innerHeight / 2) && pageYOffset < (block_offset + block_height) - window.innerHeight / 5) {\r\n\t\t\t\tif (!block.classList.contains('_scr-sector_current')) {\r\n\t\t\t\t\tblock.classList.add('_scr-sector_current');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (block.classList.contains('_scr-sector_current')) {\r\n\t\t\t\t\tblock.classList.remove('_scr-sector_current');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (scr_items.length > 0) {\r\n\t\tfor (let index = 0; index < scr_items.length; index++) {\r\n\t\t\tlet scr_item = scr_items[index];\r\n\t\t\tlet scr_item_offset = offset(scr_item).top;\r\n\t\t\tlet scr_item_height = scr_item.offsetHeight;\r\n\r\n\r\n\t\t\tlet scr_item_point = window.innerHeight - (window.innerHeight - scr_item_height / 3);\r\n\t\t\tif (window.innerHeight > scr_item_height) {\r\n\t\t\t\tscr_item_point = window.innerHeight - scr_item_height / 3;\r\n\t\t\t}\r\n\r\n\t\t\tif ((src_value > scr_item_offset - scr_item_point) && src_value < (scr_item_offset + scr_item_height)) {\r\n\t\t\t\tscr_item.classList.add('_active');\r\n\t\t\t\tscroll_load_item(scr_item);\r\n\t\t\t} else {\r\n\t\t\t\tscr_item.classList.remove('_active');\r\n\t\t\t}\r\n\t\t\tif (((src_value > scr_item_offset - window.innerHeight))) {\r\n\t\t\t\tif (scr_item.querySelectorAll('._lazy').length > 0) {\r\n\t\t\t\t\tscroll_lazy(scr_item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (scr_fix_block.length > 0) {\r\n\t\tfix_block(scr_fix_block, src_value);\r\n\t}\r\n\tlet custom_scroll_line = document.querySelector('._custom-scroll__line');\r\n\tif (custom_scroll_line) {\r\n\t\tlet window_height = window.innerHeight;\r\n\t\tlet content_height = document.querySelector('.wrapper').offsetHeight;\r\n\t\tlet scr_procent = (pageYOffset / (content_height - window_height)) * 100;\r\n\t\tlet custom_scroll_line_height = custom_scroll_line.offsetHeight;\r\n\t\tcustom_scroll_line.style.transform = \"translateY(\" + (window_height - custom_scroll_line_height) / 100 * scr_procent + \"px)\";\r\n\t}\r\n\tif (src_value > scrollDirection) {\r\n\t\t// downscroll code\r\n\t} else {\r\n\t\t// upscroll code\r\n\t}\r\n\tscrollDirection = src_value <= 0 ? 0 : src_value;\r\n}\r\nsetTimeout(function () {\r\n\t//document.addEventListener(\"DOMContentLoaded\", scroll_scroll);\r\n\tscroll_scroll();\r\n}, 100);\r\n\r\nfunction scroll_lazy(scr_item) {\r\n\t/*\r\n\tlet lazy_src = scr_item.querySelectorAll('*[data-src]');\r\n\tif (lazy_src.length > 0) {\r\n\t\tfor (let index = 0; index < lazy_src.length; index++) {\r\n\t\t\tconst el = lazy_src[index];\r\n\t\t\tif (!el.classList.contains('_loaded')) {\r\n\t\t\t\tel.setAttribute('src', el.getAttribute('data-src'));\r\n\t\t\t\tel.classList.add('_loaded');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tlet lazy_srcset = scr_item.querySelectorAll('*[data-srcset]');\r\n\tif (lazy_srcset.length > 0) {\r\n\t\tfor (let index = 0; index < lazy_srcset.length; index++) {\r\n\t\t\tconst el = lazy_srcset[index];\r\n\t\t\tif (!el.classList.contains('_loaded')) {\r\n\t\t\t\tel.setAttribute('srcset', el.getAttribute('data-srcset'));\r\n\t\t\t\tel.classList.add('_loaded');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t*/\r\n\t/*\r\n\twindow.onload = () => {\r\n\t\tconst observer = new IntersectionObserver((entries, observer) => {\r\n\t\t\tentries.forEach(entry => {\r\n\t\t\t\tif (entry.isIntersecting) {\r\n\t\t\t\t\tconsole.log(entry)\r\n\t\t\t\t\t// ссылка на оригинальное изображение хранится в атрибуте \"data-src\"\r\n\t\t\t\t\tentry.target.src = entry.target.dataset.src\r\n\t\t\t\t\tobserver.unobserve(entry.target)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, { threshold: 0.5 })\r\n\r\n\t\tdocument.querySelectorAll('img').forEach(img => observer.observe(img))\r\n\t}\r\n\t*/\r\n}\r\nfunction scroll_load_item(scr_item) {\r\n\tif (scr_item.classList.contains('_load-map') && !scr_item.classList.contains('_loaded-map')) {\r\n\t\tlet map_item = document.getElementById('map');\r\n\t\tif (map_item) {\r\n\t\t\tscr_item.classList.add('_loaded-map');\r\n\t\t\tmap();\r\n\t\t}\r\n\t}\r\n}\r\nfunction scrParallax(block, scrProcent, blockHeight) {\r\n\tlet prlxItems = block.querySelectorAll('._prlx-item');\r\n\tif (prlxItems.length > 0) {\r\n\t\tfor (let index = 0; index < prlxItems.length; index++) {\r\n\t\t\tconst prlxItem = prlxItems[index];\r\n\t\t\tlet prlxItemAttr = (prlxItem.dataset.prlx) ? prlxItem.dataset.prlx : 3;\r\n\t\t\tconst prlxItemValue = -1 * (blockHeight / 100 * scrProcent / prlxItemAttr);\r\n\t\t\tprlxItem.style.cssText = `transform: translateY(${prlxItemValue}px);`;\r\n\t\t}\r\n\t}\r\n}\r\n//FullScreenScroll\r\nif (scr_blocks.length > 0 && !isMobile.any()) {\r\n\tdisableScroll();\r\n\twindow.addEventListener('wheel', full_scroll);\r\n\r\n\tlet swiperScrolls = document.querySelectorAll('._swiper_scroll');\r\n\r\n\tif (swiperScrolls.length > 0) {\r\n\t\tfor (let index = 0; index < swiperScrolls.length; index++) {\r\n\t\t\tconst swiperScroll = swiperScrolls[index];\r\n\t\t\tswiperScroll.addEventListener(\"mouseenter\", function (e) {\r\n\t\t\t\twindow.removeEventListener('wheel', full_scroll);\r\n\t\t\t});\r\n\t\t\tswiperScroll.addEventListener(\"mouseleave\", function (e) {\r\n\t\t\t\twindow.addEventListener('wheel', full_scroll);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\nfunction getPrevBlockPos(current_block_prev) {\r\n\tlet viewport_height = window.innerHeight;\r\n\tlet current_block_prev_height = current_block_prev.offsetHeight;\r\n\tlet block_pos = offset(current_block_prev).top;\r\n\r\n\tif (current_block_prev_height >= viewport_height) {\r\n\t\tblock_pos = block_pos + (current_block_prev_height - viewport_height);\r\n\t}\r\n\treturn block_pos;\r\n}\r\nfunction full_scroll(e) {\r\n\tlet viewport_height = window.innerHeight;\r\n\tif (viewport_height >= scr_min_height) {\r\n\t\tif (scrolling_full) {\r\n\t\t\tlet current_block = document.querySelector('._scr-sector._scr-sector_current');\r\n\t\t\tlet current_block_pos = offset(current_block).top;\r\n\t\t\tlet current_block_height = current_block.offsetHeight;\r\n\t\t\tlet current_block_next = current_block.nextElementSibling;\r\n\t\t\tlet current_block_prev = current_block.previousElementSibling;\r\n\t\t\tif (e.keyCode == 40 || e.keyCode == 34 || e.deltaX > 0 || e.deltaY < 0) {\r\n\t\t\t\tif (current_block_height <= viewport_height) {\r\n\t\t\t\t\tif (current_block_prev) {\r\n\t\t\t\t\t\tfull_scroll_to_sector(getPrevBlockPos(current_block_prev));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tenableScroll();\r\n\t\t\t\t\tif (currentScroll <= current_block_pos) {\r\n\t\t\t\t\t\tif (current_block_prev) {\r\n\t\t\t\t\t\t\tfull_scroll_to_sector(getPrevBlockPos(current_block_prev));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (e.keyCode == 38 || e.keyCode == 33 || e.deltaX < 0 || e.deltaY > 0) {\r\n\t\t\t\tif (current_block_height <= viewport_height) {\r\n\t\t\t\t\tif (current_block_next) {\r\n\t\t\t\t\t\tlet block_pos = offset(current_block_next).top;\r\n\t\t\t\t\t\tfull_scroll_to_sector(block_pos);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tenableScroll();\r\n\t\t\t\t\tif (current_block_next) {\r\n\t\t\t\t\t\tlet block_pos = offset(current_block_next).top;\r\n\t\t\t\t\t\tif (currentScroll >= block_pos - viewport_height) {\r\n\t\t\t\t\t\t\tfull_scroll_to_sector(block_pos);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdisableScroll();\r\n\t\t}\r\n\t} else {\r\n\t\tenableScroll();\r\n\t}\r\n}\r\nfunction full_scroll_to_sector(pos) {\r\n\tdisableScroll();\r\n\tscrolling_full = false;\r\n\t_goto(pos, 800);\r\n\r\n\tlet scr_pause = 500;\r\n\tif (navigator.appVersion.indexOf(\"Mac\") != -1) {\r\n\t\tscr_pause = 1000;\r\n\t};\r\n\tsetTimeout(function () {\r\n\t\tscrolling_full = true;\r\n\t}, scr_pause);\r\n}\r\nfunction full_scroll_pagestart() { }\r\nfunction full_scroll_pageend() { }\r\n\r\n//ScrollOnClick (Navigation)\r\nlet link = document.querySelectorAll('._goto-block');\r\nif (link) {\r\n\tlet blocks = [];\r\n\tfor (let index = 0; index < link.length; index++) {\r\n\t\tlet el = link[index];\r\n\t\tlet block_name = el.getAttribute('href').replace('#', '');\r\n\t\tif (block_name != '' && !~blocks.indexOf(block_name)) {\r\n\t\t\tblocks.push(block_name);\r\n\t\t}\r\n\t\tel.addEventListener('click', function (e) {\r\n\t\t\tif (document.querySelector('.menu__body._active')) {\r\n\t\t\t\tmenu_close();\r\n\t\t\t\tbody_lock_remove(500);\r\n\t\t\t}\r\n\t\t\tlet target_block_class = el.getAttribute('href').replace('#', '');\r\n\t\t\tlet target_block = document.querySelector('.' + target_block_class);\r\n\t\t\t_goto(target_block, 300);\r\n\t\t\te.preventDefault();\r\n\t\t})\r\n\t}\r\n\r\n\twindow.addEventListener('scroll', function (el) {\r\n\t\tlet old_current_link = document.querySelectorAll('._goto-block._active');\r\n\t\tif (old_current_link) {\r\n\t\t\tfor (let index = 0; index < old_current_link.length; index++) {\r\n\t\t\t\tlet el = old_current_link[index];\r\n\t\t\t\tel.classList.remove('_active');\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let index = 0; index < blocks.length; index++) {\r\n\t\t\tlet block = blocks[index];\r\n\t\t\tlet block_item = document.querySelector('.' + block);\r\n\t\t\tif (block_item) {\r\n\t\t\t\tlet block_offset = offset(block_item).top;\r\n\t\t\t\tlet block_height = block_item.offsetHeight;\r\n\t\t\t\tif ((pageYOffset > block_offset - window.innerHeight / 3) && pageYOffset < (block_offset + block_height) - window.innerHeight / 3) {\r\n\t\t\t\t\tlet current_links = document.querySelectorAll('._goto-block[href=\"#' + block + '\"]');\r\n\t\t\t\t\tfor (let index = 0; index < current_links.length; index++) {\r\n\t\t\t\t\t\tlet current_link = current_links[index];\r\n\t\t\t\t\t\tcurrent_link.classList.add('_active');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n}\r\n//ScrollOnClick (Simple)\r\nlet goto_links = document.querySelectorAll('._goto');\r\nif (goto_links) {\r\n\tfor (let index = 0; index < goto_links.length; index++) {\r\n\t\tlet goto_link = goto_links[index];\r\n\t\tgoto_link.addEventListener('click', function (e) {\r\n\t\t\tlet target_block_class = goto_link.getAttribute('href').replace('#', '');\r\n\t\t\tlet target_block = document.querySelector('.' + target_block_class);\r\n\t\t\t_goto(target_block, 300);\r\n\t\t\te.preventDefault();\r\n\t\t});\r\n\t}\r\n}\r\nfunction _goto(target_block, speed, offset = 0) {\r\n\tlet header = '';\r\n\t//OffsetHeader\r\n\t//if (window.innerWidth < 992) {\r\n\t//\theader = 'header';\r\n\t//}\r\n\tlet options = {\r\n\t\tspeedAsDuration: true,\r\n\t\tspeed: speed,\r\n\t\theader: header,\r\n\t\toffset: offset,\r\n\t\teasing: 'easeOutQuad',\r\n\t};\r\n\tlet scr = new (smooth_scroll__WEBPACK_IMPORTED_MODULE_0___default())();\r\n\tscr.animateScroll(target_block, '', options);\r\n}\r\n\r\n//SameFunctions\r\nfunction offset(el) {\r\n\tvar rect = el.getBoundingClientRect(),\r\n\t\tscrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\r\n\t\tscrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n\treturn { top: rect.top + scrollTop, left: rect.left + scrollLeft }\r\n}\r\nfunction disableScroll() {\r\n\tif (window.addEventListener) // older FF\r\n\t\twindow.addEventListener('DOMMouseScroll', preventDefault, false);\r\n\tdocument.addEventListener('wheel', preventDefault, { passive: false }); // Disable scrolling in Chrome\r\n\twindow.onwheel = preventDefault; // modern standard\r\n\twindow.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE\r\n\twindow.ontouchmove = preventDefault; // mobile\r\n\tdocument.onkeydown = preventDefaultForScrollKeys;\r\n}\r\nfunction enableScroll() {\r\n\tif (window.removeEventListener)\r\n\t\twindow.removeEventListener('DOMMouseScroll', preventDefault, false);\r\n\tdocument.removeEventListener('wheel', preventDefault, { passive: false }); // Enable scrolling in Chrome\r\n\twindow.onmousewheel = document.onmousewheel = null;\r\n\twindow.onwheel = null;\r\n\twindow.ontouchmove = null;\r\n\tdocument.onkeydown = null;\r\n}\r\nfunction preventDefault(e) {\r\n\te = e || window.event;\r\n\tif (e.preventDefault)\r\n\t\te.preventDefault();\r\n\te.returnValue = false;\r\n}\r\nfunction preventDefaultForScrollKeys(e) {\r\n\t/*if (keys[e.keyCode]) {\r\n\t\tpreventDefault(e);\r\n\t\treturn false;\r\n\t}*/\r\n}\r\n\r\nfunction fix_block(scr_fix_block, scr_value) {\r\n\tlet window_width = parseInt(window.innerWidth);\r\n\tlet window_height = parseInt(window.innerHeight);\r\n\tlet header_height = parseInt(document.querySelector('header').offsetHeight) + 15;\r\n\tfor (let index = 0; index < scr_fix_block.length; index++) {\r\n\t\tconst block = scr_fix_block[index];\r\n\t\tlet block_width = block.getAttribute('data-width');\r\n\t\tconst item = block.querySelector('._side-block');\r\n\t\tif (!block_width) { block_width = 0; }\r\n\t\tif (window_width > block_width) {\r\n\t\t\tif (item.offsetHeight < window_height - (header_height + 30)) {\r\n\t\t\t\tif (scr_value > offset(block).top - (header_height + 15)) {\r\n\t\t\t\t\titem.style.cssText = \"position:fixed;bottom:auto;top:\" + header_height + \"px;width:\" + block.offsetWidth + \"px;left:\" + offset(block).left + \"px;\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgotoRelative(item);\r\n\t\t\t\t}\r\n\t\t\t\tif (scr_value > (block.offsetHeight + offset(block).top) - (item.offsetHeight + (header_height + 15))) {\r\n\t\t\t\t\tblock.style.cssText = \"position:relative;\";\r\n\t\t\t\t\titem.style.cssText = \"position:absolute;bottom:0;top:auto;left:0px;width:100%\";\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tgotoRelative(item);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfunction gotoRelative(item) {\r\n\t\titem.style.cssText = \"position:relative;bottom:auto;top:0px;left:0px;\";\r\n\t}\r\n}\r\n\r\n//if (!isMobile.any()) {\r\n\t//custom_scroll();\r\n\t/*\r\n\twindow.addEventListener('wheel', scroll_animate, {\r\n\t\tcapture: true,\r\n\t\tpassive: true\r\n\t});\r\n\twindow.addEventListener('resize', custom_scroll, {\r\n\t\tcapture: true,\r\n\t\tpassive: true\r\n\t});\r\n\t*/\r\n//}\r\nfunction custom_scroll(event) {\r\n\tscr_body.style.overflow = 'hidden';\r\n\tlet window_height = window.innerHeight;\r\n\tlet custom_scroll_line = document.querySelector('._custom-scroll__line');\r\n\tlet custom_scroll_content_height = document.querySelector('.wrapper').offsetHeight;\r\n\tlet custom_cursor_height = Math.min(window_height, Math.round(window_height * (window_height / custom_scroll_content_height)));\r\n\tif (custom_scroll_content_height > window_height) {\r\n\t\tif (!custom_scroll_line) {\r\n\t\t\tlet custom_scroll = document.createElement('div');\r\n\t\t\tcustom_scroll_line = document.createElement('div');\r\n\t\t\tcustom_scroll.setAttribute('class', '_custom-scroll');\r\n\t\t\tcustom_scroll_line.setAttribute('class', '_custom-scroll__line');\r\n\t\t\tcustom_scroll.appendChild(custom_scroll_line);\r\n\t\t\tscr_body.appendChild(custom_scroll);\r\n\t\t}\r\n\t\tcustom_scroll_line.style.height = custom_cursor_height + 'px';\r\n\t}\r\n}\r\n\r\nlet new_pos = pageYOffset;\r\nfunction scroll_animate(event) {\r\n\tlet window_height = window.innerHeight;\r\n\tlet content_height = document.querySelector('.wrapper').offsetHeight;\r\n\tlet start_position = pageYOffset;\r\n\tlet pos_add = 100;\r\n\r\n\tif (event.keyCode == 40 || event.keyCode == 34 || event.deltaX > 0 || event.deltaY < 0) {\r\n\t\tnew_pos = new_pos - pos_add;\r\n\t} else if (event.keyCode == 38 || event.keyCode == 33 || event.deltaX < 0 || event.deltaY > 0) {\r\n\t\tnew_pos = new_pos + pos_add;\r\n\t}\r\n\tif (new_pos > (content_height - window_height)) new_pos = content_height - window_height;\r\n\tif (new_pos < 0) new_pos = 0;\r\n\r\n\tif (scrolling) {\r\n\t\tscrolling = false;\r\n\t\t_goto(new_pos, 1000);\r\n\r\n\t\tlet scr_pause = 100;\r\n\t\tif (navigator.appVersion.indexOf(\"Mac\") != -1) {\r\n\t\t\tscr_pause = scr_pause * 2;\r\n\t\t};\r\n\t\tsetTimeout(function () {\r\n\t\t\tscrolling = true;\r\n\t\t\t_goto(new_pos, 1000);\r\n\t\t}, scr_pause);\r\n\t}\r\n\t//If native scroll\r\n\t//disableScroll();\r\n}\r\n\n\n//# sourceURL=webpack://name-project/./src/temp/scroll/scroll.js?");

/***/ }),

/***/ "./src/temp/slider-swiper/swiper-lib.js":
/*!**********************************************!*\
  !*** ./src/temp/slider-swiper/swiper-lib.js ***!
  \**********************************************/
/***/ (function(module) {

eval("/**\r\n * Swiper 6.3.5\r\n * Most modern mobile touch slider and framework with hardware accelerated transitions\r\n * https://swiperjs.com\r\n *\r\n * Copyright 2014-2020 Vladimir Kharlampidi\r\n *\r\n * Released under the MIT License\r\n *\r\n * Released on: October 30, 2020\r\n */\r\n\r\n(function (global, factory) {\r\n     true ? module.exports = factory() :\r\n        0;\r\n}(this, (function () { 'use strict';\r\n\r\n    function _defineProperties(target, props) {\r\n        for (var i = 0; i < props.length; i++) {\r\n            var descriptor = props[i];\r\n            descriptor.enumerable = descriptor.enumerable || false;\r\n            descriptor.configurable = true;\r\n            if (\"value\" in descriptor) descriptor.writable = true;\r\n            Object.defineProperty(target, descriptor.key, descriptor);\r\n        }\r\n    }\r\n\r\n    function _createClass(Constructor, protoProps, staticProps) {\r\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\r\n        if (staticProps) _defineProperties(Constructor, staticProps);\r\n        return Constructor;\r\n    }\r\n\r\n    function _extends() {\r\n        _extends = Object.assign || function (target) {\r\n            for (var i = 1; i < arguments.length; i++) {\r\n                var source = arguments[i];\r\n\r\n                for (var key in source) {\r\n                    if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n                        target[key] = source[key];\r\n                    }\r\n                }\r\n            }\r\n\r\n            return target;\r\n        };\r\n\r\n        return _extends.apply(this, arguments);\r\n    }\r\n\r\n    /**\r\n     * SSR Window 3.0.0-alpha.4\r\n     * Better handling for window object in SSR environment\r\n     * https://github.com/nolimits4web/ssr-window\r\n     *\r\n     * Copyright 2020, Vladimir Kharlampidi\r\n     *\r\n     * Licensed under MIT\r\n     *\r\n     * Released on: May 20, 2020\r\n     */\r\n\r\n    /* eslint-disable no-param-reassign */\r\n    function isObject(obj) {\r\n        return obj !== null && typeof obj === 'object' && 'constructor' in obj && obj.constructor === Object;\r\n    }\r\n\r\n    function extend(target, src) {\r\n        if (target === void 0) {\r\n            target = {};\r\n        }\r\n\r\n        if (src === void 0) {\r\n            src = {};\r\n        }\r\n\r\n        Object.keys(src).forEach(function (key) {\r\n            if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject(src[key]) && isObject(target[key]) && Object.keys(src[key]).length > 0) {\r\n                extend(target[key], src[key]);\r\n            }\r\n        });\r\n    }\r\n\r\n    var ssrDocument = {\r\n        body: {},\r\n        addEventListener: function addEventListener() {},\r\n        removeEventListener: function removeEventListener() {},\r\n        activeElement: {\r\n            blur: function blur() {},\r\n            nodeName: ''\r\n        },\r\n        querySelector: function querySelector() {\r\n            return null;\r\n        },\r\n        querySelectorAll: function querySelectorAll() {\r\n            return [];\r\n        },\r\n        getElementById: function getElementById() {\r\n            return null;\r\n        },\r\n        createEvent: function createEvent() {\r\n            return {\r\n                initEvent: function initEvent() {}\r\n            };\r\n        },\r\n        createElement: function createElement() {\r\n            return {\r\n                children: [],\r\n                childNodes: [],\r\n                style: {},\r\n                setAttribute: function setAttribute() {},\r\n                getElementsByTagName: function getElementsByTagName() {\r\n                    return [];\r\n                }\r\n            };\r\n        },\r\n        createElementNS: function createElementNS() {\r\n            return {};\r\n        },\r\n        importNode: function importNode() {\r\n            return null;\r\n        },\r\n        location: {\r\n            hash: '',\r\n            host: '',\r\n            hostname: '',\r\n            href: '',\r\n            origin: '',\r\n            pathname: '',\r\n            protocol: '',\r\n            search: ''\r\n        }\r\n    };\r\n\r\n    function getDocument() {\r\n        var doc = typeof document !== 'undefined' ? document : {};\r\n        extend(doc, ssrDocument);\r\n        return doc;\r\n    }\r\n\r\n    var ssrWindow = {\r\n        document: ssrDocument,\r\n        navigator: {\r\n            userAgent: ''\r\n        },\r\n        location: {\r\n            hash: '',\r\n            host: '',\r\n            hostname: '',\r\n            href: '',\r\n            origin: '',\r\n            pathname: '',\r\n            protocol: '',\r\n            search: ''\r\n        },\r\n        history: {\r\n            replaceState: function replaceState() {},\r\n            pushState: function pushState() {},\r\n            go: function go() {},\r\n            back: function back() {}\r\n        },\r\n        CustomEvent: function CustomEvent() {\r\n            return this;\r\n        },\r\n        addEventListener: function addEventListener() {},\r\n        removeEventListener: function removeEventListener() {},\r\n        getComputedStyle: function getComputedStyle() {\r\n            return {\r\n                getPropertyValue: function getPropertyValue() {\r\n                    return '';\r\n                }\r\n            };\r\n        },\r\n        Image: function Image() {},\r\n        Date: function Date() {},\r\n        screen: {},\r\n        setTimeout: function setTimeout() {},\r\n        clearTimeout: function clearTimeout() {},\r\n        matchMedia: function matchMedia() {\r\n            return {};\r\n        },\r\n        requestAnimationFrame: function requestAnimationFrame(callback) {\r\n            if (typeof setTimeout === 'undefined') {\r\n                callback();\r\n                return null;\r\n            }\r\n\r\n            return setTimeout(callback, 0);\r\n        },\r\n        cancelAnimationFrame: function cancelAnimationFrame(id) {\r\n            if (typeof setTimeout === 'undefined') {\r\n                return;\r\n            }\r\n\r\n            clearTimeout(id);\r\n        }\r\n    };\r\n\r\n    function getWindow() {\r\n        var win = typeof window !== 'undefined' ? window : {};\r\n        extend(win, ssrWindow);\r\n        return win;\r\n    }\r\n\r\n    /**\r\n     * Dom7 3.0.0-alpha.7\r\n     * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\r\n     * https://framework7.io/docs/dom7.html\r\n     *\r\n     * Copyright 2020, Vladimir Kharlampidi\r\n     *\r\n     * Licensed under MIT\r\n     *\r\n     * Released on: July 14, 2020\r\n     */\r\n\r\n    function _inheritsLoose(subClass, superClass) {\r\n        subClass.prototype = Object.create(superClass.prototype);\r\n        subClass.prototype.constructor = subClass;\r\n        subClass.__proto__ = superClass;\r\n    }\r\n\r\n    function _getPrototypeOf(o) {\r\n        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\r\n            return o.__proto__ || Object.getPrototypeOf(o);\r\n        };\r\n        return _getPrototypeOf(o);\r\n    }\r\n\r\n    function _setPrototypeOf(o, p) {\r\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\r\n            o.__proto__ = p;\r\n            return o;\r\n        };\r\n\r\n        return _setPrototypeOf(o, p);\r\n    }\r\n\r\n    function _isNativeReflectConstruct() {\r\n        if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\r\n        if (Reflect.construct.sham) return false;\r\n        if (typeof Proxy === \"function\") return true;\r\n\r\n        try {\r\n            Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function _construct(Parent, args, Class) {\r\n        if (_isNativeReflectConstruct()) {\r\n            _construct = Reflect.construct;\r\n        } else {\r\n            _construct = function _construct(Parent, args, Class) {\r\n                var a = [null];\r\n                a.push.apply(a, args);\r\n                var Constructor = Function.bind.apply(Parent, a);\r\n                var instance = new Constructor();\r\n                if (Class) _setPrototypeOf(instance, Class.prototype);\r\n                return instance;\r\n            };\r\n        }\r\n\r\n        return _construct.apply(null, arguments);\r\n    }\r\n\r\n    function _isNativeFunction(fn) {\r\n        return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\r\n    }\r\n\r\n    function _wrapNativeSuper(Class) {\r\n        var _cache = typeof Map === \"function\" ? new Map() : undefined;\r\n\r\n        _wrapNativeSuper = function _wrapNativeSuper(Class) {\r\n            if (Class === null || !_isNativeFunction(Class)) return Class;\r\n\r\n            if (typeof Class !== \"function\") {\r\n                throw new TypeError(\"Super expression must either be null or a function\");\r\n            }\r\n\r\n            if (typeof _cache !== \"undefined\") {\r\n                if (_cache.has(Class)) return _cache.get(Class);\r\n\r\n                _cache.set(Class, Wrapper);\r\n            }\r\n\r\n            function Wrapper() {\r\n                return _construct(Class, arguments, _getPrototypeOf(this).constructor);\r\n            }\r\n\r\n            Wrapper.prototype = Object.create(Class.prototype, {\r\n                constructor: {\r\n                    value: Wrapper,\r\n                    enumerable: false,\r\n                    writable: true,\r\n                    configurable: true\r\n                }\r\n            });\r\n            return _setPrototypeOf(Wrapper, Class);\r\n        };\r\n\r\n        return _wrapNativeSuper(Class);\r\n    }\r\n\r\n    function _assertThisInitialized(self) {\r\n        if (self === void 0) {\r\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\r\n        }\r\n\r\n        return self;\r\n    }\r\n    /* eslint-disable no-proto */\r\n\r\n\r\n    function makeReactive(obj) {\r\n        var proto = obj.__proto__;\r\n        Object.defineProperty(obj, '__proto__', {\r\n            get: function get() {\r\n                return proto;\r\n            },\r\n            set: function set(value) {\r\n                proto.__proto__ = value;\r\n            }\r\n        });\r\n    }\r\n\r\n    var Dom7 = /*#__PURE__*/function (_Array) {\r\n        _inheritsLoose(Dom7, _Array);\r\n\r\n        function Dom7(items) {\r\n            var _this;\r\n\r\n            _this = _Array.call.apply(_Array, [this].concat(items)) || this;\r\n            makeReactive(_assertThisInitialized(_this));\r\n            return _this;\r\n        }\r\n\r\n        return Dom7;\r\n    }( /*#__PURE__*/_wrapNativeSuper(Array));\r\n\r\n    function arrayFlat(arr) {\r\n        if (arr === void 0) {\r\n            arr = [];\r\n        }\r\n\r\n        var res = [];\r\n        arr.forEach(function (el) {\r\n            if (Array.isArray(el)) {\r\n                res.push.apply(res, arrayFlat(el));\r\n            } else {\r\n                res.push(el);\r\n            }\r\n        });\r\n        return res;\r\n    }\r\n\r\n    function arrayFilter(arr, callback) {\r\n        return Array.prototype.filter.call(arr, callback);\r\n    }\r\n\r\n    function arrayUnique(arr) {\r\n        var uniqueArray = [];\r\n\r\n        for (var i = 0; i < arr.length; i += 1) {\r\n            if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\r\n        }\r\n\r\n        return uniqueArray;\r\n    }\r\n\r\n    function qsa(selector, context) {\r\n        if (typeof selector !== 'string') {\r\n            return [selector];\r\n        }\r\n\r\n        var a = [];\r\n        var res = context.querySelectorAll(selector);\r\n\r\n        for (var i = 0; i < res.length; i += 1) {\r\n            a.push(res[i]);\r\n        }\r\n\r\n        return a;\r\n    }\r\n\r\n    function $(selector, context) {\r\n        var window = getWindow();\r\n        var document = getDocument();\r\n        var arr = [];\r\n\r\n        if (!context && selector instanceof Dom7) {\r\n            return selector;\r\n        }\r\n\r\n        if (!selector) {\r\n            return new Dom7(arr);\r\n        }\r\n\r\n        if (typeof selector === 'string') {\r\n            var html = selector.trim();\r\n\r\n            if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\r\n                var toCreate = 'div';\r\n                if (html.indexOf('<li') === 0) toCreate = 'ul';\r\n                if (html.indexOf('<tr') === 0) toCreate = 'tbody';\r\n                if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\r\n                if (html.indexOf('<tbody') === 0) toCreate = 'table';\r\n                if (html.indexOf('<option') === 0) toCreate = 'select';\r\n                var tempParent = document.createElement(toCreate);\r\n                tempParent.innerHTML = html;\r\n\r\n                for (var i = 0; i < tempParent.childNodes.length; i += 1) {\r\n                    arr.push(tempParent.childNodes[i]);\r\n                }\r\n            } else {\r\n                arr = qsa(selector.trim(), context || document);\r\n            } // arr = qsa(selector, document);\r\n\r\n        } else if (selector.nodeType || selector === window || selector === document) {\r\n            arr.push(selector);\r\n        } else if (Array.isArray(selector)) {\r\n            if (selector instanceof Dom7) return selector;\r\n            arr = selector;\r\n        }\r\n\r\n        return new Dom7(arrayUnique(arr));\r\n    }\r\n\r\n    $.fn = Dom7.prototype;\r\n\r\n    function addClass() {\r\n        for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {\r\n            classes[_key] = arguments[_key];\r\n        }\r\n\r\n        var classNames = arrayFlat(classes.map(function (c) {\r\n            return c.split(' ');\r\n        }));\r\n        this.forEach(function (el) {\r\n            var _el$classList;\r\n\r\n            (_el$classList = el.classList).add.apply(_el$classList, classNames);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeClass() {\r\n        for (var _len2 = arguments.length, classes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n            classes[_key2] = arguments[_key2];\r\n        }\r\n\r\n        var classNames = arrayFlat(classes.map(function (c) {\r\n            return c.split(' ');\r\n        }));\r\n        this.forEach(function (el) {\r\n            var _el$classList2;\r\n\r\n            (_el$classList2 = el.classList).remove.apply(_el$classList2, classNames);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function toggleClass() {\r\n        for (var _len3 = arguments.length, classes = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\r\n            classes[_key3] = arguments[_key3];\r\n        }\r\n\r\n        var classNames = arrayFlat(classes.map(function (c) {\r\n            return c.split(' ');\r\n        }));\r\n        this.forEach(function (el) {\r\n            classNames.forEach(function (className) {\r\n                el.classList.toggle(className);\r\n            });\r\n        });\r\n    }\r\n\r\n    function hasClass() {\r\n        for (var _len4 = arguments.length, classes = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\r\n            classes[_key4] = arguments[_key4];\r\n        }\r\n\r\n        var classNames = arrayFlat(classes.map(function (c) {\r\n            return c.split(' ');\r\n        }));\r\n        return arrayFilter(this, function (el) {\r\n            return classNames.filter(function (className) {\r\n                return el.classList.contains(className);\r\n            }).length > 0;\r\n        }).length > 0;\r\n    }\r\n\r\n    function attr(attrs, value) {\r\n        if (arguments.length === 1 && typeof attrs === 'string') {\r\n            // Get attr\r\n            if (this[0]) return this[0].getAttribute(attrs);\r\n            return undefined;\r\n        } // Set attrs\r\n\r\n\r\n        for (var i = 0; i < this.length; i += 1) {\r\n            if (arguments.length === 2) {\r\n                // String\r\n                this[i].setAttribute(attrs, value);\r\n            } else {\r\n                // Object\r\n                for (var attrName in attrs) {\r\n                    this[i][attrName] = attrs[attrName];\r\n                    this[i].setAttribute(attrName, attrs[attrName]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function removeAttr(attr) {\r\n        for (var i = 0; i < this.length; i += 1) {\r\n            this[i].removeAttribute(attr);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function transform(transform) {\r\n        for (var i = 0; i < this.length; i += 1) {\r\n            this[i].style.transform = transform;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function transition(duration) {\r\n        for (var i = 0; i < this.length; i += 1) {\r\n            this[i].style.transition = typeof duration !== 'string' ? duration + \"ms\" : duration;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function on() {\r\n        for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\r\n            args[_key5] = arguments[_key5];\r\n        }\r\n\r\n        var eventType = args[0],\r\n            targetSelector = args[1],\r\n            listener = args[2],\r\n            capture = args[3];\r\n\r\n        if (typeof args[1] === 'function') {\r\n            eventType = args[0];\r\n            listener = args[1];\r\n            capture = args[2];\r\n            targetSelector = undefined;\r\n        }\r\n\r\n        if (!capture) capture = false;\r\n\r\n        function handleLiveEvent(e) {\r\n            var target = e.target;\r\n            if (!target) return;\r\n            var eventData = e.target.dom7EventData || [];\r\n\r\n            if (eventData.indexOf(e) < 0) {\r\n                eventData.unshift(e);\r\n            }\r\n\r\n            if ($(target).is(targetSelector)) listener.apply(target, eventData);else {\r\n                var _parents = $(target).parents(); // eslint-disable-line\r\n\r\n\r\n                for (var k = 0; k < _parents.length; k += 1) {\r\n                    if ($(_parents[k]).is(targetSelector)) listener.apply(_parents[k], eventData);\r\n                }\r\n            }\r\n        }\r\n\r\n        function handleEvent(e) {\r\n            var eventData = e && e.target ? e.target.dom7EventData || [] : [];\r\n\r\n            if (eventData.indexOf(e) < 0) {\r\n                eventData.unshift(e);\r\n            }\r\n\r\n            listener.apply(this, eventData);\r\n        }\r\n\r\n        var events = eventType.split(' ');\r\n        var j;\r\n\r\n        for (var i = 0; i < this.length; i += 1) {\r\n            var el = this[i];\r\n\r\n            if (!targetSelector) {\r\n                for (j = 0; j < events.length; j += 1) {\r\n                    var event = events[j];\r\n                    if (!el.dom7Listeners) el.dom7Listeners = {};\r\n                    if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\r\n                    el.dom7Listeners[event].push({\r\n                        listener: listener,\r\n                        proxyListener: handleEvent\r\n                    });\r\n                    el.addEventListener(event, handleEvent, capture);\r\n                }\r\n            } else {\r\n                // Live events\r\n                for (j = 0; j < events.length; j += 1) {\r\n                    var _event = events[j];\r\n                    if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\r\n                    if (!el.dom7LiveListeners[_event]) el.dom7LiveListeners[_event] = [];\r\n\r\n                    el.dom7LiveListeners[_event].push({\r\n                        listener: listener,\r\n                        proxyListener: handleLiveEvent\r\n                    });\r\n\r\n                    el.addEventListener(_event, handleLiveEvent, capture);\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function off() {\r\n        for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\r\n            args[_key6] = arguments[_key6];\r\n        }\r\n\r\n        var eventType = args[0],\r\n            targetSelector = args[1],\r\n            listener = args[2],\r\n            capture = args[3];\r\n\r\n        if (typeof args[1] === 'function') {\r\n            eventType = args[0];\r\n            listener = args[1];\r\n            capture = args[2];\r\n            targetSelector = undefined;\r\n        }\r\n\r\n        if (!capture) capture = false;\r\n        var events = eventType.split(' ');\r\n\r\n        for (var i = 0; i < events.length; i += 1) {\r\n            var event = events[i];\r\n\r\n            for (var j = 0; j < this.length; j += 1) {\r\n                var el = this[j];\r\n                var handlers = void 0;\r\n\r\n                if (!targetSelector && el.dom7Listeners) {\r\n                    handlers = el.dom7Listeners[event];\r\n                } else if (targetSelector && el.dom7LiveListeners) {\r\n                    handlers = el.dom7LiveListeners[event];\r\n                }\r\n\r\n                if (handlers && handlers.length) {\r\n                    for (var k = handlers.length - 1; k >= 0; k -= 1) {\r\n                        var handler = handlers[k];\r\n\r\n                        if (listener && handler.listener === listener) {\r\n                            el.removeEventListener(event, handler.proxyListener, capture);\r\n                            handlers.splice(k, 1);\r\n                        } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\r\n                            el.removeEventListener(event, handler.proxyListener, capture);\r\n                            handlers.splice(k, 1);\r\n                        } else if (!listener) {\r\n                            el.removeEventListener(event, handler.proxyListener, capture);\r\n                            handlers.splice(k, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function trigger() {\r\n        var window = getWindow();\r\n\r\n        for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\r\n            args[_key9] = arguments[_key9];\r\n        }\r\n\r\n        var events = args[0].split(' ');\r\n        var eventData = args[1];\r\n\r\n        for (var i = 0; i < events.length; i += 1) {\r\n            var event = events[i];\r\n\r\n            for (var j = 0; j < this.length; j += 1) {\r\n                var el = this[j];\r\n\r\n                if (window.CustomEvent) {\r\n                    var evt = new window.CustomEvent(event, {\r\n                        detail: eventData,\r\n                        bubbles: true,\r\n                        cancelable: true\r\n                    });\r\n                    el.dom7EventData = args.filter(function (data, dataIndex) {\r\n                        return dataIndex > 0;\r\n                    });\r\n                    el.dispatchEvent(evt);\r\n                    el.dom7EventData = [];\r\n                    delete el.dom7EventData;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function transitionEnd(callback) {\r\n        var dom = this;\r\n\r\n        function fireCallBack(e) {\r\n            if (e.target !== this) return;\r\n            callback.call(this, e);\r\n            dom.off('transitionend', fireCallBack);\r\n        }\r\n\r\n        if (callback) {\r\n            dom.on('transitionend', fireCallBack);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function outerWidth(includeMargins) {\r\n        if (this.length > 0) {\r\n            if (includeMargins) {\r\n                var _styles = this.styles();\r\n\r\n                return this[0].offsetWidth + parseFloat(_styles.getPropertyValue('margin-right')) + parseFloat(_styles.getPropertyValue('margin-left'));\r\n            }\r\n\r\n            return this[0].offsetWidth;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function outerHeight(includeMargins) {\r\n        if (this.length > 0) {\r\n            if (includeMargins) {\r\n                var _styles2 = this.styles();\r\n\r\n                return this[0].offsetHeight + parseFloat(_styles2.getPropertyValue('margin-top')) + parseFloat(_styles2.getPropertyValue('margin-bottom'));\r\n            }\r\n\r\n            return this[0].offsetHeight;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function offset() {\r\n        if (this.length > 0) {\r\n            var window = getWindow();\r\n            var document = getDocument();\r\n            var el = this[0];\r\n            var box = el.getBoundingClientRect();\r\n            var body = document.body;\r\n            var clientTop = el.clientTop || body.clientTop || 0;\r\n            var clientLeft = el.clientLeft || body.clientLeft || 0;\r\n            var scrollTop = el === window ? window.scrollY : el.scrollTop;\r\n            var scrollLeft = el === window ? window.scrollX : el.scrollLeft;\r\n            return {\r\n                top: box.top + scrollTop - clientTop,\r\n                left: box.left + scrollLeft - clientLeft\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function styles() {\r\n        var window = getWindow();\r\n        if (this[0]) return window.getComputedStyle(this[0], null);\r\n        return {};\r\n    }\r\n\r\n    function css(props, value) {\r\n        var window = getWindow();\r\n        var i;\r\n\r\n        if (arguments.length === 1) {\r\n            if (typeof props === 'string') {\r\n                // .css('width')\r\n                if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\r\n            } else {\r\n                // .css({ width: '100px' })\r\n                for (i = 0; i < this.length; i += 1) {\r\n                    for (var _prop in props) {\r\n                        this[i].style[_prop] = props[_prop];\r\n                    }\r\n                }\r\n\r\n                return this;\r\n            }\r\n        }\r\n\r\n        if (arguments.length === 2 && typeof props === 'string') {\r\n            // .css('width', '100px')\r\n            for (i = 0; i < this.length; i += 1) {\r\n                this[i].style[props] = value;\r\n            }\r\n\r\n            return this;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function each(callback) {\r\n        if (!callback) return this;\r\n        this.forEach(function (el, index) {\r\n            callback.apply(el, [el, index]);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function filter(callback) {\r\n        var result = arrayFilter(this, callback);\r\n        return $(result);\r\n    }\r\n\r\n    function html(html) {\r\n        if (typeof html === 'undefined') {\r\n            return this[0] ? this[0].innerHTML : null;\r\n        }\r\n\r\n        for (var i = 0; i < this.length; i += 1) {\r\n            this[i].innerHTML = html;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function text(text) {\r\n        if (typeof text === 'undefined') {\r\n            return this[0] ? this[0].textContent.trim() : null;\r\n        }\r\n\r\n        for (var i = 0; i < this.length; i += 1) {\r\n            this[i].textContent = text;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function is(selector) {\r\n        var window = getWindow();\r\n        var document = getDocument();\r\n        var el = this[0];\r\n        var compareWith;\r\n        var i;\r\n        if (!el || typeof selector === 'undefined') return false;\r\n\r\n        if (typeof selector === 'string') {\r\n            if (el.matches) return el.matches(selector);\r\n            if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\r\n            if (el.msMatchesSelector) return el.msMatchesSelector(selector);\r\n            compareWith = $(selector);\r\n\r\n            for (i = 0; i < compareWith.length; i += 1) {\r\n                if (compareWith[i] === el) return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (selector === document) {\r\n            return el === document;\r\n        }\r\n\r\n        if (selector === window) {\r\n            return el === window;\r\n        }\r\n\r\n        if (selector.nodeType || selector instanceof Dom7) {\r\n            compareWith = selector.nodeType ? [selector] : selector;\r\n\r\n            for (i = 0; i < compareWith.length; i += 1) {\r\n                if (compareWith[i] === el) return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function index() {\r\n        var child = this[0];\r\n        var i;\r\n\r\n        if (child) {\r\n            i = 0; // eslint-disable-next-line\r\n\r\n            while ((child = child.previousSibling) !== null) {\r\n                if (child.nodeType === 1) i += 1;\r\n            }\r\n\r\n            return i;\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    function eq(index) {\r\n        if (typeof index === 'undefined') return this;\r\n        var length = this.length;\r\n\r\n        if (index > length - 1) {\r\n            return $([]);\r\n        }\r\n\r\n        if (index < 0) {\r\n            var returnIndex = length + index;\r\n            if (returnIndex < 0) return $([]);\r\n            return $([this[returnIndex]]);\r\n        }\r\n\r\n        return $([this[index]]);\r\n    }\r\n\r\n    function append() {\r\n        var newChild;\r\n        var document = getDocument();\r\n\r\n        for (var k = 0; k < arguments.length; k += 1) {\r\n            newChild = k < 0 || arguments.length <= k ? undefined : arguments[k];\r\n\r\n            for (var i = 0; i < this.length; i += 1) {\r\n                if (typeof newChild === 'string') {\r\n                    var tempDiv = document.createElement('div');\r\n                    tempDiv.innerHTML = newChild;\r\n\r\n                    while (tempDiv.firstChild) {\r\n                        this[i].appendChild(tempDiv.firstChild);\r\n                    }\r\n                } else if (newChild instanceof Dom7) {\r\n                    for (var j = 0; j < newChild.length; j += 1) {\r\n                        this[i].appendChild(newChild[j]);\r\n                    }\r\n                } else {\r\n                    this[i].appendChild(newChild);\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function prepend(newChild) {\r\n        var document = getDocument();\r\n        var i;\r\n        var j;\r\n\r\n        for (i = 0; i < this.length; i += 1) {\r\n            if (typeof newChild === 'string') {\r\n                var tempDiv = document.createElement('div');\r\n                tempDiv.innerHTML = newChild;\r\n\r\n                for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\r\n                    this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\r\n                }\r\n            } else if (newChild instanceof Dom7) {\r\n                for (j = 0; j < newChild.length; j += 1) {\r\n                    this[i].insertBefore(newChild[j], this[i].childNodes[0]);\r\n                }\r\n            } else {\r\n                this[i].insertBefore(newChild, this[i].childNodes[0]);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function next(selector) {\r\n        if (this.length > 0) {\r\n            if (selector) {\r\n                if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\r\n                    return $([this[0].nextElementSibling]);\r\n                }\r\n\r\n                return $([]);\r\n            }\r\n\r\n            if (this[0].nextElementSibling) return $([this[0].nextElementSibling]);\r\n            return $([]);\r\n        }\r\n\r\n        return $([]);\r\n    }\r\n\r\n    function nextAll(selector) {\r\n        var nextEls = [];\r\n        var el = this[0];\r\n        if (!el) return $([]);\r\n\r\n        while (el.nextElementSibling) {\r\n            var _next = el.nextElementSibling; // eslint-disable-line\r\n\r\n            if (selector) {\r\n                if ($(_next).is(selector)) nextEls.push(_next);\r\n            } else nextEls.push(_next);\r\n\r\n            el = _next;\r\n        }\r\n\r\n        return $(nextEls);\r\n    }\r\n\r\n    function prev(selector) {\r\n        if (this.length > 0) {\r\n            var el = this[0];\r\n\r\n            if (selector) {\r\n                if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\r\n                    return $([el.previousElementSibling]);\r\n                }\r\n\r\n                return $([]);\r\n            }\r\n\r\n            if (el.previousElementSibling) return $([el.previousElementSibling]);\r\n            return $([]);\r\n        }\r\n\r\n        return $([]);\r\n    }\r\n\r\n    function prevAll(selector) {\r\n        var prevEls = [];\r\n        var el = this[0];\r\n        if (!el) return $([]);\r\n\r\n        while (el.previousElementSibling) {\r\n            var _prev = el.previousElementSibling; // eslint-disable-line\r\n\r\n            if (selector) {\r\n                if ($(_prev).is(selector)) prevEls.push(_prev);\r\n            } else prevEls.push(_prev);\r\n\r\n            el = _prev;\r\n        }\r\n\r\n        return $(prevEls);\r\n    }\r\n\r\n    function parent(selector) {\r\n        var parents = []; // eslint-disable-line\r\n\r\n        for (var i = 0; i < this.length; i += 1) {\r\n            if (this[i].parentNode !== null) {\r\n                if (selector) {\r\n                    if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\r\n                } else {\r\n                    parents.push(this[i].parentNode);\r\n                }\r\n            }\r\n        }\r\n\r\n        return $(parents);\r\n    }\r\n\r\n    function parents(selector) {\r\n        var parents = []; // eslint-disable-line\r\n\r\n        for (var i = 0; i < this.length; i += 1) {\r\n            var _parent = this[i].parentNode; // eslint-disable-line\r\n\r\n            while (_parent) {\r\n                if (selector) {\r\n                    if ($(_parent).is(selector)) parents.push(_parent);\r\n                } else {\r\n                    parents.push(_parent);\r\n                }\r\n\r\n                _parent = _parent.parentNode;\r\n            }\r\n        }\r\n\r\n        return $(parents);\r\n    }\r\n\r\n    function closest(selector) {\r\n        var closest = this; // eslint-disable-line\r\n\r\n        if (typeof selector === 'undefined') {\r\n            return $([]);\r\n        }\r\n\r\n        if (!closest.is(selector)) {\r\n            closest = closest.parents(selector).eq(0);\r\n        }\r\n\r\n        return closest;\r\n    }\r\n\r\n    function find(selector) {\r\n        var foundElements = [];\r\n\r\n        for (var i = 0; i < this.length; i += 1) {\r\n            var found = this[i].querySelectorAll(selector);\r\n\r\n            for (var j = 0; j < found.length; j += 1) {\r\n                foundElements.push(found[j]);\r\n            }\r\n        }\r\n\r\n        return $(foundElements);\r\n    }\r\n\r\n    function children(selector) {\r\n        var children = []; // eslint-disable-line\r\n\r\n        for (var i = 0; i < this.length; i += 1) {\r\n            var childNodes = this[i].children;\r\n\r\n            for (var j = 0; j < childNodes.length; j += 1) {\r\n                if (!selector || $(childNodes[j]).is(selector)) {\r\n                    children.push(childNodes[j]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return $(children);\r\n    }\r\n\r\n    function remove() {\r\n        for (var i = 0; i < this.length; i += 1) {\r\n            if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var Methods = {\r\n        addClass: addClass,\r\n        removeClass: removeClass,\r\n        hasClass: hasClass,\r\n        toggleClass: toggleClass,\r\n        attr: attr,\r\n        removeAttr: removeAttr,\r\n        transform: transform,\r\n        transition: transition,\r\n        on: on,\r\n        off: off,\r\n        trigger: trigger,\r\n        transitionEnd: transitionEnd,\r\n        outerWidth: outerWidth,\r\n        outerHeight: outerHeight,\r\n        styles: styles,\r\n        offset: offset,\r\n        css: css,\r\n        each: each,\r\n        html: html,\r\n        text: text,\r\n        is: is,\r\n        index: index,\r\n        eq: eq,\r\n        append: append,\r\n        prepend: prepend,\r\n        next: next,\r\n        nextAll: nextAll,\r\n        prev: prev,\r\n        prevAll: prevAll,\r\n        parent: parent,\r\n        parents: parents,\r\n        closest: closest,\r\n        find: find,\r\n        children: children,\r\n        filter: filter,\r\n        remove: remove\r\n    };\r\n    Object.keys(Methods).forEach(function (methodName) {\r\n        $.fn[methodName] = Methods[methodName];\r\n    });\r\n\r\n    function deleteProps(obj) {\r\n        var object = obj;\r\n        Object.keys(object).forEach(function (key) {\r\n            try {\r\n                object[key] = null;\r\n            } catch (e) {// no getter for object\r\n            }\r\n\r\n            try {\r\n                delete object[key];\r\n            } catch (e) {// something got wrong\r\n            }\r\n        });\r\n    }\r\n\r\n    function nextTick(callback, delay) {\r\n        if (delay === void 0) {\r\n            delay = 0;\r\n        }\r\n\r\n        return setTimeout(callback, delay);\r\n    }\r\n\r\n    function now() {\r\n        return Date.now();\r\n    }\r\n\r\n    function getTranslate(el, axis) {\r\n        if (axis === void 0) {\r\n            axis = 'x';\r\n        }\r\n\r\n        var window = getWindow();\r\n        var matrix;\r\n        var curTransform;\r\n        var transformMatrix;\r\n        var curStyle = window.getComputedStyle(el, null);\r\n\r\n        if (window.WebKitCSSMatrix) {\r\n            curTransform = curStyle.transform || curStyle.webkitTransform;\r\n\r\n            if (curTransform.split(',').length > 6) {\r\n                curTransform = curTransform.split(', ').map(function (a) {\r\n                    return a.replace(',', '.');\r\n                }).join(', ');\r\n            } // Some old versions of Webkit choke when 'none' is passed; pass\r\n            // empty string instead in this case\r\n\r\n\r\n            transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\r\n        } else {\r\n            transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\r\n            matrix = transformMatrix.toString().split(',');\r\n        }\r\n\r\n        if (axis === 'x') {\r\n            // Latest Chrome and webkits Fix\r\n            if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix\r\n            else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers\r\n            else curTransform = parseFloat(matrix[4]);\r\n        }\r\n\r\n        if (axis === 'y') {\r\n            // Latest Chrome and webkits Fix\r\n            if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix\r\n            else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers\r\n            else curTransform = parseFloat(matrix[5]);\r\n        }\r\n\r\n        return curTransform || 0;\r\n    }\r\n\r\n    function isObject$1(o) {\r\n        return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\r\n    }\r\n\r\n    function extend$1() {\r\n        var to = Object(arguments.length <= 0 ? undefined : arguments[0]);\r\n\r\n        for (var i = 1; i < arguments.length; i += 1) {\r\n            var nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];\r\n\r\n            if (nextSource !== undefined && nextSource !== null) {\r\n                var keysArray = Object.keys(Object(nextSource));\r\n\r\n                for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\r\n                    var nextKey = keysArray[nextIndex];\r\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\r\n\r\n                    if (desc !== undefined && desc.enumerable) {\r\n                        if (isObject$1(to[nextKey]) && isObject$1(nextSource[nextKey])) {\r\n                            extend$1(to[nextKey], nextSource[nextKey]);\r\n                        } else if (!isObject$1(to[nextKey]) && isObject$1(nextSource[nextKey])) {\r\n                            to[nextKey] = {};\r\n                            extend$1(to[nextKey], nextSource[nextKey]);\r\n                        } else {\r\n                            to[nextKey] = nextSource[nextKey];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return to;\r\n    }\r\n\r\n    function bindModuleMethods(instance, obj) {\r\n        Object.keys(obj).forEach(function (key) {\r\n            if (isObject$1(obj[key])) {\r\n                Object.keys(obj[key]).forEach(function (subKey) {\r\n                    if (typeof obj[key][subKey] === 'function') {\r\n                        obj[key][subKey] = obj[key][subKey].bind(instance);\r\n                    }\r\n                });\r\n            }\r\n\r\n            instance[key] = obj[key];\r\n        });\r\n    }\r\n\r\n    var support;\r\n\r\n    function calcSupport() {\r\n        var window = getWindow();\r\n        var document = getDocument();\r\n        return {\r\n            touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch),\r\n            pointerEvents: !!window.PointerEvent && 'maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints >= 0,\r\n            observer: function checkObserver() {\r\n                return 'MutationObserver' in window || 'WebkitMutationObserver' in window;\r\n            }(),\r\n            passiveListener: function checkPassiveListener() {\r\n                var supportsPassive = false;\r\n\r\n                try {\r\n                    var opts = Object.defineProperty({}, 'passive', {\r\n                        // eslint-disable-next-line\r\n                        get: function get() {\r\n                            supportsPassive = true;\r\n                        }\r\n                    });\r\n                    window.addEventListener('testPassiveListener', null, opts);\r\n                } catch (e) {// No support\r\n                }\r\n\r\n                return supportsPassive;\r\n            }(),\r\n            gestures: function checkGestures() {\r\n                return 'ongesturestart' in window;\r\n            }()\r\n        };\r\n    }\r\n\r\n    function getSupport() {\r\n        if (!support) {\r\n            support = calcSupport();\r\n        }\r\n\r\n        return support;\r\n    }\r\n\r\n    var device;\r\n\r\n    function calcDevice(_temp) {\r\n        var _ref = _temp === void 0 ? {} : _temp,\r\n            userAgent = _ref.userAgent;\r\n\r\n        var support = getSupport();\r\n        var window = getWindow();\r\n        var platform = window.navigator.platform;\r\n        var ua = userAgent || window.navigator.userAgent;\r\n        var device = {\r\n            ios: false,\r\n            android: false\r\n        };\r\n        var screenWidth = window.screen.width;\r\n        var screenHeight = window.screen.height;\r\n        var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\r\n\r\n        var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\r\n        var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\r\n        var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\r\n        var windows = platform === 'Win32';\r\n        var macos = platform === 'MacIntel'; // iPadOs 13 fix\r\n\r\n        var iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\r\n\r\n        if (!ipad && macos && support.touch && iPadScreens.indexOf(screenWidth + \"x\" + screenHeight) >= 0) {\r\n            ipad = ua.match(/(Version)\\/([\\d.]+)/);\r\n            if (!ipad) ipad = [0, 1, '13_0_0'];\r\n            macos = false;\r\n        } // Android\r\n\r\n\r\n        if (android && !windows) {\r\n            device.os = 'android';\r\n            device.android = true;\r\n        }\r\n\r\n        if (ipad || iphone || ipod) {\r\n            device.os = 'ios';\r\n            device.ios = true;\r\n        } // Export object\r\n\r\n\r\n        return device;\r\n    }\r\n\r\n    function getDevice(overrides) {\r\n        if (overrides === void 0) {\r\n            overrides = {};\r\n        }\r\n\r\n        if (!device) {\r\n            device = calcDevice(overrides);\r\n        }\r\n\r\n        return device;\r\n    }\r\n\r\n    var browser;\r\n\r\n    function calcBrowser() {\r\n        var window = getWindow();\r\n\r\n        function isSafari() {\r\n            var ua = window.navigator.userAgent.toLowerCase();\r\n            return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\r\n        }\r\n\r\n        return {\r\n            isEdge: !!window.navigator.userAgent.match(/Edge/g),\r\n            isSafari: isSafari(),\r\n            isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\r\n        };\r\n    }\r\n\r\n    function getBrowser() {\r\n        if (!browser) {\r\n            browser = calcBrowser();\r\n        }\r\n\r\n        return browser;\r\n    }\r\n\r\n    var Resize = {\r\n        name: 'resize',\r\n        create: function create() {\r\n            var swiper = this;\r\n            extend$1(swiper, {\r\n                resize: {\r\n                    resizeHandler: function resizeHandler() {\r\n                        if (!swiper || swiper.destroyed || !swiper.initialized) return;\r\n                        swiper.emit('beforeResize');\r\n                        swiper.emit('resize');\r\n                    },\r\n                    orientationChangeHandler: function orientationChangeHandler() {\r\n                        if (!swiper || swiper.destroyed || !swiper.initialized) return;\r\n                        swiper.emit('orientationchange');\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        on: {\r\n            init: function init(swiper) {\r\n                var window = getWindow(); // Emit resize\r\n\r\n                window.addEventListener('resize', swiper.resize.resizeHandler); // Emit orientationchange\r\n\r\n                window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\r\n            },\r\n            destroy: function destroy(swiper) {\r\n                var window = getWindow();\r\n                window.removeEventListener('resize', swiper.resize.resizeHandler);\r\n                window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\r\n            }\r\n        }\r\n    };\r\n\r\n    var Observer = {\r\n        attach: function attach(target, options) {\r\n            if (options === void 0) {\r\n                options = {};\r\n            }\r\n\r\n            var window = getWindow();\r\n            var swiper = this;\r\n            var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\r\n            var observer = new ObserverFunc(function (mutations) {\r\n                // The observerUpdate event should only be triggered\r\n                // once despite the number of mutations.  Additional\r\n                // triggers are redundant and are very costly\r\n                if (mutations.length === 1) {\r\n                    swiper.emit('observerUpdate', mutations[0]);\r\n                    return;\r\n                }\r\n\r\n                var observerUpdate = function observerUpdate() {\r\n                    swiper.emit('observerUpdate', mutations[0]);\r\n                };\r\n\r\n                if (window.requestAnimationFrame) {\r\n                    window.requestAnimationFrame(observerUpdate);\r\n                } else {\r\n                    window.setTimeout(observerUpdate, 0);\r\n                }\r\n            });\r\n            observer.observe(target, {\r\n                attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\r\n                childList: typeof options.childList === 'undefined' ? true : options.childList,\r\n                characterData: typeof options.characterData === 'undefined' ? true : options.characterData\r\n            });\r\n            swiper.observer.observers.push(observer);\r\n        },\r\n        init: function init() {\r\n            var swiper = this;\r\n            if (!swiper.support.observer || !swiper.params.observer) return;\r\n\r\n            if (swiper.params.observeParents) {\r\n                var containerParents = swiper.$el.parents();\r\n\r\n                for (var i = 0; i < containerParents.length; i += 1) {\r\n                    swiper.observer.attach(containerParents[i]);\r\n                }\r\n            } // Observe container\r\n\r\n\r\n            swiper.observer.attach(swiper.$el[0], {\r\n                childList: swiper.params.observeSlideChildren\r\n            }); // Observe wrapper\r\n\r\n            swiper.observer.attach(swiper.$wrapperEl[0], {\r\n                attributes: false\r\n            });\r\n        },\r\n        destroy: function destroy() {\r\n            var swiper = this;\r\n            swiper.observer.observers.forEach(function (observer) {\r\n                observer.disconnect();\r\n            });\r\n            swiper.observer.observers = [];\r\n        }\r\n    };\r\n    var Observer$1 = {\r\n        name: 'observer',\r\n        params: {\r\n            observer: false,\r\n            observeParents: false,\r\n            observeSlideChildren: false\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                observer: _extends(_extends({}, Observer), {}, {\r\n                    observers: []\r\n                })\r\n            });\r\n        },\r\n        on: {\r\n            init: function init(swiper) {\r\n                swiper.observer.init();\r\n            },\r\n            destroy: function destroy(swiper) {\r\n                swiper.observer.destroy();\r\n            }\r\n        }\r\n    };\r\n\r\n    var modular = {\r\n        useParams: function useParams(instanceParams) {\r\n            var instance = this;\r\n            if (!instance.modules) return;\r\n            Object.keys(instance.modules).forEach(function (moduleName) {\r\n                var module = instance.modules[moduleName]; // Extend params\r\n\r\n                if (module.params) {\r\n                    extend$1(instanceParams, module.params);\r\n                }\r\n            });\r\n        },\r\n        useModules: function useModules(modulesParams) {\r\n            if (modulesParams === void 0) {\r\n                modulesParams = {};\r\n            }\r\n\r\n            var instance = this;\r\n            if (!instance.modules) return;\r\n            Object.keys(instance.modules).forEach(function (moduleName) {\r\n                var module = instance.modules[moduleName];\r\n                var moduleParams = modulesParams[moduleName] || {}; // Add event listeners\r\n\r\n                if (module.on && instance.on) {\r\n                    Object.keys(module.on).forEach(function (moduleEventName) {\r\n                        instance.on(moduleEventName, module.on[moduleEventName]);\r\n                    });\r\n                } // Module create callback\r\n\r\n\r\n                if (module.create) {\r\n                    module.create.bind(instance)(moduleParams);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    /* eslint-disable no-underscore-dangle */\r\n    var eventsEmitter = {\r\n        on: function on(events, handler, priority) {\r\n            var self = this;\r\n            if (typeof handler !== 'function') return self;\r\n            var method = priority ? 'unshift' : 'push';\r\n            events.split(' ').forEach(function (event) {\r\n                if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\r\n                self.eventsListeners[event][method](handler);\r\n            });\r\n            return self;\r\n        },\r\n        once: function once(events, handler, priority) {\r\n            var self = this;\r\n            if (typeof handler !== 'function') return self;\r\n\r\n            function onceHandler() {\r\n                self.off(events, onceHandler);\r\n\r\n                if (onceHandler.__emitterProxy) {\r\n                    delete onceHandler.__emitterProxy;\r\n                }\r\n\r\n                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n                    args[_key] = arguments[_key];\r\n                }\r\n\r\n                handler.apply(self, args);\r\n            }\r\n\r\n            onceHandler.__emitterProxy = handler;\r\n            return self.on(events, onceHandler, priority);\r\n        },\r\n        onAny: function onAny(handler, priority) {\r\n            var self = this;\r\n            if (typeof handler !== 'function') return self;\r\n            var method = priority ? 'unshift' : 'push';\r\n\r\n            if (self.eventsAnyListeners.indexOf(handler) < 0) {\r\n                self.eventsAnyListeners[method](handler);\r\n            }\r\n\r\n            return self;\r\n        },\r\n        offAny: function offAny(handler) {\r\n            var self = this;\r\n            if (!self.eventsAnyListeners) return self;\r\n            var index = self.eventsAnyListeners.indexOf(handler);\r\n\r\n            if (index >= 0) {\r\n                self.eventsAnyListeners.splice(index, 1);\r\n            }\r\n\r\n            return self;\r\n        },\r\n        off: function off(events, handler) {\r\n            var self = this;\r\n            if (!self.eventsListeners) return self;\r\n            events.split(' ').forEach(function (event) {\r\n                if (typeof handler === 'undefined') {\r\n                    self.eventsListeners[event] = [];\r\n                } else if (self.eventsListeners[event]) {\r\n                    self.eventsListeners[event].forEach(function (eventHandler, index) {\r\n                        if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\r\n                            self.eventsListeners[event].splice(index, 1);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            return self;\r\n        },\r\n        emit: function emit() {\r\n            var self = this;\r\n            if (!self.eventsListeners) return self;\r\n            var events;\r\n            var data;\r\n            var context;\r\n\r\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n                args[_key2] = arguments[_key2];\r\n            }\r\n\r\n            if (typeof args[0] === 'string' || Array.isArray(args[0])) {\r\n                events = args[0];\r\n                data = args.slice(1, args.length);\r\n                context = self;\r\n            } else {\r\n                events = args[0].events;\r\n                data = args[0].data;\r\n                context = args[0].context || self;\r\n            }\r\n\r\n            data.unshift(context);\r\n            var eventsArray = Array.isArray(events) ? events : events.split(' ');\r\n            eventsArray.forEach(function (event) {\r\n                if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\r\n                    self.eventsAnyListeners.forEach(function (eventHandler) {\r\n                        eventHandler.apply(context, [event].concat(data));\r\n                    });\r\n                }\r\n\r\n                if (self.eventsListeners && self.eventsListeners[event]) {\r\n                    var handlers = [];\r\n                    self.eventsListeners[event].forEach(function (eventHandler) {\r\n                        handlers.push(eventHandler);\r\n                    });\r\n                    handlers.forEach(function (eventHandler) {\r\n                        eventHandler.apply(context, data);\r\n                    });\r\n                }\r\n            });\r\n            return self;\r\n        }\r\n    };\r\n\r\n    function updateSize() {\r\n        var swiper = this;\r\n        var width;\r\n        var height;\r\n        var $el = swiper.$el;\r\n\r\n        if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\r\n            width = swiper.params.width;\r\n        } else {\r\n            width = $el[0].clientWidth;\r\n        }\r\n\r\n        if (typeof swiper.params.height !== 'undefined' && swiper.params.width !== null) {\r\n            height = swiper.params.height;\r\n        } else {\r\n            height = $el[0].clientHeight;\r\n        }\r\n\r\n        if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\r\n            return;\r\n        } // Subtract paddings\r\n\r\n\r\n        width = width - parseInt($el.css('padding-left') || 0, 10) - parseInt($el.css('padding-right') || 0, 10);\r\n        height = height - parseInt($el.css('padding-top') || 0, 10) - parseInt($el.css('padding-bottom') || 0, 10);\r\n        if (Number.isNaN(width)) width = 0;\r\n        if (Number.isNaN(height)) height = 0;\r\n        extend$1(swiper, {\r\n            width: width,\r\n            height: height,\r\n            size: swiper.isHorizontal() ? width : height\r\n        });\r\n    }\r\n\r\n    function updateSlides() {\r\n        var swiper = this;\r\n        var window = getWindow();\r\n        var params = swiper.params;\r\n        var $wrapperEl = swiper.$wrapperEl,\r\n            swiperSize = swiper.size,\r\n            rtl = swiper.rtlTranslate,\r\n            wrongRTL = swiper.wrongRTL;\r\n        var isVirtual = swiper.virtual && params.virtual.enabled;\r\n        var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\r\n        var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\r\n        var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\r\n        var snapGrid = [];\r\n        var slidesGrid = [];\r\n        var slidesSizesGrid = [];\r\n\r\n        function slidesForMargin(slideEl, slideIndex) {\r\n            if (!params.cssMode) return true;\r\n\r\n            if (slideIndex === slides.length - 1) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        var offsetBefore = params.slidesOffsetBefore;\r\n\r\n        if (typeof offsetBefore === 'function') {\r\n            offsetBefore = params.slidesOffsetBefore.call(swiper);\r\n        }\r\n\r\n        var offsetAfter = params.slidesOffsetAfter;\r\n\r\n        if (typeof offsetAfter === 'function') {\r\n            offsetAfter = params.slidesOffsetAfter.call(swiper);\r\n        }\r\n\r\n        var previousSnapGridLength = swiper.snapGrid.length;\r\n        var previousSlidesGridLength = swiper.snapGrid.length;\r\n        var spaceBetween = params.spaceBetween;\r\n        var slidePosition = -offsetBefore;\r\n        var prevSlideSize = 0;\r\n        var index = 0;\r\n\r\n        if (typeof swiperSize === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\r\n            spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\r\n        }\r\n\r\n        swiper.virtualSize = -spaceBetween; // reset margins\r\n\r\n        if (rtl) slides.css({\r\n            marginLeft: '',\r\n            marginTop: ''\r\n        });else slides.css({\r\n            marginRight: '',\r\n            marginBottom: ''\r\n        });\r\n        var slidesNumberEvenToRows;\r\n\r\n        if (params.slidesPerColumn > 1) {\r\n            if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\r\n                slidesNumberEvenToRows = slidesLength;\r\n            } else {\r\n                slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\r\n            }\r\n\r\n            if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\r\n                slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\r\n            }\r\n        } // Calc slides\r\n\r\n\r\n        var slideSize;\r\n        var slidesPerColumn = params.slidesPerColumn;\r\n        var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\r\n        var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\r\n\r\n        for (var i = 0; i < slidesLength; i += 1) {\r\n            slideSize = 0;\r\n            var slide = slides.eq(i);\r\n\r\n            if (params.slidesPerColumn > 1) {\r\n                // Set slides order\r\n                var newSlideOrderIndex = void 0;\r\n                var column = void 0;\r\n                var row = void 0;\r\n\r\n                if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\r\n                    var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\r\n                    var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\r\n                    var columnsInGroup = groupIndex === 0 ? params.slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\r\n                    row = Math.floor(slideIndexInGroup / columnsInGroup);\r\n                    column = slideIndexInGroup - row * columnsInGroup + groupIndex * params.slidesPerGroup;\r\n                    newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\r\n                    slide.css({\r\n                        '-webkit-box-ordinal-group': newSlideOrderIndex,\r\n                        '-moz-box-ordinal-group': newSlideOrderIndex,\r\n                        '-ms-flex-order': newSlideOrderIndex,\r\n                        '-webkit-order': newSlideOrderIndex,\r\n                        order: newSlideOrderIndex\r\n                    });\r\n                } else if (params.slidesPerColumnFill === 'column') {\r\n                    column = Math.floor(i / slidesPerColumn);\r\n                    row = i - column * slidesPerColumn;\r\n\r\n                    if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {\r\n                        row += 1;\r\n\r\n                        if (row >= slidesPerColumn) {\r\n                            row = 0;\r\n                            column += 1;\r\n                        }\r\n                    }\r\n                } else {\r\n                    row = Math.floor(i / slidesPerRow);\r\n                    column = i - row * slidesPerRow;\r\n                }\r\n\r\n                slide.css(\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left'), row !== 0 && params.spaceBetween && params.spaceBetween + \"px\");\r\n            }\r\n\r\n            if (slide.css('display') === 'none') continue; // eslint-disable-line\r\n\r\n            if (params.slidesPerView === 'auto') {\r\n                var slideStyles = window.getComputedStyle(slide[0], null);\r\n                var currentTransform = slide[0].style.transform;\r\n                var currentWebKitTransform = slide[0].style.webkitTransform;\r\n\r\n                if (currentTransform) {\r\n                    slide[0].style.transform = 'none';\r\n                }\r\n\r\n                if (currentWebKitTransform) {\r\n                    slide[0].style.webkitTransform = 'none';\r\n                }\r\n\r\n                if (params.roundLengths) {\r\n                    slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\r\n                } else {\r\n                    // eslint-disable-next-line\r\n                    if (swiper.isHorizontal()) {\r\n                        var width = parseFloat(slideStyles.getPropertyValue('width') || 0);\r\n                        var paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left') || 0);\r\n                        var paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right') || 0);\r\n                        var marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left') || 0);\r\n                        var marginRight = parseFloat(slideStyles.getPropertyValue('margin-right') || 0);\r\n                        var boxSizing = slideStyles.getPropertyValue('box-sizing');\r\n\r\n                        if (boxSizing && boxSizing === 'border-box') {\r\n                            slideSize = width + marginLeft + marginRight;\r\n                        } else {\r\n                            var _slide$ = slide[0],\r\n                                clientWidth = _slide$.clientWidth,\r\n                                offsetWidth = _slide$.offsetWidth;\r\n                            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\r\n                        }\r\n                    } else {\r\n                        var height = parseFloat(slideStyles.getPropertyValue('height') || 0);\r\n                        var paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top') || 0);\r\n                        var paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom') || 0);\r\n                        var marginTop = parseFloat(slideStyles.getPropertyValue('margin-top') || 0);\r\n                        var marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom') || 0);\r\n\r\n                        var _boxSizing = slideStyles.getPropertyValue('box-sizing');\r\n\r\n                        if (_boxSizing && _boxSizing === 'border-box') {\r\n                            slideSize = height + marginTop + marginBottom;\r\n                        } else {\r\n                            var _slide$2 = slide[0],\r\n                                clientHeight = _slide$2.clientHeight,\r\n                                offsetHeight = _slide$2.offsetHeight;\r\n                            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom + (offsetHeight - clientHeight);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (currentTransform) {\r\n                    slide[0].style.transform = currentTransform;\r\n                }\r\n\r\n                if (currentWebKitTransform) {\r\n                    slide[0].style.webkitTransform = currentWebKitTransform;\r\n                }\r\n\r\n                if (params.roundLengths) slideSize = Math.floor(slideSize);\r\n            } else {\r\n                slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\r\n                if (params.roundLengths) slideSize = Math.floor(slideSize);\r\n\r\n                if (slides[i]) {\r\n                    if (swiper.isHorizontal()) {\r\n                        slides[i].style.width = slideSize + \"px\";\r\n                    } else {\r\n                        slides[i].style.height = slideSize + \"px\";\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (slides[i]) {\r\n                slides[i].swiperSlideSize = slideSize;\r\n            }\r\n\r\n            slidesSizesGrid.push(slideSize);\r\n\r\n            if (params.centeredSlides) {\r\n                slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\r\n                if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\r\n                if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\r\n                if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\r\n                if (params.roundLengths) slidePosition = Math.floor(slidePosition);\r\n                if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\r\n                slidesGrid.push(slidePosition);\r\n            } else {\r\n                if (params.roundLengths) slidePosition = Math.floor(slidePosition);\r\n                if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\r\n                slidesGrid.push(slidePosition);\r\n                slidePosition = slidePosition + slideSize + spaceBetween;\r\n            }\r\n\r\n            swiper.virtualSize += slideSize + spaceBetween;\r\n            prevSlideSize = slideSize;\r\n            index += 1;\r\n        }\r\n\r\n        swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\r\n        var newSlidesGrid;\r\n\r\n        if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\r\n            $wrapperEl.css({\r\n                width: swiper.virtualSize + params.spaceBetween + \"px\"\r\n            });\r\n        }\r\n\r\n        if (params.setWrapperSize) {\r\n            if (swiper.isHorizontal()) $wrapperEl.css({\r\n                width: swiper.virtualSize + params.spaceBetween + \"px\"\r\n            });else $wrapperEl.css({\r\n                height: swiper.virtualSize + params.spaceBetween + \"px\"\r\n            });\r\n        }\r\n\r\n        if (params.slidesPerColumn > 1) {\r\n            swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\r\n            swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\r\n            if (swiper.isHorizontal()) $wrapperEl.css({\r\n                width: swiper.virtualSize + params.spaceBetween + \"px\"\r\n            });else $wrapperEl.css({\r\n                height: swiper.virtualSize + params.spaceBetween + \"px\"\r\n            });\r\n\r\n            if (params.centeredSlides) {\r\n                newSlidesGrid = [];\r\n\r\n                for (var _i = 0; _i < snapGrid.length; _i += 1) {\r\n                    var slidesGridItem = snapGrid[_i];\r\n                    if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\r\n                    if (snapGrid[_i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\r\n                }\r\n\r\n                snapGrid = newSlidesGrid;\r\n            }\r\n        } // Remove last grid elements depending on width\r\n\r\n\r\n        if (!params.centeredSlides) {\r\n            newSlidesGrid = [];\r\n\r\n            for (var _i2 = 0; _i2 < snapGrid.length; _i2 += 1) {\r\n                var _slidesGridItem = snapGrid[_i2];\r\n                if (params.roundLengths) _slidesGridItem = Math.floor(_slidesGridItem);\r\n\r\n                if (snapGrid[_i2] <= swiper.virtualSize - swiperSize) {\r\n                    newSlidesGrid.push(_slidesGridItem);\r\n                }\r\n            }\r\n\r\n            snapGrid = newSlidesGrid;\r\n\r\n            if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\r\n                snapGrid.push(swiper.virtualSize - swiperSize);\r\n            }\r\n        }\r\n\r\n        if (snapGrid.length === 0) snapGrid = [0];\r\n\r\n        if (params.spaceBetween !== 0) {\r\n            if (swiper.isHorizontal()) {\r\n                if (rtl) slides.filter(slidesForMargin).css({\r\n                    marginLeft: spaceBetween + \"px\"\r\n                });else slides.filter(slidesForMargin).css({\r\n                    marginRight: spaceBetween + \"px\"\r\n                });\r\n            } else slides.filter(slidesForMargin).css({\r\n                marginBottom: spaceBetween + \"px\"\r\n            });\r\n        }\r\n\r\n        if (params.centeredSlides && params.centeredSlidesBounds) {\r\n            var allSlidesSize = 0;\r\n            slidesSizesGrid.forEach(function (slideSizeValue) {\r\n                allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\r\n            });\r\n            allSlidesSize -= params.spaceBetween;\r\n            var maxSnap = allSlidesSize - swiperSize;\r\n            snapGrid = snapGrid.map(function (snap) {\r\n                if (snap < 0) return -offsetBefore;\r\n                if (snap > maxSnap) return maxSnap + offsetAfter;\r\n                return snap;\r\n            });\r\n        }\r\n\r\n        if (params.centerInsufficientSlides) {\r\n            var _allSlidesSize = 0;\r\n            slidesSizesGrid.forEach(function (slideSizeValue) {\r\n                _allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\r\n            });\r\n            _allSlidesSize -= params.spaceBetween;\r\n\r\n            if (_allSlidesSize < swiperSize) {\r\n                var allSlidesOffset = (swiperSize - _allSlidesSize) / 2;\r\n                snapGrid.forEach(function (snap, snapIndex) {\r\n                    snapGrid[snapIndex] = snap - allSlidesOffset;\r\n                });\r\n                slidesGrid.forEach(function (snap, snapIndex) {\r\n                    slidesGrid[snapIndex] = snap + allSlidesOffset;\r\n                });\r\n            }\r\n        }\r\n\r\n        extend$1(swiper, {\r\n            slides: slides,\r\n            snapGrid: snapGrid,\r\n            slidesGrid: slidesGrid,\r\n            slidesSizesGrid: slidesSizesGrid\r\n        });\r\n\r\n        if (slidesLength !== previousSlidesLength) {\r\n            swiper.emit('slidesLengthChange');\r\n        }\r\n\r\n        if (snapGrid.length !== previousSnapGridLength) {\r\n            if (swiper.params.watchOverflow) swiper.checkOverflow();\r\n            swiper.emit('snapGridLengthChange');\r\n        }\r\n\r\n        if (slidesGrid.length !== previousSlidesGridLength) {\r\n            swiper.emit('slidesGridLengthChange');\r\n        }\r\n\r\n        if (params.watchSlidesProgress || params.watchSlidesVisibility) {\r\n            swiper.updateSlidesOffset();\r\n        }\r\n    }\r\n\r\n    function updateAutoHeight(speed) {\r\n        var swiper = this;\r\n        var activeSlides = [];\r\n        var newHeight = 0;\r\n        var i;\r\n\r\n        if (typeof speed === 'number') {\r\n            swiper.setTransition(speed);\r\n        } else if (speed === true) {\r\n            swiper.setTransition(swiper.params.speed);\r\n        } // Find slides currently in view\r\n\r\n\r\n        if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\r\n            if (swiper.params.centeredSlides) {\r\n                swiper.visibleSlides.each(function (slide) {\r\n                    activeSlides.push(slide);\r\n                });\r\n            } else {\r\n                for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\r\n                    var index = swiper.activeIndex + i;\r\n                    if (index > swiper.slides.length) break;\r\n                    activeSlides.push(swiper.slides.eq(index)[0]);\r\n                }\r\n            }\r\n        } else {\r\n            activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\r\n        } // Find new height from highest slide in view\r\n\r\n\r\n        for (i = 0; i < activeSlides.length; i += 1) {\r\n            if (typeof activeSlides[i] !== 'undefined') {\r\n                var height = activeSlides[i].offsetHeight;\r\n                newHeight = height > newHeight ? height : newHeight;\r\n            }\r\n        } // Update Height\r\n\r\n\r\n        if (newHeight) swiper.$wrapperEl.css('height', newHeight + \"px\");\r\n    }\r\n\r\n    function updateSlidesOffset() {\r\n        var swiper = this;\r\n        var slides = swiper.slides;\r\n\r\n        for (var i = 0; i < slides.length; i += 1) {\r\n            slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\r\n        }\r\n    }\r\n\r\n    function updateSlidesProgress(translate) {\r\n        if (translate === void 0) {\r\n            translate = this && this.translate || 0;\r\n        }\r\n\r\n        var swiper = this;\r\n        var params = swiper.params;\r\n        var slides = swiper.slides,\r\n            rtl = swiper.rtlTranslate;\r\n        if (slides.length === 0) return;\r\n        if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\r\n        var offsetCenter = -translate;\r\n        if (rtl) offsetCenter = translate; // Visible Slides\r\n\r\n        slides.removeClass(params.slideVisibleClass);\r\n        swiper.visibleSlidesIndexes = [];\r\n        swiper.visibleSlides = [];\r\n\r\n        for (var i = 0; i < slides.length; i += 1) {\r\n            var slide = slides[i];\r\n            var slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slide.swiperSlideOffset) / (slide.swiperSlideSize + params.spaceBetween);\r\n\r\n            if (params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) {\r\n                var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\r\n                var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\r\n                var isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\r\n\r\n                if (isVisible) {\r\n                    swiper.visibleSlides.push(slide);\r\n                    swiper.visibleSlidesIndexes.push(i);\r\n                    slides.eq(i).addClass(params.slideVisibleClass);\r\n                }\r\n            }\r\n\r\n            slide.progress = rtl ? -slideProgress : slideProgress;\r\n        }\r\n\r\n        swiper.visibleSlides = $(swiper.visibleSlides);\r\n    }\r\n\r\n    function updateProgress(translate) {\r\n        var swiper = this;\r\n\r\n        if (typeof translate === 'undefined') {\r\n            var multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\r\n\r\n            translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\r\n        }\r\n\r\n        var params = swiper.params;\r\n        var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n        var progress = swiper.progress,\r\n            isBeginning = swiper.isBeginning,\r\n            isEnd = swiper.isEnd;\r\n        var wasBeginning = isBeginning;\r\n        var wasEnd = isEnd;\r\n\r\n        if (translatesDiff === 0) {\r\n            progress = 0;\r\n            isBeginning = true;\r\n            isEnd = true;\r\n        } else {\r\n            progress = (translate - swiper.minTranslate()) / translatesDiff;\r\n            isBeginning = progress <= 0;\r\n            isEnd = progress >= 1;\r\n        }\r\n\r\n        extend$1(swiper, {\r\n            progress: progress,\r\n            isBeginning: isBeginning,\r\n            isEnd: isEnd\r\n        });\r\n        if (params.watchSlidesProgress || params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\r\n\r\n        if (isBeginning && !wasBeginning) {\r\n            swiper.emit('reachBeginning toEdge');\r\n        }\r\n\r\n        if (isEnd && !wasEnd) {\r\n            swiper.emit('reachEnd toEdge');\r\n        }\r\n\r\n        if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\r\n            swiper.emit('fromEdge');\r\n        }\r\n\r\n        swiper.emit('progress', progress);\r\n    }\r\n\r\n    function updateSlidesClasses() {\r\n        var swiper = this;\r\n        var slides = swiper.slides,\r\n            params = swiper.params,\r\n            $wrapperEl = swiper.$wrapperEl,\r\n            activeIndex = swiper.activeIndex,\r\n            realIndex = swiper.realIndex;\r\n        var isVirtual = swiper.virtual && params.virtual.enabled;\r\n        slides.removeClass(params.slideActiveClass + \" \" + params.slideNextClass + \" \" + params.slidePrevClass + \" \" + params.slideDuplicateActiveClass + \" \" + params.slideDuplicateNextClass + \" \" + params.slideDuplicatePrevClass);\r\n        var activeSlide;\r\n\r\n        if (isVirtual) {\r\n            activeSlide = swiper.$wrapperEl.find(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\");\r\n        } else {\r\n            activeSlide = slides.eq(activeIndex);\r\n        } // Active classes\r\n\r\n\r\n        activeSlide.addClass(params.slideActiveClass);\r\n\r\n        if (params.loop) {\r\n            // Duplicate to all looped slides\r\n            if (activeSlide.hasClass(params.slideDuplicateClass)) {\r\n                $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\").addClass(params.slideDuplicateActiveClass);\r\n            } else {\r\n                $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\").addClass(params.slideDuplicateActiveClass);\r\n            }\r\n        } // Next Slide\r\n\r\n\r\n        var nextSlide = activeSlide.nextAll(\".\" + params.slideClass).eq(0).addClass(params.slideNextClass);\r\n\r\n        if (params.loop && nextSlide.length === 0) {\r\n            nextSlide = slides.eq(0);\r\n            nextSlide.addClass(params.slideNextClass);\r\n        } // Prev Slide\r\n\r\n\r\n        var prevSlide = activeSlide.prevAll(\".\" + params.slideClass).eq(0).addClass(params.slidePrevClass);\r\n\r\n        if (params.loop && prevSlide.length === 0) {\r\n            prevSlide = slides.eq(-1);\r\n            prevSlide.addClass(params.slidePrevClass);\r\n        }\r\n\r\n        if (params.loop) {\r\n            // Duplicate to all looped slides\r\n            if (nextSlide.hasClass(params.slideDuplicateClass)) {\r\n                $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicateNextClass);\r\n            } else {\r\n                $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicateNextClass);\r\n            }\r\n\r\n            if (prevSlide.hasClass(params.slideDuplicateClass)) {\r\n                $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicatePrevClass);\r\n            } else {\r\n                $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicatePrevClass);\r\n            }\r\n        }\r\n\r\n        swiper.emitSlidesClasses();\r\n    }\r\n\r\n    function updateActiveIndex(newActiveIndex) {\r\n        var swiper = this;\r\n        var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n        var slidesGrid = swiper.slidesGrid,\r\n            snapGrid = swiper.snapGrid,\r\n            params = swiper.params,\r\n            previousIndex = swiper.activeIndex,\r\n            previousRealIndex = swiper.realIndex,\r\n            previousSnapIndex = swiper.snapIndex;\r\n        var activeIndex = newActiveIndex;\r\n        var snapIndex;\r\n\r\n        if (typeof activeIndex === 'undefined') {\r\n            for (var i = 0; i < slidesGrid.length; i += 1) {\r\n                if (typeof slidesGrid[i + 1] !== 'undefined') {\r\n                    if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\r\n                        activeIndex = i;\r\n                    } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\r\n                        activeIndex = i + 1;\r\n                    }\r\n                } else if (translate >= slidesGrid[i]) {\r\n                    activeIndex = i;\r\n                }\r\n            } // Normalize slideIndex\r\n\r\n\r\n            if (params.normalizeSlideIndex) {\r\n                if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\r\n            }\r\n        }\r\n\r\n        if (snapGrid.indexOf(translate) >= 0) {\r\n            snapIndex = snapGrid.indexOf(translate);\r\n        } else {\r\n            var skip = Math.min(params.slidesPerGroupSkip, activeIndex);\r\n            snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\r\n        }\r\n\r\n        if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\r\n\r\n        if (activeIndex === previousIndex) {\r\n            if (snapIndex !== previousSnapIndex) {\r\n                swiper.snapIndex = snapIndex;\r\n                swiper.emit('snapIndexChange');\r\n            }\r\n\r\n            return;\r\n        } // Get real index\r\n\r\n\r\n        var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\r\n        extend$1(swiper, {\r\n            snapIndex: snapIndex,\r\n            realIndex: realIndex,\r\n            previousIndex: previousIndex,\r\n            activeIndex: activeIndex\r\n        });\r\n        swiper.emit('activeIndexChange');\r\n        swiper.emit('snapIndexChange');\r\n\r\n        if (previousRealIndex !== realIndex) {\r\n            swiper.emit('realIndexChange');\r\n        }\r\n\r\n        if (swiper.initialized || swiper.params.runCallbacksOnInit) {\r\n            swiper.emit('slideChange');\r\n        }\r\n    }\r\n\r\n    function updateClickedSlide(e) {\r\n        var swiper = this;\r\n        var params = swiper.params;\r\n        var slide = $(e.target).closest(\".\" + params.slideClass)[0];\r\n        var slideFound = false;\r\n\r\n        if (slide) {\r\n            for (var i = 0; i < swiper.slides.length; i += 1) {\r\n                if (swiper.slides[i] === slide) slideFound = true;\r\n            }\r\n        }\r\n\r\n        if (slide && slideFound) {\r\n            swiper.clickedSlide = slide;\r\n\r\n            if (swiper.virtual && swiper.params.virtual.enabled) {\r\n                swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\r\n            } else {\r\n                swiper.clickedIndex = $(slide).index();\r\n            }\r\n        } else {\r\n            swiper.clickedSlide = undefined;\r\n            swiper.clickedIndex = undefined;\r\n            return;\r\n        }\r\n\r\n        if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\r\n            swiper.slideToClickedSlide();\r\n        }\r\n    }\r\n\r\n    var update = {\r\n        updateSize: updateSize,\r\n        updateSlides: updateSlides,\r\n        updateAutoHeight: updateAutoHeight,\r\n        updateSlidesOffset: updateSlidesOffset,\r\n        updateSlidesProgress: updateSlidesProgress,\r\n        updateProgress: updateProgress,\r\n        updateSlidesClasses: updateSlidesClasses,\r\n        updateActiveIndex: updateActiveIndex,\r\n        updateClickedSlide: updateClickedSlide\r\n    };\r\n\r\n    function getSwiperTranslate(axis) {\r\n        if (axis === void 0) {\r\n            axis = this.isHorizontal() ? 'x' : 'y';\r\n        }\r\n\r\n        var swiper = this;\r\n        var params = swiper.params,\r\n            rtl = swiper.rtlTranslate,\r\n            translate = swiper.translate,\r\n            $wrapperEl = swiper.$wrapperEl;\r\n\r\n        if (params.virtualTranslate) {\r\n            return rtl ? -translate : translate;\r\n        }\r\n\r\n        if (params.cssMode) {\r\n            return translate;\r\n        }\r\n\r\n        var currentTranslate = getTranslate($wrapperEl[0], axis);\r\n        if (rtl) currentTranslate = -currentTranslate;\r\n        return currentTranslate || 0;\r\n    }\r\n\r\n    function setTranslate(translate, byController) {\r\n        var swiper = this;\r\n        var rtl = swiper.rtlTranslate,\r\n            params = swiper.params,\r\n            $wrapperEl = swiper.$wrapperEl,\r\n            wrapperEl = swiper.wrapperEl,\r\n            progress = swiper.progress;\r\n        var x = 0;\r\n        var y = 0;\r\n        var z = 0;\r\n\r\n        if (swiper.isHorizontal()) {\r\n            x = rtl ? -translate : translate;\r\n        } else {\r\n            y = translate;\r\n        }\r\n\r\n        if (params.roundLengths) {\r\n            x = Math.floor(x);\r\n            y = Math.floor(y);\r\n        }\r\n\r\n        if (params.cssMode) {\r\n            wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\r\n        } else if (!params.virtualTranslate) {\r\n            $wrapperEl.transform(\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\");\r\n        }\r\n\r\n        swiper.previousTranslate = swiper.translate;\r\n        swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\r\n\r\n        var newProgress;\r\n        var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n\r\n        if (translatesDiff === 0) {\r\n            newProgress = 0;\r\n        } else {\r\n            newProgress = (translate - swiper.minTranslate()) / translatesDiff;\r\n        }\r\n\r\n        if (newProgress !== progress) {\r\n            swiper.updateProgress(translate);\r\n        }\r\n\r\n        swiper.emit('setTranslate', swiper.translate, byController);\r\n    }\r\n\r\n    function minTranslate() {\r\n        return -this.snapGrid[0];\r\n    }\r\n\r\n    function maxTranslate() {\r\n        return -this.snapGrid[this.snapGrid.length - 1];\r\n    }\r\n\r\n    function translateTo(translate, speed, runCallbacks, translateBounds, internal) {\r\n        if (translate === void 0) {\r\n            translate = 0;\r\n        }\r\n\r\n        if (speed === void 0) {\r\n            speed = this.params.speed;\r\n        }\r\n\r\n        if (runCallbacks === void 0) {\r\n            runCallbacks = true;\r\n        }\r\n\r\n        if (translateBounds === void 0) {\r\n            translateBounds = true;\r\n        }\r\n\r\n        var swiper = this;\r\n        var params = swiper.params,\r\n            wrapperEl = swiper.wrapperEl;\r\n\r\n        if (swiper.animating && params.preventInteractionOnTransition) {\r\n            return false;\r\n        }\r\n\r\n        var minTranslate = swiper.minTranslate();\r\n        var maxTranslate = swiper.maxTranslate();\r\n        var newTranslate;\r\n        if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate; // Update progress\r\n\r\n        swiper.updateProgress(newTranslate);\r\n\r\n        if (params.cssMode) {\r\n            var isH = swiper.isHorizontal();\r\n\r\n            if (speed === 0) {\r\n                wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\r\n            } else {\r\n                // eslint-disable-next-line\r\n                if (wrapperEl.scrollTo) {\r\n                    var _wrapperEl$scrollTo;\r\n\r\n                    wrapperEl.scrollTo((_wrapperEl$scrollTo = {}, _wrapperEl$scrollTo[isH ? 'left' : 'top'] = -newTranslate, _wrapperEl$scrollTo.behavior = 'smooth', _wrapperEl$scrollTo));\r\n                } else {\r\n                    wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if (speed === 0) {\r\n            swiper.setTransition(0);\r\n            swiper.setTranslate(newTranslate);\r\n\r\n            if (runCallbacks) {\r\n                swiper.emit('beforeTransitionStart', speed, internal);\r\n                swiper.emit('transitionEnd');\r\n            }\r\n        } else {\r\n            swiper.setTransition(speed);\r\n            swiper.setTranslate(newTranslate);\r\n\r\n            if (runCallbacks) {\r\n                swiper.emit('beforeTransitionStart', speed, internal);\r\n                swiper.emit('transitionStart');\r\n            }\r\n\r\n            if (!swiper.animating) {\r\n                swiper.animating = true;\r\n\r\n                if (!swiper.onTranslateToWrapperTransitionEnd) {\r\n                    swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\r\n                        if (!swiper || swiper.destroyed) return;\r\n                        if (e.target !== this) return;\r\n                        swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\r\n                        swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\r\n                        swiper.onTranslateToWrapperTransitionEnd = null;\r\n                        delete swiper.onTranslateToWrapperTransitionEnd;\r\n\r\n                        if (runCallbacks) {\r\n                            swiper.emit('transitionEnd');\r\n                        }\r\n                    };\r\n                }\r\n\r\n                swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\r\n                swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    var translate = {\r\n        getTranslate: getSwiperTranslate,\r\n        setTranslate: setTranslate,\r\n        minTranslate: minTranslate,\r\n        maxTranslate: maxTranslate,\r\n        translateTo: translateTo\r\n    };\r\n\r\n    function setTransition(duration, byController) {\r\n        var swiper = this;\r\n\r\n        if (!swiper.params.cssMode) {\r\n            swiper.$wrapperEl.transition(duration);\r\n        }\r\n\r\n        swiper.emit('setTransition', duration, byController);\r\n    }\r\n\r\n    function transitionStart(runCallbacks, direction) {\r\n        if (runCallbacks === void 0) {\r\n            runCallbacks = true;\r\n        }\r\n\r\n        var swiper = this;\r\n        var activeIndex = swiper.activeIndex,\r\n            params = swiper.params,\r\n            previousIndex = swiper.previousIndex;\r\n        if (params.cssMode) return;\r\n\r\n        if (params.autoHeight) {\r\n            swiper.updateAutoHeight();\r\n        }\r\n\r\n        var dir = direction;\r\n\r\n        if (!dir) {\r\n            if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\r\n        }\r\n\r\n        swiper.emit('transitionStart');\r\n\r\n        if (runCallbacks && activeIndex !== previousIndex) {\r\n            if (dir === 'reset') {\r\n                swiper.emit('slideResetTransitionStart');\r\n                return;\r\n            }\r\n\r\n            swiper.emit('slideChangeTransitionStart');\r\n\r\n            if (dir === 'next') {\r\n                swiper.emit('slideNextTransitionStart');\r\n            } else {\r\n                swiper.emit('slidePrevTransitionStart');\r\n            }\r\n        }\r\n    }\r\n\r\n    function transitionEnd$1(runCallbacks, direction) {\r\n        if (runCallbacks === void 0) {\r\n            runCallbacks = true;\r\n        }\r\n\r\n        var swiper = this;\r\n        var activeIndex = swiper.activeIndex,\r\n            previousIndex = swiper.previousIndex,\r\n            params = swiper.params;\r\n        swiper.animating = false;\r\n        if (params.cssMode) return;\r\n        swiper.setTransition(0);\r\n        var dir = direction;\r\n\r\n        if (!dir) {\r\n            if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\r\n        }\r\n\r\n        swiper.emit('transitionEnd');\r\n\r\n        if (runCallbacks && activeIndex !== previousIndex) {\r\n            if (dir === 'reset') {\r\n                swiper.emit('slideResetTransitionEnd');\r\n                return;\r\n            }\r\n\r\n            swiper.emit('slideChangeTransitionEnd');\r\n\r\n            if (dir === 'next') {\r\n                swiper.emit('slideNextTransitionEnd');\r\n            } else {\r\n                swiper.emit('slidePrevTransitionEnd');\r\n            }\r\n        }\r\n    }\r\n\r\n    var transition$1 = {\r\n        setTransition: setTransition,\r\n        transitionStart: transitionStart,\r\n        transitionEnd: transitionEnd$1\r\n    };\r\n\r\n    function slideTo(index, speed, runCallbacks, internal) {\r\n        if (index === void 0) {\r\n            index = 0;\r\n        }\r\n\r\n        if (speed === void 0) {\r\n            speed = this.params.speed;\r\n        }\r\n\r\n        if (runCallbacks === void 0) {\r\n            runCallbacks = true;\r\n        }\r\n\r\n        if (typeof index !== 'number' && typeof index !== 'string') {\r\n            throw new Error(\"The 'index' argument cannot have type other than 'number' or 'string'. [\" + typeof index + \"] given.\");\r\n        }\r\n\r\n        if (typeof index === 'string') {\r\n            /**\r\n             * The `index` argument converted from `string` to `number`.\r\n             * @type {number}\r\n             */\r\n            var indexAsNumber = parseInt(index, 10);\r\n            /**\r\n             * Determines whether the `index` argument is a valid `number`\r\n             * after being converted from the `string` type.\r\n             * @type {boolean}\r\n             */\r\n\r\n            var isValidNumber = isFinite(indexAsNumber);\r\n\r\n            if (!isValidNumber) {\r\n                throw new Error(\"The passed-in 'index' (string) couldn't be converted to 'number'. [\" + index + \"] given.\");\r\n            } // Knowing that the converted `index` is a valid number,\r\n            // we can update the original argument's value.\r\n\r\n\r\n            index = indexAsNumber;\r\n        }\r\n\r\n        var swiper = this;\r\n        var slideIndex = index;\r\n        if (slideIndex < 0) slideIndex = 0;\r\n        var params = swiper.params,\r\n            snapGrid = swiper.snapGrid,\r\n            slidesGrid = swiper.slidesGrid,\r\n            previousIndex = swiper.previousIndex,\r\n            activeIndex = swiper.activeIndex,\r\n            rtl = swiper.rtlTranslate,\r\n            wrapperEl = swiper.wrapperEl;\r\n\r\n        if (swiper.animating && params.preventInteractionOnTransition) {\r\n            return false;\r\n        }\r\n\r\n        var skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\r\n        var snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\r\n        if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\r\n\r\n        if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\r\n            swiper.emit('beforeSlideChangeStart');\r\n        }\r\n\r\n        var translate = -snapGrid[snapIndex]; // Update progress\r\n\r\n        swiper.updateProgress(translate); // Normalize slideIndex\r\n\r\n        if (params.normalizeSlideIndex) {\r\n            for (var i = 0; i < slidesGrid.length; i += 1) {\r\n                if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\r\n                    slideIndex = i;\r\n                }\r\n            }\r\n        } // Directions locks\r\n\r\n\r\n        if (swiper.initialized && slideIndex !== activeIndex) {\r\n            if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\r\n                return false;\r\n            }\r\n\r\n            if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\r\n                if ((activeIndex || 0) !== slideIndex) return false;\r\n            }\r\n        }\r\n\r\n        var direction;\r\n        if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset'; // Update Index\r\n\r\n        if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\r\n            swiper.updateActiveIndex(slideIndex); // Update Height\r\n\r\n            if (params.autoHeight) {\r\n                swiper.updateAutoHeight();\r\n            }\r\n\r\n            swiper.updateSlidesClasses();\r\n\r\n            if (params.effect !== 'slide') {\r\n                swiper.setTranslate(translate);\r\n            }\r\n\r\n            if (direction !== 'reset') {\r\n                swiper.transitionStart(runCallbacks, direction);\r\n                swiper.transitionEnd(runCallbacks, direction);\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (params.cssMode) {\r\n            var isH = swiper.isHorizontal();\r\n            var t = -translate;\r\n\r\n            if (rtl) {\r\n                t = wrapperEl.scrollWidth - wrapperEl.offsetWidth - t;\r\n            }\r\n\r\n            if (speed === 0) {\r\n                wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\r\n            } else {\r\n                // eslint-disable-next-line\r\n                if (wrapperEl.scrollTo) {\r\n                    var _wrapperEl$scrollTo;\r\n\r\n                    wrapperEl.scrollTo((_wrapperEl$scrollTo = {}, _wrapperEl$scrollTo[isH ? 'left' : 'top'] = t, _wrapperEl$scrollTo.behavior = 'smooth', _wrapperEl$scrollTo));\r\n                } else {\r\n                    wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if (speed === 0) {\r\n            swiper.setTransition(0);\r\n            swiper.setTranslate(translate);\r\n            swiper.updateActiveIndex(slideIndex);\r\n            swiper.updateSlidesClasses();\r\n            swiper.emit('beforeTransitionStart', speed, internal);\r\n            swiper.transitionStart(runCallbacks, direction);\r\n            swiper.transitionEnd(runCallbacks, direction);\r\n        } else {\r\n            swiper.setTransition(speed);\r\n            swiper.setTranslate(translate);\r\n            swiper.updateActiveIndex(slideIndex);\r\n            swiper.updateSlidesClasses();\r\n            swiper.emit('beforeTransitionStart', speed, internal);\r\n            swiper.transitionStart(runCallbacks, direction);\r\n\r\n            if (!swiper.animating) {\r\n                swiper.animating = true;\r\n\r\n                if (!swiper.onSlideToWrapperTransitionEnd) {\r\n                    swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\r\n                        if (!swiper || swiper.destroyed) return;\r\n                        if (e.target !== this) return;\r\n                        swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\r\n                        swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\r\n                        swiper.onSlideToWrapperTransitionEnd = null;\r\n                        delete swiper.onSlideToWrapperTransitionEnd;\r\n                        swiper.transitionEnd(runCallbacks, direction);\r\n                    };\r\n                }\r\n\r\n                swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\r\n                swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function slideToLoop(index, speed, runCallbacks, internal) {\r\n        if (index === void 0) {\r\n            index = 0;\r\n        }\r\n\r\n        if (speed === void 0) {\r\n            speed = this.params.speed;\r\n        }\r\n\r\n        if (runCallbacks === void 0) {\r\n            runCallbacks = true;\r\n        }\r\n\r\n        var swiper = this;\r\n        var newIndex = index;\r\n\r\n        if (swiper.params.loop) {\r\n            newIndex += swiper.loopedSlides;\r\n        }\r\n\r\n        return swiper.slideTo(newIndex, speed, runCallbacks, internal);\r\n    }\r\n\r\n    /* eslint no-unused-vars: \"off\" */\r\n    function slideNext(speed, runCallbacks, internal) {\r\n        if (speed === void 0) {\r\n            speed = this.params.speed;\r\n        }\r\n\r\n        if (runCallbacks === void 0) {\r\n            runCallbacks = true;\r\n        }\r\n\r\n        var swiper = this;\r\n        var params = swiper.params,\r\n            animating = swiper.animating;\r\n        var increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup;\r\n\r\n        if (params.loop) {\r\n            if (animating && params.loopPreventsSlide) return false;\r\n            swiper.loopFix(); // eslint-disable-next-line\r\n\r\n            swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\r\n        }\r\n\r\n        return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\r\n    }\r\n\r\n    /* eslint no-unused-vars: \"off\" */\r\n    function slidePrev(speed, runCallbacks, internal) {\r\n        if (speed === void 0) {\r\n            speed = this.params.speed;\r\n        }\r\n\r\n        if (runCallbacks === void 0) {\r\n            runCallbacks = true;\r\n        }\r\n\r\n        var swiper = this;\r\n        var params = swiper.params,\r\n            animating = swiper.animating,\r\n            snapGrid = swiper.snapGrid,\r\n            slidesGrid = swiper.slidesGrid,\r\n            rtlTranslate = swiper.rtlTranslate;\r\n\r\n        if (params.loop) {\r\n            if (animating && params.loopPreventsSlide) return false;\r\n            swiper.loopFix(); // eslint-disable-next-line\r\n\r\n            swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\r\n        }\r\n\r\n        var translate = rtlTranslate ? swiper.translate : -swiper.translate;\r\n\r\n        function normalize(val) {\r\n            if (val < 0) return -Math.floor(Math.abs(val));\r\n            return Math.floor(val);\r\n        }\r\n\r\n        var normalizedTranslate = normalize(translate);\r\n        var normalizedSnapGrid = snapGrid.map(function (val) {\r\n            return normalize(val);\r\n        });\r\n        var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\r\n        var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\r\n\r\n        if (typeof prevSnap === 'undefined' && params.cssMode) {\r\n            snapGrid.forEach(function (snap) {\r\n                if (!prevSnap && normalizedTranslate >= snap) prevSnap = snap;\r\n            });\r\n        }\r\n\r\n        var prevIndex;\r\n\r\n        if (typeof prevSnap !== 'undefined') {\r\n            prevIndex = slidesGrid.indexOf(prevSnap);\r\n            if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\r\n        }\r\n\r\n        return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\r\n    }\r\n\r\n    /* eslint no-unused-vars: \"off\" */\r\n    function slideReset(speed, runCallbacks, internal) {\r\n        if (speed === void 0) {\r\n            speed = this.params.speed;\r\n        }\r\n\r\n        if (runCallbacks === void 0) {\r\n            runCallbacks = true;\r\n        }\r\n\r\n        var swiper = this;\r\n        return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\r\n    }\r\n\r\n    /* eslint no-unused-vars: \"off\" */\r\n    function slideToClosest(speed, runCallbacks, internal, threshold) {\r\n        if (speed === void 0) {\r\n            speed = this.params.speed;\r\n        }\r\n\r\n        if (runCallbacks === void 0) {\r\n            runCallbacks = true;\r\n        }\r\n\r\n        if (threshold === void 0) {\r\n            threshold = 0.5;\r\n        }\r\n\r\n        var swiper = this;\r\n        var index = swiper.activeIndex;\r\n        var skip = Math.min(swiper.params.slidesPerGroupSkip, index);\r\n        var snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\r\n        var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n\r\n        if (translate >= swiper.snapGrid[snapIndex]) {\r\n            // The current translate is on or after the current snap index, so the choice\r\n            // is between the current index and the one after it.\r\n            var currentSnap = swiper.snapGrid[snapIndex];\r\n            var nextSnap = swiper.snapGrid[snapIndex + 1];\r\n\r\n            if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\r\n                index += swiper.params.slidesPerGroup;\r\n            }\r\n        } else {\r\n            // The current translate is before the current snap index, so the choice\r\n            // is between the current index and the one before it.\r\n            var prevSnap = swiper.snapGrid[snapIndex - 1];\r\n            var _currentSnap = swiper.snapGrid[snapIndex];\r\n\r\n            if (translate - prevSnap <= (_currentSnap - prevSnap) * threshold) {\r\n                index -= swiper.params.slidesPerGroup;\r\n            }\r\n        }\r\n\r\n        index = Math.max(index, 0);\r\n        index = Math.min(index, swiper.slidesGrid.length - 1);\r\n        return swiper.slideTo(index, speed, runCallbacks, internal);\r\n    }\r\n\r\n    function slideToClickedSlide() {\r\n        var swiper = this;\r\n        var params = swiper.params,\r\n            $wrapperEl = swiper.$wrapperEl;\r\n        var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\r\n        var slideToIndex = swiper.clickedIndex;\r\n        var realIndex;\r\n\r\n        if (params.loop) {\r\n            if (swiper.animating) return;\r\n            realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\r\n\r\n            if (params.centeredSlides) {\r\n                if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\r\n                    swiper.loopFix();\r\n                    slideToIndex = $wrapperEl.children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\").eq(0).index();\r\n                    nextTick(function () {\r\n                        swiper.slideTo(slideToIndex);\r\n                    });\r\n                } else {\r\n                    swiper.slideTo(slideToIndex);\r\n                }\r\n            } else if (slideToIndex > swiper.slides.length - slidesPerView) {\r\n                swiper.loopFix();\r\n                slideToIndex = $wrapperEl.children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\").eq(0).index();\r\n                nextTick(function () {\r\n                    swiper.slideTo(slideToIndex);\r\n                });\r\n            } else {\r\n                swiper.slideTo(slideToIndex);\r\n            }\r\n        } else {\r\n            swiper.slideTo(slideToIndex);\r\n        }\r\n    }\r\n\r\n    var slide = {\r\n        slideTo: slideTo,\r\n        slideToLoop: slideToLoop,\r\n        slideNext: slideNext,\r\n        slidePrev: slidePrev,\r\n        slideReset: slideReset,\r\n        slideToClosest: slideToClosest,\r\n        slideToClickedSlide: slideToClickedSlide\r\n    };\r\n\r\n    function loopCreate() {\r\n        var swiper = this;\r\n        var document = getDocument();\r\n        var params = swiper.params,\r\n            $wrapperEl = swiper.$wrapperEl; // Remove duplicated slides\r\n\r\n        $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass).remove();\r\n        var slides = $wrapperEl.children(\".\" + params.slideClass);\r\n\r\n        if (params.loopFillGroupWithBlank) {\r\n            var blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\r\n\r\n            if (blankSlidesNum !== params.slidesPerGroup) {\r\n                for (var i = 0; i < blankSlidesNum; i += 1) {\r\n                    var blankNode = $(document.createElement('div')).addClass(params.slideClass + \" \" + params.slideBlankClass);\r\n                    $wrapperEl.append(blankNode);\r\n                }\r\n\r\n                slides = $wrapperEl.children(\".\" + params.slideClass);\r\n            }\r\n        }\r\n\r\n        if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\r\n        swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\r\n        swiper.loopedSlides += params.loopAdditionalSlides;\r\n\r\n        if (swiper.loopedSlides > slides.length) {\r\n            swiper.loopedSlides = slides.length;\r\n        }\r\n\r\n        var prependSlides = [];\r\n        var appendSlides = [];\r\n        slides.each(function (el, index) {\r\n            var slide = $(el);\r\n\r\n            if (index < swiper.loopedSlides) {\r\n                appendSlides.push(el);\r\n            }\r\n\r\n            if (index < slides.length && index >= slides.length - swiper.loopedSlides) {\r\n                prependSlides.push(el);\r\n            }\r\n\r\n            slide.attr('data-swiper-slide-index', index);\r\n        });\r\n\r\n        for (var _i = 0; _i < appendSlides.length; _i += 1) {\r\n            $wrapperEl.append($(appendSlides[_i].cloneNode(true)).addClass(params.slideDuplicateClass));\r\n        }\r\n\r\n        for (var _i2 = prependSlides.length - 1; _i2 >= 0; _i2 -= 1) {\r\n            $wrapperEl.prepend($(prependSlides[_i2].cloneNode(true)).addClass(params.slideDuplicateClass));\r\n        }\r\n    }\r\n\r\n    function loopFix() {\r\n        var swiper = this;\r\n        swiper.emit('beforeLoopFix');\r\n        var activeIndex = swiper.activeIndex,\r\n            slides = swiper.slides,\r\n            loopedSlides = swiper.loopedSlides,\r\n            allowSlidePrev = swiper.allowSlidePrev,\r\n            allowSlideNext = swiper.allowSlideNext,\r\n            snapGrid = swiper.snapGrid,\r\n            rtl = swiper.rtlTranslate;\r\n        var newIndex;\r\n        swiper.allowSlidePrev = true;\r\n        swiper.allowSlideNext = true;\r\n        var snapTranslate = -snapGrid[activeIndex];\r\n        var diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding\r\n\r\n        if (activeIndex < loopedSlides) {\r\n            newIndex = slides.length - loopedSlides * 3 + activeIndex;\r\n            newIndex += loopedSlides;\r\n            var slideChanged = swiper.slideTo(newIndex, 0, false, true);\r\n\r\n            if (slideChanged && diff !== 0) {\r\n                swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\r\n            }\r\n        } else if (activeIndex >= slides.length - loopedSlides) {\r\n            // Fix For Positive Oversliding\r\n            newIndex = -slides.length + activeIndex + loopedSlides;\r\n            newIndex += loopedSlides;\r\n\r\n            var _slideChanged = swiper.slideTo(newIndex, 0, false, true);\r\n\r\n            if (_slideChanged && diff !== 0) {\r\n                swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\r\n            }\r\n        }\r\n\r\n        swiper.allowSlidePrev = allowSlidePrev;\r\n        swiper.allowSlideNext = allowSlideNext;\r\n        swiper.emit('loopFix');\r\n    }\r\n\r\n    function loopDestroy() {\r\n        var swiper = this;\r\n        var $wrapperEl = swiper.$wrapperEl,\r\n            params = swiper.params,\r\n            slides = swiper.slides;\r\n        $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \",.\" + params.slideClass + \".\" + params.slideBlankClass).remove();\r\n        slides.removeAttr('data-swiper-slide-index');\r\n    }\r\n\r\n    var loop = {\r\n        loopCreate: loopCreate,\r\n        loopFix: loopFix,\r\n        loopDestroy: loopDestroy\r\n    };\r\n\r\n    function setGrabCursor(moving) {\r\n        var swiper = this;\r\n        if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\r\n        var el = swiper.el;\r\n        el.style.cursor = 'move';\r\n        el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\r\n        el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\r\n        el.style.cursor = moving ? 'grabbing' : 'grab';\r\n    }\r\n\r\n    function unsetGrabCursor() {\r\n        var swiper = this;\r\n\r\n        if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\r\n            return;\r\n        }\r\n\r\n        swiper.el.style.cursor = '';\r\n    }\r\n\r\n    var grabCursor = {\r\n        setGrabCursor: setGrabCursor,\r\n        unsetGrabCursor: unsetGrabCursor\r\n    };\r\n\r\n    function appendSlide(slides) {\r\n        var swiper = this;\r\n        var $wrapperEl = swiper.$wrapperEl,\r\n            params = swiper.params;\r\n\r\n        if (params.loop) {\r\n            swiper.loopDestroy();\r\n        }\r\n\r\n        if (typeof slides === 'object' && 'length' in slides) {\r\n            for (var i = 0; i < slides.length; i += 1) {\r\n                if (slides[i]) $wrapperEl.append(slides[i]);\r\n            }\r\n        } else {\r\n            $wrapperEl.append(slides);\r\n        }\r\n\r\n        if (params.loop) {\r\n            swiper.loopCreate();\r\n        }\r\n\r\n        if (!(params.observer && swiper.support.observer)) {\r\n            swiper.update();\r\n        }\r\n    }\r\n\r\n    function prependSlide(slides) {\r\n        var swiper = this;\r\n        var params = swiper.params,\r\n            $wrapperEl = swiper.$wrapperEl,\r\n            activeIndex = swiper.activeIndex;\r\n\r\n        if (params.loop) {\r\n            swiper.loopDestroy();\r\n        }\r\n\r\n        var newActiveIndex = activeIndex + 1;\r\n\r\n        if (typeof slides === 'object' && 'length' in slides) {\r\n            for (var i = 0; i < slides.length; i += 1) {\r\n                if (slides[i]) $wrapperEl.prepend(slides[i]);\r\n            }\r\n\r\n            newActiveIndex = activeIndex + slides.length;\r\n        } else {\r\n            $wrapperEl.prepend(slides);\r\n        }\r\n\r\n        if (params.loop) {\r\n            swiper.loopCreate();\r\n        }\r\n\r\n        if (!(params.observer && swiper.support.observer)) {\r\n            swiper.update();\r\n        }\r\n\r\n        swiper.slideTo(newActiveIndex, 0, false);\r\n    }\r\n\r\n    function addSlide(index, slides) {\r\n        var swiper = this;\r\n        var $wrapperEl = swiper.$wrapperEl,\r\n            params = swiper.params,\r\n            activeIndex = swiper.activeIndex;\r\n        var activeIndexBuffer = activeIndex;\r\n\r\n        if (params.loop) {\r\n            activeIndexBuffer -= swiper.loopedSlides;\r\n            swiper.loopDestroy();\r\n            swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\r\n        }\r\n\r\n        var baseLength = swiper.slides.length;\r\n\r\n        if (index <= 0) {\r\n            swiper.prependSlide(slides);\r\n            return;\r\n        }\r\n\r\n        if (index >= baseLength) {\r\n            swiper.appendSlide(slides);\r\n            return;\r\n        }\r\n\r\n        var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\r\n        var slidesBuffer = [];\r\n\r\n        for (var i = baseLength - 1; i >= index; i -= 1) {\r\n            var currentSlide = swiper.slides.eq(i);\r\n            currentSlide.remove();\r\n            slidesBuffer.unshift(currentSlide);\r\n        }\r\n\r\n        if (typeof slides === 'object' && 'length' in slides) {\r\n            for (var _i = 0; _i < slides.length; _i += 1) {\r\n                if (slides[_i]) $wrapperEl.append(slides[_i]);\r\n            }\r\n\r\n            newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\r\n        } else {\r\n            $wrapperEl.append(slides);\r\n        }\r\n\r\n        for (var _i2 = 0; _i2 < slidesBuffer.length; _i2 += 1) {\r\n            $wrapperEl.append(slidesBuffer[_i2]);\r\n        }\r\n\r\n        if (params.loop) {\r\n            swiper.loopCreate();\r\n        }\r\n\r\n        if (!(params.observer && swiper.support.observer)) {\r\n            swiper.update();\r\n        }\r\n\r\n        if (params.loop) {\r\n            swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\r\n        } else {\r\n            swiper.slideTo(newActiveIndex, 0, false);\r\n        }\r\n    }\r\n\r\n    function removeSlide(slidesIndexes) {\r\n        var swiper = this;\r\n        var params = swiper.params,\r\n            $wrapperEl = swiper.$wrapperEl,\r\n            activeIndex = swiper.activeIndex;\r\n        var activeIndexBuffer = activeIndex;\r\n\r\n        if (params.loop) {\r\n            activeIndexBuffer -= swiper.loopedSlides;\r\n            swiper.loopDestroy();\r\n            swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\r\n        }\r\n\r\n        var newActiveIndex = activeIndexBuffer;\r\n        var indexToRemove;\r\n\r\n        if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\r\n            for (var i = 0; i < slidesIndexes.length; i += 1) {\r\n                indexToRemove = slidesIndexes[i];\r\n                if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\r\n                if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\r\n            }\r\n\r\n            newActiveIndex = Math.max(newActiveIndex, 0);\r\n        } else {\r\n            indexToRemove = slidesIndexes;\r\n            if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\r\n            if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\r\n            newActiveIndex = Math.max(newActiveIndex, 0);\r\n        }\r\n\r\n        if (params.loop) {\r\n            swiper.loopCreate();\r\n        }\r\n\r\n        if (!(params.observer && swiper.support.observer)) {\r\n            swiper.update();\r\n        }\r\n\r\n        if (params.loop) {\r\n            swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\r\n        } else {\r\n            swiper.slideTo(newActiveIndex, 0, false);\r\n        }\r\n    }\r\n\r\n    function removeAllSlides() {\r\n        var swiper = this;\r\n        var slidesIndexes = [];\r\n\r\n        for (var i = 0; i < swiper.slides.length; i += 1) {\r\n            slidesIndexes.push(i);\r\n        }\r\n\r\n        swiper.removeSlide(slidesIndexes);\r\n    }\r\n\r\n    var manipulation = {\r\n        appendSlide: appendSlide,\r\n        prependSlide: prependSlide,\r\n        addSlide: addSlide,\r\n        removeSlide: removeSlide,\r\n        removeAllSlides: removeAllSlides\r\n    };\r\n\r\n    function onTouchStart(event) {\r\n        var swiper = this;\r\n        var document = getDocument();\r\n        var window = getWindow();\r\n        var data = swiper.touchEventsData;\r\n        var params = swiper.params,\r\n            touches = swiper.touches;\r\n\r\n        if (swiper.animating && params.preventInteractionOnTransition) {\r\n            return;\r\n        }\r\n\r\n        var e = event;\r\n        if (e.originalEvent) e = e.originalEvent;\r\n        var $targetEl = $(e.target);\r\n\r\n        if (params.touchEventsTarget === 'wrapper') {\r\n            if (!$targetEl.closest(swiper.wrapperEl).length) return;\r\n        }\r\n\r\n        data.isTouchEvent = e.type === 'touchstart';\r\n        if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\r\n        if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\r\n        if (data.isTouched && data.isMoved) return; // change target el for shadow root componenet\r\n\r\n        var swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\r\n\r\n        if (swipingClassHasValue && e.target && e.target.shadowRoot && event.path && event.path[0]) {\r\n            $targetEl = $(event.path[0]);\r\n        }\r\n\r\n        if (params.noSwiping && $targetEl.closest(params.noSwipingSelector ? params.noSwipingSelector : \".\" + params.noSwipingClass)[0]) {\r\n            swiper.allowClick = true;\r\n            return;\r\n        }\r\n\r\n        if (params.swipeHandler) {\r\n            if (!$targetEl.closest(params.swipeHandler)[0]) return;\r\n        }\r\n\r\n        touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\r\n        touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\r\n        var startX = touches.currentX;\r\n        var startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\r\n\r\n        var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\r\n        var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\r\n\r\n        if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.screen.width - edgeSwipeThreshold)) {\r\n            return;\r\n        }\r\n\r\n        extend$1(data, {\r\n            isTouched: true,\r\n            isMoved: false,\r\n            allowTouchCallbacks: true,\r\n            isScrolling: undefined,\r\n            startMoving: undefined\r\n        });\r\n        touches.startX = startX;\r\n        touches.startY = startY;\r\n        data.touchStartTime = now();\r\n        swiper.allowClick = true;\r\n        swiper.updateSize();\r\n        swiper.swipeDirection = undefined;\r\n        if (params.threshold > 0) data.allowThresholdMove = false;\r\n\r\n        if (e.type !== 'touchstart') {\r\n            var preventDefault = true;\r\n            if ($targetEl.is(data.formElements)) preventDefault = false;\r\n\r\n            if (document.activeElement && $(document.activeElement).is(data.formElements) && document.activeElement !== $targetEl[0]) {\r\n                document.activeElement.blur();\r\n            }\r\n\r\n            var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\r\n\r\n            if (params.touchStartForcePreventDefault || shouldPreventDefault) {\r\n                e.preventDefault();\r\n            }\r\n        }\r\n\r\n        swiper.emit('touchStart', e);\r\n    }\r\n\r\n    function onTouchMove(event) {\r\n        var document = getDocument();\r\n        var swiper = this;\r\n        var data = swiper.touchEventsData;\r\n        var params = swiper.params,\r\n            touches = swiper.touches,\r\n            rtl = swiper.rtlTranslate;\r\n        var e = event;\r\n        if (e.originalEvent) e = e.originalEvent;\r\n\r\n        if (!data.isTouched) {\r\n            if (data.startMoving && data.isScrolling) {\r\n                swiper.emit('touchMoveOpposite', e);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (data.isTouchEvent && e.type !== 'touchmove') return;\r\n        var targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\r\n        var pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\r\n        var pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\r\n\r\n        if (e.preventedByNestedSwiper) {\r\n            touches.startX = pageX;\r\n            touches.startY = pageY;\r\n            return;\r\n        }\r\n\r\n        if (!swiper.allowTouchMove) {\r\n            // isMoved = true;\r\n            swiper.allowClick = false;\r\n\r\n            if (data.isTouched) {\r\n                extend$1(touches, {\r\n                    startX: pageX,\r\n                    startY: pageY,\r\n                    currentX: pageX,\r\n                    currentY: pageY\r\n                });\r\n                data.touchStartTime = now();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\r\n            if (swiper.isVertical()) {\r\n                // Vertical\r\n                if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\r\n                    data.isTouched = false;\r\n                    data.isMoved = false;\r\n                    return;\r\n                }\r\n            } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (data.isTouchEvent && document.activeElement) {\r\n            if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\r\n                data.isMoved = true;\r\n                swiper.allowClick = false;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (data.allowTouchCallbacks) {\r\n            swiper.emit('touchMove', e);\r\n        }\r\n\r\n        if (e.targetTouches && e.targetTouches.length > 1) return;\r\n        touches.currentX = pageX;\r\n        touches.currentY = pageY;\r\n        var diffX = touches.currentX - touches.startX;\r\n        var diffY = touches.currentY - touches.startY;\r\n        if (swiper.params.threshold && Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2)) < swiper.params.threshold) return;\r\n\r\n        if (typeof data.isScrolling === 'undefined') {\r\n            var touchAngle;\r\n\r\n            if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\r\n                data.isScrolling = false;\r\n            } else {\r\n                // eslint-disable-next-line\r\n                if (diffX * diffX + diffY * diffY >= 25) {\r\n                    touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\r\n                    data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (data.isScrolling) {\r\n            swiper.emit('touchMoveOpposite', e);\r\n        }\r\n\r\n        if (typeof data.startMoving === 'undefined') {\r\n            if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\r\n                data.startMoving = true;\r\n            }\r\n        }\r\n\r\n        if (data.isScrolling) {\r\n            data.isTouched = false;\r\n            return;\r\n        }\r\n\r\n        if (!data.startMoving) {\r\n            return;\r\n        }\r\n\r\n        swiper.allowClick = false;\r\n\r\n        if (!params.cssMode && e.cancelable) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        if (params.touchMoveStopPropagation && !params.nested) {\r\n            e.stopPropagation();\r\n        }\r\n\r\n        if (!data.isMoved) {\r\n            if (params.loop) {\r\n                swiper.loopFix();\r\n            }\r\n\r\n            data.startTranslate = swiper.getTranslate();\r\n            swiper.setTransition(0);\r\n\r\n            if (swiper.animating) {\r\n                swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\r\n            }\r\n\r\n            data.allowMomentumBounce = false; // Grab Cursor\r\n\r\n            if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\r\n                swiper.setGrabCursor(true);\r\n            }\r\n\r\n            swiper.emit('sliderFirstMove', e);\r\n        }\r\n\r\n        swiper.emit('sliderMove', e);\r\n        data.isMoved = true;\r\n        var diff = swiper.isHorizontal() ? diffX : diffY;\r\n        touches.diff = diff;\r\n        diff *= params.touchRatio;\r\n        if (rtl) diff = -diff;\r\n        swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\r\n        data.currentTranslate = diff + data.startTranslate;\r\n        var disableParentSwiper = true;\r\n        var resistanceRatio = params.resistanceRatio;\r\n\r\n        if (params.touchReleaseOnEdges) {\r\n            resistanceRatio = 0;\r\n        }\r\n\r\n        if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\r\n            disableParentSwiper = false;\r\n            if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + Math.pow(-swiper.minTranslate() + data.startTranslate + diff, resistanceRatio);\r\n        } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\r\n            disableParentSwiper = false;\r\n            if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - Math.pow(swiper.maxTranslate() - data.startTranslate - diff, resistanceRatio);\r\n        }\r\n\r\n        if (disableParentSwiper) {\r\n            e.preventedByNestedSwiper = true;\r\n        } // Directions locks\r\n\r\n\r\n        if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\r\n            data.currentTranslate = data.startTranslate;\r\n        }\r\n\r\n        if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\r\n            data.currentTranslate = data.startTranslate;\r\n        } // Threshold\r\n\r\n\r\n        if (params.threshold > 0) {\r\n            if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\r\n                if (!data.allowThresholdMove) {\r\n                    data.allowThresholdMove = true;\r\n                    touches.startX = touches.currentX;\r\n                    touches.startY = touches.currentY;\r\n                    data.currentTranslate = data.startTranslate;\r\n                    touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\r\n                    return;\r\n                }\r\n            } else {\r\n                data.currentTranslate = data.startTranslate;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!params.followFinger || params.cssMode) return; // Update active index in free mode\r\n\r\n        if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\r\n            swiper.updateActiveIndex();\r\n            swiper.updateSlidesClasses();\r\n        }\r\n\r\n        if (params.freeMode) {\r\n            // Velocity\r\n            if (data.velocities.length === 0) {\r\n                data.velocities.push({\r\n                    position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\r\n                    time: data.touchStartTime\r\n                });\r\n            }\r\n\r\n            data.velocities.push({\r\n                position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\r\n                time: now()\r\n            });\r\n        } // Update progress\r\n\r\n\r\n        swiper.updateProgress(data.currentTranslate); // Update translate\r\n\r\n        swiper.setTranslate(data.currentTranslate);\r\n    }\r\n\r\n    function onTouchEnd(event) {\r\n        var swiper = this;\r\n        var data = swiper.touchEventsData;\r\n        var params = swiper.params,\r\n            touches = swiper.touches,\r\n            rtl = swiper.rtlTranslate,\r\n            $wrapperEl = swiper.$wrapperEl,\r\n            slidesGrid = swiper.slidesGrid,\r\n            snapGrid = swiper.snapGrid;\r\n        var e = event;\r\n        if (e.originalEvent) e = e.originalEvent;\r\n\r\n        if (data.allowTouchCallbacks) {\r\n            swiper.emit('touchEnd', e);\r\n        }\r\n\r\n        data.allowTouchCallbacks = false;\r\n\r\n        if (!data.isTouched) {\r\n            if (data.isMoved && params.grabCursor) {\r\n                swiper.setGrabCursor(false);\r\n            }\r\n\r\n            data.isMoved = false;\r\n            data.startMoving = false;\r\n            return;\r\n        } // Return Grab Cursor\r\n\r\n\r\n        if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\r\n            swiper.setGrabCursor(false);\r\n        } // Time diff\r\n\r\n\r\n        var touchEndTime = now();\r\n        var timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\r\n\r\n        if (swiper.allowClick) {\r\n            swiper.updateClickedSlide(e);\r\n            swiper.emit('tap click', e);\r\n\r\n            if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\r\n                swiper.emit('doubleTap doubleClick', e);\r\n            }\r\n        }\r\n\r\n        data.lastClickTime = now();\r\n        nextTick(function () {\r\n            if (!swiper.destroyed) swiper.allowClick = true;\r\n        });\r\n\r\n        if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\r\n            data.isTouched = false;\r\n            data.isMoved = false;\r\n            data.startMoving = false;\r\n            return;\r\n        }\r\n\r\n        data.isTouched = false;\r\n        data.isMoved = false;\r\n        data.startMoving = false;\r\n        var currentPos;\r\n\r\n        if (params.followFinger) {\r\n            currentPos = rtl ? swiper.translate : -swiper.translate;\r\n        } else {\r\n            currentPos = -data.currentTranslate;\r\n        }\r\n\r\n        if (params.cssMode) {\r\n            return;\r\n        }\r\n\r\n        if (params.freeMode) {\r\n            if (currentPos < -swiper.minTranslate()) {\r\n                swiper.slideTo(swiper.activeIndex);\r\n                return;\r\n            }\r\n\r\n            if (currentPos > -swiper.maxTranslate()) {\r\n                if (swiper.slides.length < snapGrid.length) {\r\n                    swiper.slideTo(snapGrid.length - 1);\r\n                } else {\r\n                    swiper.slideTo(swiper.slides.length - 1);\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            if (params.freeModeMomentum) {\r\n                if (data.velocities.length > 1) {\r\n                    var lastMoveEvent = data.velocities.pop();\r\n                    var velocityEvent = data.velocities.pop();\r\n                    var distance = lastMoveEvent.position - velocityEvent.position;\r\n                    var time = lastMoveEvent.time - velocityEvent.time;\r\n                    swiper.velocity = distance / time;\r\n                    swiper.velocity /= 2;\r\n\r\n                    if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\r\n                        swiper.velocity = 0;\r\n                    } // this implies that the user stopped moving a finger then released.\r\n                    // There would be no events with distance zero, so the last event is stale.\r\n\r\n\r\n                    if (time > 150 || now() - lastMoveEvent.time > 300) {\r\n                        swiper.velocity = 0;\r\n                    }\r\n                } else {\r\n                    swiper.velocity = 0;\r\n                }\r\n\r\n                swiper.velocity *= params.freeModeMomentumVelocityRatio;\r\n                data.velocities.length = 0;\r\n                var momentumDuration = 1000 * params.freeModeMomentumRatio;\r\n                var momentumDistance = swiper.velocity * momentumDuration;\r\n                var newPosition = swiper.translate + momentumDistance;\r\n                if (rtl) newPosition = -newPosition;\r\n                var doBounce = false;\r\n                var afterBouncePosition;\r\n                var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\r\n                var needsLoopFix;\r\n\r\n                if (newPosition < swiper.maxTranslate()) {\r\n                    if (params.freeModeMomentumBounce) {\r\n                        if (newPosition + swiper.maxTranslate() < -bounceAmount) {\r\n                            newPosition = swiper.maxTranslate() - bounceAmount;\r\n                        }\r\n\r\n                        afterBouncePosition = swiper.maxTranslate();\r\n                        doBounce = true;\r\n                        data.allowMomentumBounce = true;\r\n                    } else {\r\n                        newPosition = swiper.maxTranslate();\r\n                    }\r\n\r\n                    if (params.loop && params.centeredSlides) needsLoopFix = true;\r\n                } else if (newPosition > swiper.minTranslate()) {\r\n                    if (params.freeModeMomentumBounce) {\r\n                        if (newPosition - swiper.minTranslate() > bounceAmount) {\r\n                            newPosition = swiper.minTranslate() + bounceAmount;\r\n                        }\r\n\r\n                        afterBouncePosition = swiper.minTranslate();\r\n                        doBounce = true;\r\n                        data.allowMomentumBounce = true;\r\n                    } else {\r\n                        newPosition = swiper.minTranslate();\r\n                    }\r\n\r\n                    if (params.loop && params.centeredSlides) needsLoopFix = true;\r\n                } else if (params.freeModeSticky) {\r\n                    var nextSlide;\r\n\r\n                    for (var j = 0; j < snapGrid.length; j += 1) {\r\n                        if (snapGrid[j] > -newPosition) {\r\n                            nextSlide = j;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\r\n                        newPosition = snapGrid[nextSlide];\r\n                    } else {\r\n                        newPosition = snapGrid[nextSlide - 1];\r\n                    }\r\n\r\n                    newPosition = -newPosition;\r\n                }\r\n\r\n                if (needsLoopFix) {\r\n                    swiper.once('transitionEnd', function () {\r\n                        swiper.loopFix();\r\n                    });\r\n                } // Fix duration\r\n\r\n\r\n                if (swiper.velocity !== 0) {\r\n                    if (rtl) {\r\n                        momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\r\n                    } else {\r\n                        momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\r\n                    }\r\n\r\n                    if (params.freeModeSticky) {\r\n                        // If freeModeSticky is active and the user ends a swipe with a slow-velocity\r\n                        // event, then durations can be 20+ seconds to slide one (or zero!) slides.\r\n                        // It's easy to see this when simulating touch with mouse events. To fix this,\r\n                        // limit single-slide swipes to the default slide duration. This also has the\r\n                        // nice side effect of matching slide speed if the user stopped moving before\r\n                        // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\r\n                        // For faster swipes, also apply limits (albeit higher ones).\r\n                        var moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\r\n                        var currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\r\n\r\n                        if (moveDistance < currentSlideSize) {\r\n                            momentumDuration = params.speed;\r\n                        } else if (moveDistance < 2 * currentSlideSize) {\r\n                            momentumDuration = params.speed * 1.5;\r\n                        } else {\r\n                            momentumDuration = params.speed * 2.5;\r\n                        }\r\n                    }\r\n                } else if (params.freeModeSticky) {\r\n                    swiper.slideToClosest();\r\n                    return;\r\n                }\r\n\r\n                if (params.freeModeMomentumBounce && doBounce) {\r\n                    swiper.updateProgress(afterBouncePosition);\r\n                    swiper.setTransition(momentumDuration);\r\n                    swiper.setTranslate(newPosition);\r\n                    swiper.transitionStart(true, swiper.swipeDirection);\r\n                    swiper.animating = true;\r\n                    $wrapperEl.transitionEnd(function () {\r\n                        if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\r\n                        swiper.emit('momentumBounce');\r\n                        swiper.setTransition(params.speed);\r\n                        setTimeout(function () {\r\n                            swiper.setTranslate(afterBouncePosition);\r\n                            $wrapperEl.transitionEnd(function () {\r\n                                if (!swiper || swiper.destroyed) return;\r\n                                swiper.transitionEnd();\r\n                            });\r\n                        }, 0);\r\n                    });\r\n                } else if (swiper.velocity) {\r\n                    swiper.updateProgress(newPosition);\r\n                    swiper.setTransition(momentumDuration);\r\n                    swiper.setTranslate(newPosition);\r\n                    swiper.transitionStart(true, swiper.swipeDirection);\r\n\r\n                    if (!swiper.animating) {\r\n                        swiper.animating = true;\r\n                        $wrapperEl.transitionEnd(function () {\r\n                            if (!swiper || swiper.destroyed) return;\r\n                            swiper.transitionEnd();\r\n                        });\r\n                    }\r\n                } else {\r\n                    swiper.updateProgress(newPosition);\r\n                }\r\n\r\n                swiper.updateActiveIndex();\r\n                swiper.updateSlidesClasses();\r\n            } else if (params.freeModeSticky) {\r\n                swiper.slideToClosest();\r\n                return;\r\n            }\r\n\r\n            if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\r\n                swiper.updateProgress();\r\n                swiper.updateActiveIndex();\r\n                swiper.updateSlidesClasses();\r\n            }\r\n\r\n            return;\r\n        } // Find current slide\r\n\r\n\r\n        var stopIndex = 0;\r\n        var groupSize = swiper.slidesSizesGrid[0];\r\n\r\n        for (var i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\r\n            var _increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\r\n\r\n            if (typeof slidesGrid[i + _increment] !== 'undefined') {\r\n                if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + _increment]) {\r\n                    stopIndex = i;\r\n                    groupSize = slidesGrid[i + _increment] - slidesGrid[i];\r\n                }\r\n            } else if (currentPos >= slidesGrid[i]) {\r\n                stopIndex = i;\r\n                groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\r\n            }\r\n        } // Find current slide size\r\n\r\n\r\n        var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\r\n        var increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\r\n\r\n        if (timeDiff > params.longSwipesMs) {\r\n            // Long touches\r\n            if (!params.longSwipes) {\r\n                swiper.slideTo(swiper.activeIndex);\r\n                return;\r\n            }\r\n\r\n            if (swiper.swipeDirection === 'next') {\r\n                if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\r\n            }\r\n\r\n            if (swiper.swipeDirection === 'prev') {\r\n                if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\r\n            }\r\n        } else {\r\n            // Short swipes\r\n            if (!params.shortSwipes) {\r\n                swiper.slideTo(swiper.activeIndex);\r\n                return;\r\n            }\r\n\r\n            var isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\r\n\r\n            if (!isNavButtonTarget) {\r\n                if (swiper.swipeDirection === 'next') {\r\n                    swiper.slideTo(stopIndex + increment);\r\n                }\r\n\r\n                if (swiper.swipeDirection === 'prev') {\r\n                    swiper.slideTo(stopIndex);\r\n                }\r\n            } else if (e.target === swiper.navigation.nextEl) {\r\n                swiper.slideTo(stopIndex + increment);\r\n            } else {\r\n                swiper.slideTo(stopIndex);\r\n            }\r\n        }\r\n    }\r\n\r\n    function onResize() {\r\n        var swiper = this;\r\n        var params = swiper.params,\r\n            el = swiper.el;\r\n        if (el && el.offsetWidth === 0) return; // Breakpoints\r\n\r\n        if (params.breakpoints) {\r\n            swiper.setBreakpoint();\r\n        } // Save locks\r\n\r\n\r\n        var allowSlideNext = swiper.allowSlideNext,\r\n            allowSlidePrev = swiper.allowSlidePrev,\r\n            snapGrid = swiper.snapGrid; // Disable locks on resize\r\n\r\n        swiper.allowSlideNext = true;\r\n        swiper.allowSlidePrev = true;\r\n        swiper.updateSize();\r\n        swiper.updateSlides();\r\n        swiper.updateSlidesClasses();\r\n\r\n        if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) {\r\n            swiper.slideTo(swiper.slides.length - 1, 0, false, true);\r\n        } else {\r\n            swiper.slideTo(swiper.activeIndex, 0, false, true);\r\n        }\r\n\r\n        if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\r\n            swiper.autoplay.run();\r\n        } // Return locks after resize\r\n\r\n\r\n        swiper.allowSlidePrev = allowSlidePrev;\r\n        swiper.allowSlideNext = allowSlideNext;\r\n\r\n        if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\r\n            swiper.checkOverflow();\r\n        }\r\n    }\r\n\r\n    function onClick(e) {\r\n        var swiper = this;\r\n\r\n        if (!swiper.allowClick) {\r\n            if (swiper.params.preventClicks) e.preventDefault();\r\n\r\n            if (swiper.params.preventClicksPropagation && swiper.animating) {\r\n                e.stopPropagation();\r\n                e.stopImmediatePropagation();\r\n            }\r\n        }\r\n    }\r\n\r\n    function onScroll() {\r\n        var swiper = this;\r\n        var wrapperEl = swiper.wrapperEl,\r\n            rtlTranslate = swiper.rtlTranslate;\r\n        swiper.previousTranslate = swiper.translate;\r\n\r\n        if (swiper.isHorizontal()) {\r\n            if (rtlTranslate) {\r\n                swiper.translate = wrapperEl.scrollWidth - wrapperEl.offsetWidth - wrapperEl.scrollLeft;\r\n            } else {\r\n                swiper.translate = -wrapperEl.scrollLeft;\r\n            }\r\n        } else {\r\n            swiper.translate = -wrapperEl.scrollTop;\r\n        } // eslint-disable-next-line\r\n\r\n\r\n        if (swiper.translate === -0) swiper.translate = 0;\r\n        swiper.updateActiveIndex();\r\n        swiper.updateSlidesClasses();\r\n        var newProgress;\r\n        var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n\r\n        if (translatesDiff === 0) {\r\n            newProgress = 0;\r\n        } else {\r\n            newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\r\n        }\r\n\r\n        if (newProgress !== swiper.progress) {\r\n            swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\r\n        }\r\n\r\n        swiper.emit('setTranslate', swiper.translate, false);\r\n    }\r\n\r\n    var dummyEventAttached = false;\r\n\r\n    function dummyEventListener() {}\r\n\r\n    function attachEvents() {\r\n        var swiper = this;\r\n        var document = getDocument();\r\n        var params = swiper.params,\r\n            touchEvents = swiper.touchEvents,\r\n            el = swiper.el,\r\n            wrapperEl = swiper.wrapperEl,\r\n            device = swiper.device,\r\n            support = swiper.support;\r\n        swiper.onTouchStart = onTouchStart.bind(swiper);\r\n        swiper.onTouchMove = onTouchMove.bind(swiper);\r\n        swiper.onTouchEnd = onTouchEnd.bind(swiper);\r\n\r\n        if (params.cssMode) {\r\n            swiper.onScroll = onScroll.bind(swiper);\r\n        }\r\n\r\n        swiper.onClick = onClick.bind(swiper);\r\n        var capture = !!params.nested; // Touch Events\r\n\r\n        if (!support.touch && support.pointerEvents) {\r\n            el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\r\n            document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\r\n            document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\r\n        } else {\r\n            if (support.touch) {\r\n                var passiveListener = touchEvents.start === 'touchstart' && support.passiveListener && params.passiveListeners ? {\r\n                    passive: true,\r\n                    capture: false\r\n                } : false;\r\n                el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\r\n                el.addEventListener(touchEvents.move, swiper.onTouchMove, support.passiveListener ? {\r\n                    passive: false,\r\n                    capture: capture\r\n                } : capture);\r\n                el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\r\n\r\n                if (touchEvents.cancel) {\r\n                    el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\r\n                }\r\n\r\n                if (!dummyEventAttached) {\r\n                    document.addEventListener('touchstart', dummyEventListener);\r\n                    dummyEventAttached = true;\r\n                }\r\n            }\r\n\r\n            if (params.simulateTouch && !device.ios && !device.android || params.simulateTouch && !support.touch && device.ios) {\r\n                el.addEventListener('mousedown', swiper.onTouchStart, false);\r\n                document.addEventListener('mousemove', swiper.onTouchMove, capture);\r\n                document.addEventListener('mouseup', swiper.onTouchEnd, false);\r\n            }\r\n        } // Prevent Links Clicks\r\n\r\n\r\n        if (params.preventClicks || params.preventClicksPropagation) {\r\n            el.addEventListener('click', swiper.onClick, true);\r\n        }\r\n\r\n        if (params.cssMode) {\r\n            wrapperEl.addEventListener('scroll', swiper.onScroll);\r\n        } // Resize handler\r\n\r\n\r\n        if (params.updateOnWindowResize) {\r\n            swiper.on(device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\r\n        } else {\r\n            swiper.on('observerUpdate', onResize, true);\r\n        }\r\n    }\r\n\r\n    function detachEvents() {\r\n        var swiper = this;\r\n        var document = getDocument();\r\n        var params = swiper.params,\r\n            touchEvents = swiper.touchEvents,\r\n            el = swiper.el,\r\n            wrapperEl = swiper.wrapperEl,\r\n            device = swiper.device,\r\n            support = swiper.support;\r\n        var capture = !!params.nested; // Touch Events\r\n\r\n        if (!support.touch && support.pointerEvents) {\r\n            el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\r\n            document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\r\n            document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\r\n        } else {\r\n            if (support.touch) {\r\n                var passiveListener = touchEvents.start === 'onTouchStart' && support.passiveListener && params.passiveListeners ? {\r\n                    passive: true,\r\n                    capture: false\r\n                } : false;\r\n                el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\r\n                el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\r\n                el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\r\n\r\n                if (touchEvents.cancel) {\r\n                    el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\r\n                }\r\n            }\r\n\r\n            if (params.simulateTouch && !device.ios && !device.android || params.simulateTouch && !support.touch && device.ios) {\r\n                el.removeEventListener('mousedown', swiper.onTouchStart, false);\r\n                document.removeEventListener('mousemove', swiper.onTouchMove, capture);\r\n                document.removeEventListener('mouseup', swiper.onTouchEnd, false);\r\n            }\r\n        } // Prevent Links Clicks\r\n\r\n\r\n        if (params.preventClicks || params.preventClicksPropagation) {\r\n            el.removeEventListener('click', swiper.onClick, true);\r\n        }\r\n\r\n        if (params.cssMode) {\r\n            wrapperEl.removeEventListener('scroll', swiper.onScroll);\r\n        } // Resize handler\r\n\r\n\r\n        swiper.off(device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize);\r\n    }\r\n\r\n    var events = {\r\n        attachEvents: attachEvents,\r\n        detachEvents: detachEvents\r\n    };\r\n\r\n    function setBreakpoint() {\r\n        var swiper = this;\r\n        var activeIndex = swiper.activeIndex,\r\n            initialized = swiper.initialized,\r\n            _swiper$loopedSlides = swiper.loopedSlides,\r\n            loopedSlides = _swiper$loopedSlides === void 0 ? 0 : _swiper$loopedSlides,\r\n            params = swiper.params,\r\n            $el = swiper.$el;\r\n        var breakpoints = params.breakpoints;\r\n        if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\r\n\r\n        var breakpoint = swiper.getBreakpoint(breakpoints);\r\n\r\n        if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\r\n            var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\r\n\r\n            if (breakpointOnlyParams) {\r\n                ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach(function (param) {\r\n                    var paramValue = breakpointOnlyParams[param];\r\n                    if (typeof paramValue === 'undefined') return;\r\n\r\n                    if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\r\n                        breakpointOnlyParams[param] = 'auto';\r\n                    } else if (param === 'slidesPerView') {\r\n                        breakpointOnlyParams[param] = parseFloat(paramValue);\r\n                    } else {\r\n                        breakpointOnlyParams[param] = parseInt(paramValue, 10);\r\n                    }\r\n                });\r\n            }\r\n\r\n            var breakpointParams = breakpointOnlyParams || swiper.originalParams;\r\n            var wasMultiRow = params.slidesPerColumn > 1;\r\n            var isMultiRow = breakpointParams.slidesPerColumn > 1;\r\n\r\n            if (wasMultiRow && !isMultiRow) {\r\n                $el.removeClass(params.containerModifierClass + \"multirow \" + params.containerModifierClass + \"multirow-column\");\r\n                swiper.emitContainerClasses();\r\n            } else if (!wasMultiRow && isMultiRow) {\r\n                $el.addClass(params.containerModifierClass + \"multirow\");\r\n\r\n                if (breakpointParams.slidesPerColumnFill === 'column') {\r\n                    $el.addClass(params.containerModifierClass + \"multirow-column\");\r\n                }\r\n\r\n                swiper.emitContainerClasses();\r\n            }\r\n\r\n            var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\r\n            var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\r\n\r\n            if (directionChanged && initialized) {\r\n                swiper.changeDirection();\r\n            }\r\n\r\n            extend$1(swiper.params, breakpointParams);\r\n            extend$1(swiper, {\r\n                allowTouchMove: swiper.params.allowTouchMove,\r\n                allowSlideNext: swiper.params.allowSlideNext,\r\n                allowSlidePrev: swiper.params.allowSlidePrev\r\n            });\r\n            swiper.currentBreakpoint = breakpoint;\r\n            swiper.emit('_beforeBreakpoint', breakpointParams);\r\n\r\n            if (needsReLoop && initialized) {\r\n                swiper.loopDestroy();\r\n                swiper.loopCreate();\r\n                swiper.updateSlides();\r\n                swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\r\n            }\r\n\r\n            swiper.emit('breakpoint', breakpointParams);\r\n        }\r\n    }\r\n\r\n    function getBreakpoints(breakpoints) {\r\n        var window = getWindow(); // Get breakpoint for window width\r\n\r\n        if (!breakpoints) return undefined;\r\n        var breakpoint = false;\r\n        var points = Object.keys(breakpoints).map(function (point) {\r\n            if (typeof point === 'string' && point.indexOf('@') === 0) {\r\n                var minRatio = parseFloat(point.substr(1));\r\n                var value = window.innerHeight * minRatio;\r\n                return {\r\n                    value: value,\r\n                    point: point\r\n                };\r\n            }\r\n\r\n            return {\r\n                value: point,\r\n                point: point\r\n            };\r\n        });\r\n        points.sort(function (a, b) {\r\n            return parseInt(a.value, 10) - parseInt(b.value, 10);\r\n        });\r\n\r\n        for (var i = 0; i < points.length; i += 1) {\r\n            var _points$i = points[i],\r\n                point = _points$i.point,\r\n                value = _points$i.value;\r\n\r\n            if (value <= window.innerWidth) {\r\n                breakpoint = point;\r\n            }\r\n        }\r\n\r\n        return breakpoint || 'max';\r\n    }\r\n\r\n    var breakpoints = {\r\n        setBreakpoint: setBreakpoint,\r\n        getBreakpoint: getBreakpoints\r\n    };\r\n\r\n    function addClasses() {\r\n        var swiper = this;\r\n        var classNames = swiper.classNames,\r\n            params = swiper.params,\r\n            rtl = swiper.rtl,\r\n            $el = swiper.$el,\r\n            device = swiper.device;\r\n        var suffixes = [];\r\n        suffixes.push('initialized');\r\n        suffixes.push(params.direction);\r\n\r\n        if (params.freeMode) {\r\n            suffixes.push('free-mode');\r\n        }\r\n\r\n        if (params.autoHeight) {\r\n            suffixes.push('autoheight');\r\n        }\r\n\r\n        if (rtl) {\r\n            suffixes.push('rtl');\r\n        }\r\n\r\n        if (params.slidesPerColumn > 1) {\r\n            suffixes.push('multirow');\r\n\r\n            if (params.slidesPerColumnFill === 'column') {\r\n                suffixes.push('multirow-column');\r\n            }\r\n        }\r\n\r\n        if (device.android) {\r\n            suffixes.push('android');\r\n        }\r\n\r\n        if (device.ios) {\r\n            suffixes.push('ios');\r\n        }\r\n\r\n        if (params.cssMode) {\r\n            suffixes.push('css-mode');\r\n        }\r\n\r\n        suffixes.forEach(function (suffix) {\r\n            classNames.push(params.containerModifierClass + suffix);\r\n        });\r\n        $el.addClass(classNames.join(' '));\r\n        swiper.emitContainerClasses();\r\n    }\r\n\r\n    function removeClasses() {\r\n        var swiper = this;\r\n        var $el = swiper.$el,\r\n            classNames = swiper.classNames;\r\n        $el.removeClass(classNames.join(' '));\r\n        swiper.emitContainerClasses();\r\n    }\r\n\r\n    var classes = {\r\n        addClasses: addClasses,\r\n        removeClasses: removeClasses\r\n    };\r\n\r\n    function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\r\n        var window = getWindow();\r\n        var image;\r\n\r\n        function onReady() {\r\n            if (callback) callback();\r\n        }\r\n\r\n        var isPicture = $(imageEl).parent('picture')[0];\r\n\r\n        if (!isPicture && (!imageEl.complete || !checkForComplete)) {\r\n            if (src) {\r\n                image = new window.Image();\r\n                image.onload = onReady;\r\n                image.onerror = onReady;\r\n\r\n                if (sizes) {\r\n                    image.sizes = sizes;\r\n                }\r\n\r\n                if (srcset) {\r\n                    image.srcset = srcset;\r\n                }\r\n\r\n                if (src) {\r\n                    image.src = src;\r\n                }\r\n            } else {\r\n                onReady();\r\n            }\r\n        } else {\r\n            // image already loaded...\r\n            onReady();\r\n        }\r\n    }\r\n\r\n    function preloadImages() {\r\n        var swiper = this;\r\n        swiper.imagesToLoad = swiper.$el.find('img');\r\n\r\n        function onReady() {\r\n            if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\r\n            if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\r\n\r\n            if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\r\n                if (swiper.params.updateOnImagesReady) swiper.update();\r\n                swiper.emit('imagesReady');\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\r\n            var imageEl = swiper.imagesToLoad[i];\r\n            swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\r\n        }\r\n    }\r\n\r\n    var images = {\r\n        loadImage: loadImage,\r\n        preloadImages: preloadImages\r\n    };\r\n\r\n    function checkOverflow() {\r\n        var swiper = this;\r\n        var params = swiper.params;\r\n        var wasLocked = swiper.isLocked;\r\n        var lastSlidePosition = swiper.slides.length > 0 && params.slidesOffsetBefore + params.spaceBetween * (swiper.slides.length - 1) + swiper.slides[0].offsetWidth * swiper.slides.length;\r\n\r\n        if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\r\n            swiper.isLocked = lastSlidePosition <= swiper.size;\r\n        } else {\r\n            swiper.isLocked = swiper.snapGrid.length === 1;\r\n        }\r\n\r\n        swiper.allowSlideNext = !swiper.isLocked;\r\n        swiper.allowSlidePrev = !swiper.isLocked; // events\r\n\r\n        if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\r\n\r\n        if (wasLocked && wasLocked !== swiper.isLocked) {\r\n            swiper.isEnd = false;\r\n            if (swiper.navigation) swiper.navigation.update();\r\n        }\r\n    }\r\n\r\n    var checkOverflow$1 = {\r\n        checkOverflow: checkOverflow\r\n    };\r\n\r\n    var defaults = {\r\n        init: true,\r\n        direction: 'horizontal',\r\n        touchEventsTarget: 'container',\r\n        initialSlide: 0,\r\n        speed: 300,\r\n        cssMode: false,\r\n        updateOnWindowResize: true,\r\n        nested: false,\r\n        // Overrides\r\n        width: null,\r\n        height: null,\r\n        //\r\n        preventInteractionOnTransition: false,\r\n        // ssr\r\n        userAgent: null,\r\n        url: null,\r\n        // To support iOS's swipe-to-go-back gesture (when being used in-app).\r\n        edgeSwipeDetection: false,\r\n        edgeSwipeThreshold: 20,\r\n        // Free mode\r\n        freeMode: false,\r\n        freeModeMomentum: true,\r\n        freeModeMomentumRatio: 1,\r\n        freeModeMomentumBounce: true,\r\n        freeModeMomentumBounceRatio: 1,\r\n        freeModeMomentumVelocityRatio: 1,\r\n        freeModeSticky: false,\r\n        freeModeMinimumVelocity: 0.02,\r\n        // Autoheight\r\n        autoHeight: false,\r\n        // Set wrapper width\r\n        setWrapperSize: false,\r\n        // Virtual Translate\r\n        virtualTranslate: false,\r\n        // Effects\r\n        effect: 'slide',\r\n        // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\r\n        // Breakpoints\r\n        breakpoints: undefined,\r\n        // Slides grid\r\n        spaceBetween: 0,\r\n        slidesPerView: 1,\r\n        slidesPerColumn: 1,\r\n        slidesPerColumnFill: 'column',\r\n        slidesPerGroup: 1,\r\n        slidesPerGroupSkip: 0,\r\n        centeredSlides: false,\r\n        centeredSlidesBounds: false,\r\n        slidesOffsetBefore: 0,\r\n        // in px\r\n        slidesOffsetAfter: 0,\r\n        // in px\r\n        normalizeSlideIndex: true,\r\n        centerInsufficientSlides: false,\r\n        // Disable swiper and hide navigation when container not overflow\r\n        watchOverflow: false,\r\n        // Round length\r\n        roundLengths: false,\r\n        // Touches\r\n        touchRatio: 1,\r\n        touchAngle: 45,\r\n        simulateTouch: true,\r\n        shortSwipes: true,\r\n        longSwipes: true,\r\n        longSwipesRatio: 0.5,\r\n        longSwipesMs: 300,\r\n        followFinger: true,\r\n        allowTouchMove: true,\r\n        threshold: 0,\r\n        touchMoveStopPropagation: false,\r\n        touchStartPreventDefault: true,\r\n        touchStartForcePreventDefault: false,\r\n        touchReleaseOnEdges: false,\r\n        // Unique Navigation Elements\r\n        uniqueNavElements: true,\r\n        // Resistance\r\n        resistance: true,\r\n        resistanceRatio: 0.85,\r\n        // Progress\r\n        watchSlidesProgress: false,\r\n        watchSlidesVisibility: false,\r\n        // Cursor\r\n        grabCursor: false,\r\n        // Clicks\r\n        preventClicks: true,\r\n        preventClicksPropagation: true,\r\n        slideToClickedSlide: false,\r\n        // Images\r\n        preloadImages: true,\r\n        updateOnImagesReady: true,\r\n        // loop\r\n        loop: false,\r\n        loopAdditionalSlides: 0,\r\n        loopedSlides: null,\r\n        loopFillGroupWithBlank: false,\r\n        loopPreventsSlide: true,\r\n        // Swiping/no swiping\r\n        allowSlidePrev: true,\r\n        allowSlideNext: true,\r\n        swipeHandler: null,\r\n        // '.swipe-handler',\r\n        noSwiping: true,\r\n        noSwipingClass: 'swiper-no-swiping',\r\n        noSwipingSelector: null,\r\n        // Passive Listeners\r\n        passiveListeners: true,\r\n        // NS\r\n        containerModifierClass: 'swiper-container-',\r\n        // NEW\r\n        slideClass: 'swiper-slide',\r\n        slideBlankClass: 'swiper-slide-invisible-blank',\r\n        slideActiveClass: 'swiper-slide-active',\r\n        slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\r\n        slideVisibleClass: 'swiper-slide-visible',\r\n        slideDuplicateClass: 'swiper-slide-duplicate',\r\n        slideNextClass: 'swiper-slide-next',\r\n        slideDuplicateNextClass: 'swiper-slide-duplicate-next',\r\n        slidePrevClass: 'swiper-slide-prev',\r\n        slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\r\n        wrapperClass: 'swiper-wrapper',\r\n        // Callbacks\r\n        runCallbacksOnInit: true,\r\n        // Internals\r\n        _emitClasses: false\r\n    };\r\n\r\n    var prototypes = {\r\n        modular: modular,\r\n        eventsEmitter: eventsEmitter,\r\n        update: update,\r\n        translate: translate,\r\n        transition: transition$1,\r\n        slide: slide,\r\n        loop: loop,\r\n        grabCursor: grabCursor,\r\n        manipulation: manipulation,\r\n        events: events,\r\n        breakpoints: breakpoints,\r\n        checkOverflow: checkOverflow$1,\r\n        classes: classes,\r\n        images: images\r\n    };\r\n    var extendedDefaults = {};\r\n\r\n    var Swiper = /*#__PURE__*/function () {\r\n        function Swiper() {\r\n            var el;\r\n            var params;\r\n\r\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n                args[_key] = arguments[_key];\r\n            }\r\n\r\n            if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\r\n                params = args[0];\r\n            } else {\r\n                el = args[0];\r\n                params = args[1];\r\n            }\r\n\r\n            if (!params) params = {};\r\n            params = extend$1({}, params);\r\n            if (el && !params.el) params.el = el; // Swiper Instance\r\n\r\n            var swiper = this;\r\n            swiper.support = getSupport();\r\n            swiper.device = getDevice({\r\n                userAgent: params.userAgent\r\n            });\r\n            swiper.browser = getBrowser();\r\n            swiper.eventsListeners = {};\r\n            swiper.eventsAnyListeners = [];\r\n\r\n            if (typeof swiper.modules === 'undefined') {\r\n                swiper.modules = {};\r\n            }\r\n\r\n            Object.keys(swiper.modules).forEach(function (moduleName) {\r\n                var module = swiper.modules[moduleName];\r\n\r\n                if (module.params) {\r\n                    var moduleParamName = Object.keys(module.params)[0];\r\n                    var moduleParams = module.params[moduleParamName];\r\n                    if (typeof moduleParams !== 'object' || moduleParams === null) return;\r\n                    if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\r\n\r\n                    if (params[moduleParamName] === true) {\r\n                        params[moduleParamName] = {\r\n                            enabled: true\r\n                        };\r\n                    }\r\n\r\n                    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\r\n                        params[moduleParamName].enabled = true;\r\n                    }\r\n\r\n                    if (!params[moduleParamName]) params[moduleParamName] = {\r\n                        enabled: false\r\n                    };\r\n                }\r\n            }); // Extend defaults with modules params\r\n\r\n            var swiperParams = extend$1({}, defaults);\r\n            swiper.useParams(swiperParams); // Extend defaults with passed params\r\n\r\n            swiper.params = extend$1({}, swiperParams, extendedDefaults, params);\r\n            swiper.originalParams = extend$1({}, swiper.params);\r\n            swiper.passedParams = extend$1({}, params); // add event listeners\r\n\r\n            if (swiper.params && swiper.params.on) {\r\n                Object.keys(swiper.params.on).forEach(function (eventName) {\r\n                    swiper.on(eventName, swiper.params.on[eventName]);\r\n                });\r\n            }\r\n\r\n            if (swiper.params && swiper.params.onAny) {\r\n                swiper.onAny(swiper.params.onAny);\r\n            } // Save Dom lib\r\n\r\n\r\n            swiper.$ = $; // Find el\r\n\r\n            var $el = $(swiper.params.el);\r\n            el = $el[0];\r\n\r\n            if (!el) {\r\n                return undefined;\r\n            }\r\n\r\n            if ($el.length > 1) {\r\n                var swipers = [];\r\n                $el.each(function (containerEl) {\r\n                    var newParams = extend$1({}, params, {\r\n                        el: containerEl\r\n                    });\r\n                    swipers.push(new Swiper(newParams));\r\n                });\r\n                return swipers;\r\n            }\r\n\r\n            el.swiper = swiper; // Find Wrapper\r\n\r\n            var $wrapperEl;\r\n\r\n            if (el && el.shadowRoot && el.shadowRoot.querySelector) {\r\n                $wrapperEl = $(el.shadowRoot.querySelector(\".\" + swiper.params.wrapperClass)); // Children needs to return slot items\r\n\r\n                $wrapperEl.children = function (options) {\r\n                    return $el.children(options);\r\n                };\r\n            } else {\r\n                $wrapperEl = $el.children(\".\" + swiper.params.wrapperClass);\r\n            } // Extend Swiper\r\n\r\n\r\n            extend$1(swiper, {\r\n                $el: $el,\r\n                el: el,\r\n                $wrapperEl: $wrapperEl,\r\n                wrapperEl: $wrapperEl[0],\r\n                // Classes\r\n                classNames: [],\r\n                // Slides\r\n                slides: $(),\r\n                slidesGrid: [],\r\n                snapGrid: [],\r\n                slidesSizesGrid: [],\r\n                // isDirection\r\n                isHorizontal: function isHorizontal() {\r\n                    return swiper.params.direction === 'horizontal';\r\n                },\r\n                isVertical: function isVertical() {\r\n                    return swiper.params.direction === 'vertical';\r\n                },\r\n                // RTL\r\n                rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\r\n                rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\r\n                wrongRTL: $wrapperEl.css('display') === '-webkit-box',\r\n                // Indexes\r\n                activeIndex: 0,\r\n                realIndex: 0,\r\n                //\r\n                isBeginning: true,\r\n                isEnd: false,\r\n                // Props\r\n                translate: 0,\r\n                previousTranslate: 0,\r\n                progress: 0,\r\n                velocity: 0,\r\n                animating: false,\r\n                // Locks\r\n                allowSlideNext: swiper.params.allowSlideNext,\r\n                allowSlidePrev: swiper.params.allowSlidePrev,\r\n                // Touch Events\r\n                touchEvents: function touchEvents() {\r\n                    var touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\r\n                    var desktop = ['mousedown', 'mousemove', 'mouseup'];\r\n\r\n                    if (swiper.support.pointerEvents) {\r\n                        desktop = ['pointerdown', 'pointermove', 'pointerup'];\r\n                    }\r\n\r\n                    swiper.touchEventsTouch = {\r\n                        start: touch[0],\r\n                        move: touch[1],\r\n                        end: touch[2],\r\n                        cancel: touch[3]\r\n                    };\r\n                    swiper.touchEventsDesktop = {\r\n                        start: desktop[0],\r\n                        move: desktop[1],\r\n                        end: desktop[2]\r\n                    };\r\n                    return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\r\n                }(),\r\n                touchEventsData: {\r\n                    isTouched: undefined,\r\n                    isMoved: undefined,\r\n                    allowTouchCallbacks: undefined,\r\n                    touchStartTime: undefined,\r\n                    isScrolling: undefined,\r\n                    currentTranslate: undefined,\r\n                    startTranslate: undefined,\r\n                    allowThresholdMove: undefined,\r\n                    // Form elements to match\r\n                    formElements: 'input, select, option, textarea, button, video, label',\r\n                    // Last click time\r\n                    lastClickTime: now(),\r\n                    clickTimeout: undefined,\r\n                    // Velocities\r\n                    velocities: [],\r\n                    allowMomentumBounce: undefined,\r\n                    isTouchEvent: undefined,\r\n                    startMoving: undefined\r\n                },\r\n                // Clicks\r\n                allowClick: true,\r\n                // Touches\r\n                allowTouchMove: swiper.params.allowTouchMove,\r\n                touches: {\r\n                    startX: 0,\r\n                    startY: 0,\r\n                    currentX: 0,\r\n                    currentY: 0,\r\n                    diff: 0\r\n                },\r\n                // Images\r\n                imagesToLoad: [],\r\n                imagesLoaded: 0\r\n            }); // Install Modules\r\n\r\n            swiper.useModules();\r\n            swiper.emit('_swiper'); // Init\r\n\r\n            if (swiper.params.init) {\r\n                swiper.init();\r\n            } // Return app instance\r\n\r\n\r\n            return swiper;\r\n        }\r\n\r\n        var _proto = Swiper.prototype;\r\n\r\n        _proto.emitContainerClasses = function emitContainerClasses() {\r\n            var swiper = this;\r\n            if (!swiper.params._emitClasses || !swiper.el) return;\r\n            var classes = swiper.el.className.split(' ').filter(function (className) {\r\n                return className.indexOf('swiper-container') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\r\n            });\r\n            swiper.emit('_containerClasses', classes.join(' '));\r\n        };\r\n\r\n        _proto.getSlideClasses = function getSlideClasses(slideEl) {\r\n            var swiper = this;\r\n            return slideEl.className.split(' ').filter(function (className) {\r\n                return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\r\n            }).join(' ');\r\n        };\r\n\r\n        _proto.emitSlidesClasses = function emitSlidesClasses() {\r\n            var swiper = this;\r\n            if (!swiper.params._emitClasses || !swiper.el) return;\r\n            swiper.slides.each(function (slideEl) {\r\n                var classNames = swiper.getSlideClasses(slideEl);\r\n                swiper.emit('_slideClass', slideEl, classNames);\r\n            });\r\n        };\r\n\r\n        _proto.slidesPerViewDynamic = function slidesPerViewDynamic() {\r\n            var swiper = this;\r\n            var params = swiper.params,\r\n                slides = swiper.slides,\r\n                slidesGrid = swiper.slidesGrid,\r\n                swiperSize = swiper.size,\r\n                activeIndex = swiper.activeIndex;\r\n            var spv = 1;\r\n\r\n            if (params.centeredSlides) {\r\n                var slideSize = slides[activeIndex].swiperSlideSize;\r\n                var breakLoop;\r\n\r\n                for (var i = activeIndex + 1; i < slides.length; i += 1) {\r\n                    if (slides[i] && !breakLoop) {\r\n                        slideSize += slides[i].swiperSlideSize;\r\n                        spv += 1;\r\n                        if (slideSize > swiperSize) breakLoop = true;\r\n                    }\r\n                }\r\n\r\n                for (var _i = activeIndex - 1; _i >= 0; _i -= 1) {\r\n                    if (slides[_i] && !breakLoop) {\r\n                        slideSize += slides[_i].swiperSlideSize;\r\n                        spv += 1;\r\n                        if (slideSize > swiperSize) breakLoop = true;\r\n                    }\r\n                }\r\n            } else {\r\n                for (var _i2 = activeIndex + 1; _i2 < slides.length; _i2 += 1) {\r\n                    if (slidesGrid[_i2] - slidesGrid[activeIndex] < swiperSize) {\r\n                        spv += 1;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return spv;\r\n        };\r\n\r\n        _proto.update = function update() {\r\n            var swiper = this;\r\n            if (!swiper || swiper.destroyed) return;\r\n            var snapGrid = swiper.snapGrid,\r\n                params = swiper.params; // Breakpoints\r\n\r\n            if (params.breakpoints) {\r\n                swiper.setBreakpoint();\r\n            }\r\n\r\n            swiper.updateSize();\r\n            swiper.updateSlides();\r\n            swiper.updateProgress();\r\n            swiper.updateSlidesClasses();\r\n\r\n            function setTranslate() {\r\n                var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\r\n                var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\r\n                swiper.setTranslate(newTranslate);\r\n                swiper.updateActiveIndex();\r\n                swiper.updateSlidesClasses();\r\n            }\r\n\r\n            var translated;\r\n\r\n            if (swiper.params.freeMode) {\r\n                setTranslate();\r\n\r\n                if (swiper.params.autoHeight) {\r\n                    swiper.updateAutoHeight();\r\n                }\r\n            } else {\r\n                if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\r\n                    translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\r\n                } else {\r\n                    translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\r\n                }\r\n\r\n                if (!translated) {\r\n                    setTranslate();\r\n                }\r\n            }\r\n\r\n            if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\r\n                swiper.checkOverflow();\r\n            }\r\n\r\n            swiper.emit('update');\r\n        };\r\n\r\n        _proto.changeDirection = function changeDirection(newDirection, needUpdate) {\r\n            if (needUpdate === void 0) {\r\n                needUpdate = true;\r\n            }\r\n\r\n            var swiper = this;\r\n            var currentDirection = swiper.params.direction;\r\n\r\n            if (!newDirection) {\r\n                // eslint-disable-next-line\r\n                newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\r\n            }\r\n\r\n            if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\r\n                return swiper;\r\n            }\r\n\r\n            swiper.$el.removeClass(\"\" + swiper.params.containerModifierClass + currentDirection).addClass(\"\" + swiper.params.containerModifierClass + newDirection);\r\n            swiper.emitContainerClasses();\r\n            swiper.params.direction = newDirection;\r\n            swiper.slides.each(function (slideEl) {\r\n                if (newDirection === 'vertical') {\r\n                    slideEl.style.width = '';\r\n                } else {\r\n                    slideEl.style.height = '';\r\n                }\r\n            });\r\n            swiper.emit('changeDirection');\r\n            if (needUpdate) swiper.update();\r\n            return swiper;\r\n        };\r\n\r\n        _proto.init = function init() {\r\n            var swiper = this;\r\n            if (swiper.initialized) return;\r\n            swiper.emit('beforeInit'); // Set breakpoint\r\n\r\n            if (swiper.params.breakpoints) {\r\n                swiper.setBreakpoint();\r\n            } // Add Classes\r\n\r\n\r\n            swiper.addClasses(); // Create loop\r\n\r\n            if (swiper.params.loop) {\r\n                swiper.loopCreate();\r\n            } // Update size\r\n\r\n\r\n            swiper.updateSize(); // Update slides\r\n\r\n            swiper.updateSlides();\r\n\r\n            if (swiper.params.watchOverflow) {\r\n                swiper.checkOverflow();\r\n            } // Set Grab Cursor\r\n\r\n\r\n            if (swiper.params.grabCursor) {\r\n                swiper.setGrabCursor();\r\n            }\r\n\r\n            if (swiper.params.preloadImages) {\r\n                swiper.preloadImages();\r\n            } // Slide To Initial Slide\r\n\r\n\r\n            if (swiper.params.loop) {\r\n                swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\r\n            } else {\r\n                swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\r\n            } // Attach events\r\n\r\n\r\n            swiper.attachEvents(); // Init Flag\r\n\r\n            swiper.initialized = true; // Emit\r\n\r\n            swiper.emit('init');\r\n            swiper.emit('afterInit');\r\n        };\r\n\r\n        _proto.destroy = function destroy(deleteInstance, cleanStyles) {\r\n            if (deleteInstance === void 0) {\r\n                deleteInstance = true;\r\n            }\r\n\r\n            if (cleanStyles === void 0) {\r\n                cleanStyles = true;\r\n            }\r\n\r\n            var swiper = this;\r\n            var params = swiper.params,\r\n                $el = swiper.$el,\r\n                $wrapperEl = swiper.$wrapperEl,\r\n                slides = swiper.slides;\r\n\r\n            if (typeof swiper.params === 'undefined' || swiper.destroyed) {\r\n                return null;\r\n            }\r\n\r\n            swiper.emit('beforeDestroy'); // Init Flag\r\n\r\n            swiper.initialized = false; // Detach events\r\n\r\n            swiper.detachEvents(); // Destroy loop\r\n\r\n            if (params.loop) {\r\n                swiper.loopDestroy();\r\n            } // Cleanup styles\r\n\r\n\r\n            if (cleanStyles) {\r\n                swiper.removeClasses();\r\n                $el.removeAttr('style');\r\n                $wrapperEl.removeAttr('style');\r\n\r\n                if (slides && slides.length) {\r\n                    slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');\r\n                }\r\n            }\r\n\r\n            swiper.emit('destroy'); // Detach emitter events\r\n\r\n            Object.keys(swiper.eventsListeners).forEach(function (eventName) {\r\n                swiper.off(eventName);\r\n            });\r\n\r\n            if (deleteInstance !== false) {\r\n                swiper.$el[0].swiper = null;\r\n                deleteProps(swiper);\r\n            }\r\n\r\n            swiper.destroyed = true;\r\n            return null;\r\n        };\r\n\r\n        Swiper.extendDefaults = function extendDefaults(newDefaults) {\r\n            extend$1(extendedDefaults, newDefaults);\r\n        };\r\n\r\n        Swiper.installModule = function installModule(module) {\r\n            if (!Swiper.prototype.modules) Swiper.prototype.modules = {};\r\n            var name = module.name || Object.keys(Swiper.prototype.modules).length + \"_\" + now();\r\n            Swiper.prototype.modules[name] = module;\r\n        };\r\n\r\n        Swiper.use = function use(module) {\r\n            if (Array.isArray(module)) {\r\n                module.forEach(function (m) {\r\n                    return Swiper.installModule(m);\r\n                });\r\n                return Swiper;\r\n            }\r\n\r\n            Swiper.installModule(module);\r\n            return Swiper;\r\n        };\r\n\r\n        _createClass(Swiper, null, [{\r\n            key: \"extendedDefaults\",\r\n            get: function get() {\r\n                return extendedDefaults;\r\n            }\r\n        }, {\r\n            key: \"defaults\",\r\n            get: function get() {\r\n                return defaults;\r\n            }\r\n        }]);\r\n\r\n        return Swiper;\r\n    }();\r\n\r\n    Object.keys(prototypes).forEach(function (prototypeGroup) {\r\n        Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\r\n            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\r\n        });\r\n    });\r\n    Swiper.use([Resize, Observer$1]);\r\n\r\n    var Virtual = {\r\n        update: function update(force) {\r\n            var swiper = this;\r\n            var _swiper$params = swiper.params,\r\n                slidesPerView = _swiper$params.slidesPerView,\r\n                slidesPerGroup = _swiper$params.slidesPerGroup,\r\n                centeredSlides = _swiper$params.centeredSlides;\r\n            var _swiper$params$virtua = swiper.params.virtual,\r\n                addSlidesBefore = _swiper$params$virtua.addSlidesBefore,\r\n                addSlidesAfter = _swiper$params$virtua.addSlidesAfter;\r\n            var _swiper$virtual = swiper.virtual,\r\n                previousFrom = _swiper$virtual.from,\r\n                previousTo = _swiper$virtual.to,\r\n                slides = _swiper$virtual.slides,\r\n                previousSlidesGrid = _swiper$virtual.slidesGrid,\r\n                renderSlide = _swiper$virtual.renderSlide,\r\n                previousOffset = _swiper$virtual.offset;\r\n            swiper.updateActiveIndex();\r\n            var activeIndex = swiper.activeIndex || 0;\r\n            var offsetProp;\r\n            if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\r\n            var slidesAfter;\r\n            var slidesBefore;\r\n\r\n            if (centeredSlides) {\r\n                slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\r\n                slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\r\n            } else {\r\n                slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\r\n                slidesBefore = slidesPerGroup + addSlidesBefore;\r\n            }\r\n\r\n            var from = Math.max((activeIndex || 0) - slidesBefore, 0);\r\n            var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\r\n            var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\r\n            extend$1(swiper.virtual, {\r\n                from: from,\r\n                to: to,\r\n                offset: offset,\r\n                slidesGrid: swiper.slidesGrid\r\n            });\r\n\r\n            function onRendered() {\r\n                swiper.updateSlides();\r\n                swiper.updateProgress();\r\n                swiper.updateSlidesClasses();\r\n\r\n                if (swiper.lazy && swiper.params.lazy.enabled) {\r\n                    swiper.lazy.load();\r\n                }\r\n            }\r\n\r\n            if (previousFrom === from && previousTo === to && !force) {\r\n                if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\r\n                    swiper.slides.css(offsetProp, offset + \"px\");\r\n                }\r\n\r\n                swiper.updateProgress();\r\n                return;\r\n            }\r\n\r\n            if (swiper.params.virtual.renderExternal) {\r\n                swiper.params.virtual.renderExternal.call(swiper, {\r\n                    offset: offset,\r\n                    from: from,\r\n                    to: to,\r\n                    slides: function getSlides() {\r\n                        var slidesToRender = [];\r\n\r\n                        for (var i = from; i <= to; i += 1) {\r\n                            slidesToRender.push(slides[i]);\r\n                        }\r\n\r\n                        return slidesToRender;\r\n                    }()\r\n                });\r\n\r\n                if (swiper.params.virtual.renderExternalUpdate) {\r\n                    onRendered();\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            var prependIndexes = [];\r\n            var appendIndexes = [];\r\n\r\n            if (force) {\r\n                swiper.$wrapperEl.find(\".\" + swiper.params.slideClass).remove();\r\n            } else {\r\n                for (var i = previousFrom; i <= previousTo; i += 1) {\r\n                    if (i < from || i > to) {\r\n                        swiper.$wrapperEl.find(\".\" + swiper.params.slideClass + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\").remove();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (var _i = 0; _i < slides.length; _i += 1) {\r\n                if (_i >= from && _i <= to) {\r\n                    if (typeof previousTo === 'undefined' || force) {\r\n                        appendIndexes.push(_i);\r\n                    } else {\r\n                        if (_i > previousTo) appendIndexes.push(_i);\r\n                        if (_i < previousFrom) prependIndexes.push(_i);\r\n                    }\r\n                }\r\n            }\r\n\r\n            appendIndexes.forEach(function (index) {\r\n                swiper.$wrapperEl.append(renderSlide(slides[index], index));\r\n            });\r\n            prependIndexes.sort(function (a, b) {\r\n                return b - a;\r\n            }).forEach(function (index) {\r\n                swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\r\n            });\r\n            swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, offset + \"px\");\r\n            onRendered();\r\n        },\r\n        renderSlide: function renderSlide(slide, index) {\r\n            var swiper = this;\r\n            var params = swiper.params.virtual;\r\n\r\n            if (params.cache && swiper.virtual.cache[index]) {\r\n                return swiper.virtual.cache[index];\r\n            }\r\n\r\n            var $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $(\"<div class=\\\"\" + swiper.params.slideClass + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\");\r\n            if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\r\n            if (params.cache) swiper.virtual.cache[index] = $slideEl;\r\n            return $slideEl;\r\n        },\r\n        appendSlide: function appendSlide(slides) {\r\n            var swiper = this;\r\n\r\n            if (typeof slides === 'object' && 'length' in slides) {\r\n                for (var i = 0; i < slides.length; i += 1) {\r\n                    if (slides[i]) swiper.virtual.slides.push(slides[i]);\r\n                }\r\n            } else {\r\n                swiper.virtual.slides.push(slides);\r\n            }\r\n\r\n            swiper.virtual.update(true);\r\n        },\r\n        prependSlide: function prependSlide(slides) {\r\n            var swiper = this;\r\n            var activeIndex = swiper.activeIndex;\r\n            var newActiveIndex = activeIndex + 1;\r\n            var numberOfNewSlides = 1;\r\n\r\n            if (Array.isArray(slides)) {\r\n                for (var i = 0; i < slides.length; i += 1) {\r\n                    if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\r\n                }\r\n\r\n                newActiveIndex = activeIndex + slides.length;\r\n                numberOfNewSlides = slides.length;\r\n            } else {\r\n                swiper.virtual.slides.unshift(slides);\r\n            }\r\n\r\n            if (swiper.params.virtual.cache) {\r\n                var cache = swiper.virtual.cache;\r\n                var newCache = {};\r\n                Object.keys(cache).forEach(function (cachedIndex) {\r\n                    var $cachedEl = cache[cachedIndex];\r\n                    var cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\r\n\r\n                    if (cachedElIndex) {\r\n                        $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + 1);\r\n                    }\r\n\r\n                    newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\r\n                });\r\n                swiper.virtual.cache = newCache;\r\n            }\r\n\r\n            swiper.virtual.update(true);\r\n            swiper.slideTo(newActiveIndex, 0);\r\n        },\r\n        removeSlide: function removeSlide(slidesIndexes) {\r\n            var swiper = this;\r\n            if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\r\n            var activeIndex = swiper.activeIndex;\r\n\r\n            if (Array.isArray(slidesIndexes)) {\r\n                for (var i = slidesIndexes.length - 1; i >= 0; i -= 1) {\r\n                    swiper.virtual.slides.splice(slidesIndexes[i], 1);\r\n\r\n                    if (swiper.params.virtual.cache) {\r\n                        delete swiper.virtual.cache[slidesIndexes[i]];\r\n                    }\r\n\r\n                    if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\r\n                    activeIndex = Math.max(activeIndex, 0);\r\n                }\r\n            } else {\r\n                swiper.virtual.slides.splice(slidesIndexes, 1);\r\n\r\n                if (swiper.params.virtual.cache) {\r\n                    delete swiper.virtual.cache[slidesIndexes];\r\n                }\r\n\r\n                if (slidesIndexes < activeIndex) activeIndex -= 1;\r\n                activeIndex = Math.max(activeIndex, 0);\r\n            }\r\n\r\n            swiper.virtual.update(true);\r\n            swiper.slideTo(activeIndex, 0);\r\n        },\r\n        removeAllSlides: function removeAllSlides() {\r\n            var swiper = this;\r\n            swiper.virtual.slides = [];\r\n\r\n            if (swiper.params.virtual.cache) {\r\n                swiper.virtual.cache = {};\r\n            }\r\n\r\n            swiper.virtual.update(true);\r\n            swiper.slideTo(0, 0);\r\n        }\r\n    };\r\n    var Virtual$1 = {\r\n        name: 'virtual',\r\n        params: {\r\n            virtual: {\r\n                enabled: false,\r\n                slides: [],\r\n                cache: true,\r\n                renderSlide: null,\r\n                renderExternal: null,\r\n                renderExternalUpdate: true,\r\n                addSlidesBefore: 0,\r\n                addSlidesAfter: 0\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                virtual: _extends(_extends({}, Virtual), {}, {\r\n                    slides: swiper.params.virtual.slides,\r\n                    cache: {}\r\n                })\r\n            });\r\n        },\r\n        on: {\r\n            beforeInit: function beforeInit(swiper) {\r\n                if (!swiper.params.virtual.enabled) return;\r\n                swiper.classNames.push(swiper.params.containerModifierClass + \"virtual\");\r\n                var overwriteParams = {\r\n                    watchSlidesProgress: true\r\n                };\r\n                extend$1(swiper.params, overwriteParams);\r\n                extend$1(swiper.originalParams, overwriteParams);\r\n\r\n                if (!swiper.params.initialSlide) {\r\n                    swiper.virtual.update();\r\n                }\r\n            },\r\n            setTranslate: function setTranslate(swiper) {\r\n                if (!swiper.params.virtual.enabled) return;\r\n                swiper.virtual.update();\r\n            }\r\n        }\r\n    };\r\n\r\n    var Keyboard = {\r\n        handle: function handle(event) {\r\n            var swiper = this;\r\n            var window = getWindow();\r\n            var document = getDocument();\r\n            var rtl = swiper.rtlTranslate;\r\n            var e = event;\r\n            if (e.originalEvent) e = e.originalEvent; // jquery fix\r\n\r\n            var kc = e.keyCode || e.charCode;\r\n            var pageUpDown = swiper.params.keyboard.pageUpDown;\r\n            var isPageUp = pageUpDown && kc === 33;\r\n            var isPageDown = pageUpDown && kc === 34;\r\n            var isArrowLeft = kc === 37;\r\n            var isArrowRight = kc === 39;\r\n            var isArrowUp = kc === 38;\r\n            var isArrowDown = kc === 40; // Directions locks\r\n\r\n            if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\r\n                return false;\r\n            }\r\n\r\n            if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\r\n                return false;\r\n            }\r\n\r\n            if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\r\n                return undefined;\r\n            }\r\n\r\n            if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\r\n                return undefined;\r\n            }\r\n\r\n            if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\r\n                var inView = false; // Check that swiper should be inside of visible area of window\r\n\r\n                if (swiper.$el.parents(\".\" + swiper.params.slideClass).length > 0 && swiper.$el.parents(\".\" + swiper.params.slideActiveClass).length === 0) {\r\n                    return undefined;\r\n                }\r\n\r\n                var windowWidth = window.innerWidth;\r\n                var windowHeight = window.innerHeight;\r\n                var swiperOffset = swiper.$el.offset();\r\n                if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\r\n                var swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];\r\n\r\n                for (var i = 0; i < swiperCoord.length; i += 1) {\r\n                    var point = swiperCoord[i];\r\n\r\n                    if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\r\n                        inView = true;\r\n                    }\r\n                }\r\n\r\n                if (!inView) return undefined;\r\n            }\r\n\r\n            if (swiper.isHorizontal()) {\r\n                if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\r\n                    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\r\n                }\r\n\r\n                if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\r\n                if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\r\n            } else {\r\n                if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\r\n                    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\r\n                }\r\n\r\n                if (isPageDown || isArrowDown) swiper.slideNext();\r\n                if (isPageUp || isArrowUp) swiper.slidePrev();\r\n            }\r\n\r\n            swiper.emit('keyPress', kc);\r\n            return undefined;\r\n        },\r\n        enable: function enable() {\r\n            var swiper = this;\r\n            var document = getDocument();\r\n            if (swiper.keyboard.enabled) return;\r\n            $(document).on('keydown', swiper.keyboard.handle);\r\n            swiper.keyboard.enabled = true;\r\n        },\r\n        disable: function disable() {\r\n            var swiper = this;\r\n            var document = getDocument();\r\n            if (!swiper.keyboard.enabled) return;\r\n            $(document).off('keydown', swiper.keyboard.handle);\r\n            swiper.keyboard.enabled = false;\r\n        }\r\n    };\r\n    var Keyboard$1 = {\r\n        name: 'keyboard',\r\n        params: {\r\n            keyboard: {\r\n                enabled: false,\r\n                onlyInViewport: true,\r\n                pageUpDown: true\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                keyboard: _extends({\r\n                    enabled: false\r\n                }, Keyboard)\r\n            });\r\n        },\r\n        on: {\r\n            init: function init(swiper) {\r\n                if (swiper.params.keyboard.enabled) {\r\n                    swiper.keyboard.enable();\r\n                }\r\n            },\r\n            destroy: function destroy(swiper) {\r\n                if (swiper.keyboard.enabled) {\r\n                    swiper.keyboard.disable();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    function isEventSupported() {\r\n        var document = getDocument();\r\n        var eventName = 'onwheel';\r\n        var isSupported = (eventName in document);\r\n\r\n        if (!isSupported) {\r\n            var element = document.createElement('div');\r\n            element.setAttribute(eventName, 'return;');\r\n            isSupported = typeof element[eventName] === 'function';\r\n        }\r\n\r\n        if (!isSupported && document.implementation && document.implementation.hasFeature && // always returns true in newer browsers as per the standard.\r\n            // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\r\n            document.implementation.hasFeature('', '') !== true) {\r\n            // This is the only way to test support for the `wheel` event in IE9+.\r\n            isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\r\n        }\r\n\r\n        return isSupported;\r\n    }\r\n\r\n    var Mousewheel = {\r\n        lastScrollTime: now(),\r\n        lastEventBeforeSnap: undefined,\r\n        recentWheelEvents: [],\r\n        event: function event() {\r\n            var window = getWindow();\r\n            if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\r\n            return isEventSupported() ? 'wheel' : 'mousewheel';\r\n        },\r\n        normalize: function normalize(e) {\r\n            // Reasonable defaults\r\n            var PIXEL_STEP = 10;\r\n            var LINE_HEIGHT = 40;\r\n            var PAGE_HEIGHT = 800;\r\n            var sX = 0;\r\n            var sY = 0; // spinX, spinY\r\n\r\n            var pX = 0;\r\n            var pY = 0; // pixelX, pixelY\r\n            // Legacy\r\n\r\n            if ('detail' in e) {\r\n                sY = e.detail;\r\n            }\r\n\r\n            if ('wheelDelta' in e) {\r\n                sY = -e.wheelDelta / 120;\r\n            }\r\n\r\n            if ('wheelDeltaY' in e) {\r\n                sY = -e.wheelDeltaY / 120;\r\n            }\r\n\r\n            if ('wheelDeltaX' in e) {\r\n                sX = -e.wheelDeltaX / 120;\r\n            } // side scrolling on FF with DOMMouseScroll\r\n\r\n\r\n            if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\r\n                sX = sY;\r\n                sY = 0;\r\n            }\r\n\r\n            pX = sX * PIXEL_STEP;\r\n            pY = sY * PIXEL_STEP;\r\n\r\n            if ('deltaY' in e) {\r\n                pY = e.deltaY;\r\n            }\r\n\r\n            if ('deltaX' in e) {\r\n                pX = e.deltaX;\r\n            }\r\n\r\n            if (e.shiftKey && !pX) {\r\n                // if user scrolls with shift he wants horizontal scroll\r\n                pX = pY;\r\n                pY = 0;\r\n            }\r\n\r\n            if ((pX || pY) && e.deltaMode) {\r\n                if (e.deltaMode === 1) {\r\n                    // delta in LINE units\r\n                    pX *= LINE_HEIGHT;\r\n                    pY *= LINE_HEIGHT;\r\n                } else {\r\n                    // delta in PAGE units\r\n                    pX *= PAGE_HEIGHT;\r\n                    pY *= PAGE_HEIGHT;\r\n                }\r\n            } // Fall-back if spin cannot be determined\r\n\r\n\r\n            if (pX && !sX) {\r\n                sX = pX < 1 ? -1 : 1;\r\n            }\r\n\r\n            if (pY && !sY) {\r\n                sY = pY < 1 ? -1 : 1;\r\n            }\r\n\r\n            return {\r\n                spinX: sX,\r\n                spinY: sY,\r\n                pixelX: pX,\r\n                pixelY: pY\r\n            };\r\n        },\r\n        handleMouseEnter: function handleMouseEnter() {\r\n            var swiper = this;\r\n            swiper.mouseEntered = true;\r\n        },\r\n        handleMouseLeave: function handleMouseLeave() {\r\n            var swiper = this;\r\n            swiper.mouseEntered = false;\r\n        },\r\n        handle: function handle(event) {\r\n            var e = event;\r\n            var swiper = this;\r\n            var params = swiper.params.mousewheel;\r\n\r\n            if (swiper.params.cssMode) {\r\n                e.preventDefault();\r\n            }\r\n\r\n            var target = swiper.$el;\r\n\r\n            if (swiper.params.mousewheel.eventsTarget !== 'container') {\r\n                target = $(swiper.params.mousewheel.eventsTarget);\r\n            }\r\n\r\n            if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\r\n            if (e.originalEvent) e = e.originalEvent; // jquery fix\r\n\r\n            var delta = 0;\r\n            var rtlFactor = swiper.rtlTranslate ? -1 : 1;\r\n            var data = Mousewheel.normalize(e);\r\n\r\n            if (params.forceToAxis) {\r\n                if (swiper.isHorizontal()) {\r\n                    if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\r\n                } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\r\n            } else {\r\n                delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\r\n            }\r\n\r\n            if (delta === 0) return true;\r\n            if (params.invert) delta = -delta;\r\n\r\n            if (!swiper.params.freeMode) {\r\n                // Register the new event in a variable which stores the relevant data\r\n                var newEvent = {\r\n                    time: now(),\r\n                    delta: Math.abs(delta),\r\n                    direction: Math.sign(delta),\r\n                    raw: event\r\n                }; // Keep the most recent events\r\n\r\n                var recentWheelEvents = swiper.mousewheel.recentWheelEvents;\r\n\r\n                if (recentWheelEvents.length >= 2) {\r\n                    recentWheelEvents.shift(); // only store the last N events\r\n                }\r\n\r\n                var prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\r\n                recentWheelEvents.push(newEvent); // If there is at least one previous recorded event:\r\n                //   If direction has changed or\r\n                //   if the scroll is quicker than the previous one:\r\n                //     Animate the slider.\r\n                // Else (this is the first time the wheel is moved):\r\n                //     Animate the slider.\r\n\r\n                if (prevEvent) {\r\n                    if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\r\n                        swiper.mousewheel.animateSlider(newEvent);\r\n                    }\r\n                } else {\r\n                    swiper.mousewheel.animateSlider(newEvent);\r\n                } // If it's time to release the scroll:\r\n                //   Return now so you don't hit the preventDefault.\r\n\r\n\r\n                if (swiper.mousewheel.releaseScroll(newEvent)) {\r\n                    return true;\r\n                }\r\n            } else {\r\n                // Freemode or scrollContainer:\r\n                // If we recently snapped after a momentum scroll, then ignore wheel events\r\n                // to give time for the deceleration to finish. Stop ignoring after 500 msecs\r\n                // or if it's a new scroll (larger delta or inverse sign as last event before\r\n                // an end-of-momentum snap).\r\n                var _newEvent = {\r\n                    time: now(),\r\n                    delta: Math.abs(delta),\r\n                    direction: Math.sign(delta)\r\n                };\r\n                var lastEventBeforeSnap = swiper.mousewheel.lastEventBeforeSnap;\r\n                var ignoreWheelEvents = lastEventBeforeSnap && _newEvent.time < lastEventBeforeSnap.time + 500 && _newEvent.delta <= lastEventBeforeSnap.delta && _newEvent.direction === lastEventBeforeSnap.direction;\r\n\r\n                if (!ignoreWheelEvents) {\r\n                    swiper.mousewheel.lastEventBeforeSnap = undefined;\r\n\r\n                    if (swiper.params.loop) {\r\n                        swiper.loopFix();\r\n                    }\r\n\r\n                    var position = swiper.getTranslate() + delta * params.sensitivity;\r\n                    var wasBeginning = swiper.isBeginning;\r\n                    var wasEnd = swiper.isEnd;\r\n                    if (position >= swiper.minTranslate()) position = swiper.minTranslate();\r\n                    if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\r\n                    swiper.setTransition(0);\r\n                    swiper.setTranslate(position);\r\n                    swiper.updateProgress();\r\n                    swiper.updateActiveIndex();\r\n                    swiper.updateSlidesClasses();\r\n\r\n                    if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\r\n                        swiper.updateSlidesClasses();\r\n                    }\r\n\r\n                    if (swiper.params.freeModeSticky) {\r\n                        // When wheel scrolling starts with sticky (aka snap) enabled, then detect\r\n                        // the end of a momentum scroll by storing recent (N=15?) wheel events.\r\n                        // 1. do all N events have decreasing or same (absolute value) delta?\r\n                        // 2. did all N events arrive in the last M (M=500?) msecs?\r\n                        // 3. does the earliest event have an (absolute value) delta that's\r\n                        //    at least P (P=1?) larger than the most recent event's delta?\r\n                        // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\r\n                        // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\r\n                        // Snap immediately and ignore remaining wheel events in this scroll.\r\n                        // See comment above for \"remaining wheel events in this scroll\" determination.\r\n                        // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\r\n                        clearTimeout(swiper.mousewheel.timeout);\r\n                        swiper.mousewheel.timeout = undefined;\r\n                        var _recentWheelEvents = swiper.mousewheel.recentWheelEvents;\r\n\r\n                        if (_recentWheelEvents.length >= 15) {\r\n                            _recentWheelEvents.shift(); // only store the last N events\r\n\r\n                        }\r\n\r\n                        var _prevEvent = _recentWheelEvents.length ? _recentWheelEvents[_recentWheelEvents.length - 1] : undefined;\r\n\r\n                        var firstEvent = _recentWheelEvents[0];\r\n\r\n                        _recentWheelEvents.push(_newEvent);\r\n\r\n                        if (_prevEvent && (_newEvent.delta > _prevEvent.delta || _newEvent.direction !== _prevEvent.direction)) {\r\n                            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\r\n                            _recentWheelEvents.splice(0);\r\n                        } else if (_recentWheelEvents.length >= 15 && _newEvent.time - firstEvent.time < 500 && firstEvent.delta - _newEvent.delta >= 1 && _newEvent.delta <= 6) {\r\n                            // We're at the end of the deceleration of a momentum scroll, so there's no need\r\n                            // to wait for more events. Snap ASAP on the next tick.\r\n                            // Also, because there's some remaining momentum we'll bias the snap in the\r\n                            // direction of the ongoing scroll because it's better UX for the scroll to snap\r\n                            // in the same direction as the scroll instead of reversing to snap.  Therefore,\r\n                            // if it's already scrolled more than 20% in the current direction, keep going.\r\n                            var snapToThreshold = delta > 0 ? 0.8 : 0.2;\r\n                            swiper.mousewheel.lastEventBeforeSnap = _newEvent;\r\n\r\n                            _recentWheelEvents.splice(0);\r\n\r\n                            swiper.mousewheel.timeout = nextTick(function () {\r\n                                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\r\n                            }, 0); // no delay; move on next tick\r\n                        }\r\n\r\n                        if (!swiper.mousewheel.timeout) {\r\n                            // if we get here, then we haven't detected the end of a momentum scroll, so\r\n                            // we'll consider a scroll \"complete\" when there haven't been any wheel events\r\n                            // for 500ms.\r\n                            swiper.mousewheel.timeout = nextTick(function () {\r\n                                var snapToThreshold = 0.5;\r\n                                swiper.mousewheel.lastEventBeforeSnap = _newEvent;\r\n\r\n                                _recentWheelEvents.splice(0);\r\n\r\n                                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\r\n                            }, 500);\r\n                        }\r\n                    } // Emit event\r\n\r\n\r\n                    if (!ignoreWheelEvents) swiper.emit('scroll', e); // Stop autoplay\r\n\r\n                    if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop(); // Return page scroll on edge positions\r\n\r\n                    if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\r\n                }\r\n            }\r\n\r\n            if (e.preventDefault) e.preventDefault();else e.returnValue = false;\r\n            return false;\r\n        },\r\n        animateSlider: function animateSlider(newEvent) {\r\n            var swiper = this;\r\n            var window = getWindow();\r\n\r\n            if (this.params.mousewheel.thresholdDelta && newEvent.delta < this.params.mousewheel.thresholdDelta) {\r\n                // Prevent if delta of wheel scroll delta is below configured threshold\r\n                return false;\r\n            }\r\n\r\n            if (this.params.mousewheel.thresholdTime && now() - swiper.mousewheel.lastScrollTime < this.params.mousewheel.thresholdTime) {\r\n                // Prevent if time between scrolls is below configured threshold\r\n                return false;\r\n            } // If the movement is NOT big enough and\r\n            // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\r\n            //   Don't go any further (avoid insignificant scroll movement).\r\n\r\n\r\n            if (newEvent.delta >= 6 && now() - swiper.mousewheel.lastScrollTime < 60) {\r\n                // Return false as a default\r\n                return true;\r\n            } // If user is scrolling towards the end:\r\n            //   If the slider hasn't hit the latest slide or\r\n            //   if the slider is a loop and\r\n            //   if the slider isn't moving right now:\r\n            //     Go to next slide and\r\n            //     emit a scroll event.\r\n            // Else (the user is scrolling towards the beginning) and\r\n            // if the slider hasn't hit the first slide or\r\n            // if the slider is a loop and\r\n            // if the slider isn't moving right now:\r\n            //   Go to prev slide and\r\n            //   emit a scroll event.\r\n\r\n\r\n            if (newEvent.direction < 0) {\r\n                if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\r\n                    swiper.slideNext();\r\n                    swiper.emit('scroll', newEvent.raw);\r\n                }\r\n            } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\r\n                swiper.slidePrev();\r\n                swiper.emit('scroll', newEvent.raw);\r\n            } // If you got here is because an animation has been triggered so store the current time\r\n\r\n\r\n            swiper.mousewheel.lastScrollTime = new window.Date().getTime(); // Return false as a default\r\n\r\n            return false;\r\n        },\r\n        releaseScroll: function releaseScroll(newEvent) {\r\n            var swiper = this;\r\n            var params = swiper.params.mousewheel;\r\n\r\n            if (newEvent.direction < 0) {\r\n                if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\r\n                    // Return true to animate scroll on edges\r\n                    return true;\r\n                }\r\n            } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\r\n                // Return true to animate scroll on edges\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n        enable: function enable() {\r\n            var swiper = this;\r\n            var event = Mousewheel.event();\r\n\r\n            if (swiper.params.cssMode) {\r\n                swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\r\n                return true;\r\n            }\r\n\r\n            if (!event) return false;\r\n            if (swiper.mousewheel.enabled) return false;\r\n            var target = swiper.$el;\r\n\r\n            if (swiper.params.mousewheel.eventsTarget !== 'container') {\r\n                target = $(swiper.params.mousewheel.eventsTarget);\r\n            }\r\n\r\n            target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\r\n            target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\r\n            target.on(event, swiper.mousewheel.handle);\r\n            swiper.mousewheel.enabled = true;\r\n            return true;\r\n        },\r\n        disable: function disable() {\r\n            var swiper = this;\r\n            var event = Mousewheel.event();\r\n\r\n            if (swiper.params.cssMode) {\r\n                swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\r\n                return true;\r\n            }\r\n\r\n            if (!event) return false;\r\n            if (!swiper.mousewheel.enabled) return false;\r\n            var target = swiper.$el;\r\n\r\n            if (swiper.params.mousewheel.eventsTarget !== 'container') {\r\n                target = $(swiper.params.mousewheel.eventsTarget);\r\n            }\r\n\r\n            target.off(event, swiper.mousewheel.handle);\r\n            swiper.mousewheel.enabled = false;\r\n            return true;\r\n        }\r\n    };\r\n    var Mousewheel$1 = {\r\n        name: 'mousewheel',\r\n        params: {\r\n            mousewheel: {\r\n                enabled: false,\r\n                releaseOnEdges: false,\r\n                invert: false,\r\n                forceToAxis: false,\r\n                sensitivity: 1,\r\n                eventsTarget: 'container',\r\n                thresholdDelta: null,\r\n                thresholdTime: null\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                mousewheel: {\r\n                    enabled: false,\r\n                    lastScrollTime: now(),\r\n                    lastEventBeforeSnap: undefined,\r\n                    recentWheelEvents: [],\r\n                    enable: Mousewheel.enable,\r\n                    disable: Mousewheel.disable,\r\n                    handle: Mousewheel.handle,\r\n                    handleMouseEnter: Mousewheel.handleMouseEnter,\r\n                    handleMouseLeave: Mousewheel.handleMouseLeave,\r\n                    animateSlider: Mousewheel.animateSlider,\r\n                    releaseScroll: Mousewheel.releaseScroll\r\n                }\r\n            });\r\n        },\r\n        on: {\r\n            init: function init(swiper) {\r\n                if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\r\n                    swiper.mousewheel.disable();\r\n                }\r\n\r\n                if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\r\n            },\r\n            destroy: function destroy(swiper) {\r\n                if (swiper.params.cssMode) {\r\n                    swiper.mousewheel.enable();\r\n                }\r\n\r\n                if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\r\n            }\r\n        }\r\n    };\r\n\r\n    var Navigation = {\r\n        update: function update() {\r\n            // Update Navigation Buttons\r\n            var swiper = this;\r\n            var params = swiper.params.navigation;\r\n            if (swiper.params.loop) return;\r\n            var _swiper$navigation = swiper.navigation,\r\n                $nextEl = _swiper$navigation.$nextEl,\r\n                $prevEl = _swiper$navigation.$prevEl;\r\n\r\n            if ($prevEl && $prevEl.length > 0) {\r\n                if (swiper.isBeginning) {\r\n                    $prevEl.addClass(params.disabledClass);\r\n                } else {\r\n                    $prevEl.removeClass(params.disabledClass);\r\n                }\r\n\r\n                $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\r\n            }\r\n\r\n            if ($nextEl && $nextEl.length > 0) {\r\n                if (swiper.isEnd) {\r\n                    $nextEl.addClass(params.disabledClass);\r\n                } else {\r\n                    $nextEl.removeClass(params.disabledClass);\r\n                }\r\n\r\n                $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\r\n            }\r\n        },\r\n        onPrevClick: function onPrevClick(e) {\r\n            var swiper = this;\r\n            e.preventDefault();\r\n            if (swiper.isBeginning && !swiper.params.loop) return;\r\n            swiper.slidePrev();\r\n        },\r\n        onNextClick: function onNextClick(e) {\r\n            var swiper = this;\r\n            e.preventDefault();\r\n            if (swiper.isEnd && !swiper.params.loop) return;\r\n            swiper.slideNext();\r\n        },\r\n        init: function init() {\r\n            var swiper = this;\r\n            var params = swiper.params.navigation;\r\n            if (!(params.nextEl || params.prevEl)) return;\r\n            var $nextEl;\r\n            var $prevEl;\r\n\r\n            if (params.nextEl) {\r\n                $nextEl = $(params.nextEl);\r\n\r\n                if (swiper.params.uniqueNavElements && typeof params.nextEl === 'string' && $nextEl.length > 1 && swiper.$el.find(params.nextEl).length === 1) {\r\n                    $nextEl = swiper.$el.find(params.nextEl);\r\n                }\r\n            }\r\n\r\n            if (params.prevEl) {\r\n                $prevEl = $(params.prevEl);\r\n\r\n                if (swiper.params.uniqueNavElements && typeof params.prevEl === 'string' && $prevEl.length > 1 && swiper.$el.find(params.prevEl).length === 1) {\r\n                    $prevEl = swiper.$el.find(params.prevEl);\r\n                }\r\n            }\r\n\r\n            if ($nextEl && $nextEl.length > 0) {\r\n                $nextEl.on('click', swiper.navigation.onNextClick);\r\n            }\r\n\r\n            if ($prevEl && $prevEl.length > 0) {\r\n                $prevEl.on('click', swiper.navigation.onPrevClick);\r\n            }\r\n\r\n            extend$1(swiper.navigation, {\r\n                $nextEl: $nextEl,\r\n                nextEl: $nextEl && $nextEl[0],\r\n                $prevEl: $prevEl,\r\n                prevEl: $prevEl && $prevEl[0]\r\n            });\r\n        },\r\n        destroy: function destroy() {\r\n            var swiper = this;\r\n            var _swiper$navigation2 = swiper.navigation,\r\n                $nextEl = _swiper$navigation2.$nextEl,\r\n                $prevEl = _swiper$navigation2.$prevEl;\r\n\r\n            if ($nextEl && $nextEl.length) {\r\n                $nextEl.off('click', swiper.navigation.onNextClick);\r\n                $nextEl.removeClass(swiper.params.navigation.disabledClass);\r\n            }\r\n\r\n            if ($prevEl && $prevEl.length) {\r\n                $prevEl.off('click', swiper.navigation.onPrevClick);\r\n                $prevEl.removeClass(swiper.params.navigation.disabledClass);\r\n            }\r\n        }\r\n    };\r\n    var Navigation$1 = {\r\n        name: 'navigation',\r\n        params: {\r\n            navigation: {\r\n                nextEl: null,\r\n                prevEl: null,\r\n                hideOnClick: false,\r\n                disabledClass: 'swiper-button-disabled',\r\n                hiddenClass: 'swiper-button-hidden',\r\n                lockClass: 'swiper-button-lock'\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                navigation: _extends({}, Navigation)\r\n            });\r\n        },\r\n        on: {\r\n            init: function init(swiper) {\r\n                swiper.navigation.init();\r\n                swiper.navigation.update();\r\n            },\r\n            toEdge: function toEdge(swiper) {\r\n                swiper.navigation.update();\r\n            },\r\n            fromEdge: function fromEdge(swiper) {\r\n                swiper.navigation.update();\r\n            },\r\n            destroy: function destroy(swiper) {\r\n                swiper.navigation.destroy();\r\n            },\r\n            click: function click(swiper, e) {\r\n                var _swiper$navigation3 = swiper.navigation,\r\n                    $nextEl = _swiper$navigation3.$nextEl,\r\n                    $prevEl = _swiper$navigation3.$prevEl;\r\n\r\n                if (swiper.params.navigation.hideOnClick && !$(e.target).is($prevEl) && !$(e.target).is($nextEl)) {\r\n                    var isHidden;\r\n\r\n                    if ($nextEl) {\r\n                        isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\r\n                    } else if ($prevEl) {\r\n                        isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\r\n                    }\r\n\r\n                    if (isHidden === true) {\r\n                        swiper.emit('navigationShow');\r\n                    } else {\r\n                        swiper.emit('navigationHide');\r\n                    }\r\n\r\n                    if ($nextEl) {\r\n                        $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\r\n                    }\r\n\r\n                    if ($prevEl) {\r\n                        $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var Pagination = {\r\n        update: function update() {\r\n            // Render || Update Pagination bullets/items\r\n            var swiper = this;\r\n            var rtl = swiper.rtl;\r\n            var params = swiper.params.pagination;\r\n            if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\r\n            var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\r\n            var $el = swiper.pagination.$el; // Current/Total\r\n\r\n            var current;\r\n            var total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\r\n\r\n            if (swiper.params.loop) {\r\n                current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\r\n\r\n                if (current > slidesLength - 1 - swiper.loopedSlides * 2) {\r\n                    current -= slidesLength - swiper.loopedSlides * 2;\r\n                }\r\n\r\n                if (current > total - 1) current -= total;\r\n                if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\r\n            } else if (typeof swiper.snapIndex !== 'undefined') {\r\n                current = swiper.snapIndex;\r\n            } else {\r\n                current = swiper.activeIndex || 0;\r\n            } // Types\r\n\r\n\r\n            if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\r\n                var bullets = swiper.pagination.bullets;\r\n                var firstIndex;\r\n                var lastIndex;\r\n                var midIndex;\r\n\r\n                if (params.dynamicBullets) {\r\n                    swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\r\n                    $el.css(swiper.isHorizontal() ? 'width' : 'height', swiper.pagination.bulletSize * (params.dynamicMainBullets + 4) + \"px\");\r\n\r\n                    if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\r\n                        swiper.pagination.dynamicBulletIndex += current - swiper.previousIndex;\r\n\r\n                        if (swiper.pagination.dynamicBulletIndex > params.dynamicMainBullets - 1) {\r\n                            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\r\n                        } else if (swiper.pagination.dynamicBulletIndex < 0) {\r\n                            swiper.pagination.dynamicBulletIndex = 0;\r\n                        }\r\n                    }\r\n\r\n                    firstIndex = current - swiper.pagination.dynamicBulletIndex;\r\n                    lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\r\n                    midIndex = (lastIndex + firstIndex) / 2;\r\n                }\r\n\r\n                bullets.removeClass(params.bulletActiveClass + \" \" + params.bulletActiveClass + \"-next \" + params.bulletActiveClass + \"-next-next \" + params.bulletActiveClass + \"-prev \" + params.bulletActiveClass + \"-prev-prev \" + params.bulletActiveClass + \"-main\");\r\n\r\n                if ($el.length > 1) {\r\n                    bullets.each(function (bullet) {\r\n                        var $bullet = $(bullet);\r\n                        var bulletIndex = $bullet.index();\r\n\r\n                        if (bulletIndex === current) {\r\n                            $bullet.addClass(params.bulletActiveClass);\r\n                        }\r\n\r\n                        if (params.dynamicBullets) {\r\n                            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\r\n                                $bullet.addClass(params.bulletActiveClass + \"-main\");\r\n                            }\r\n\r\n                            if (bulletIndex === firstIndex) {\r\n                                $bullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\r\n                            }\r\n\r\n                            if (bulletIndex === lastIndex) {\r\n                                $bullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    var $bullet = bullets.eq(current);\r\n                    var bulletIndex = $bullet.index();\r\n                    $bullet.addClass(params.bulletActiveClass);\r\n\r\n                    if (params.dynamicBullets) {\r\n                        var $firstDisplayedBullet = bullets.eq(firstIndex);\r\n                        var $lastDisplayedBullet = bullets.eq(lastIndex);\r\n\r\n                        for (var i = firstIndex; i <= lastIndex; i += 1) {\r\n                            bullets.eq(i).addClass(params.bulletActiveClass + \"-main\");\r\n                        }\r\n\r\n                        if (swiper.params.loop) {\r\n                            if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\r\n                                for (var _i = params.dynamicMainBullets; _i >= 0; _i -= 1) {\r\n                                    bullets.eq(bullets.length - _i).addClass(params.bulletActiveClass + \"-main\");\r\n                                }\r\n\r\n                                bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(params.bulletActiveClass + \"-prev\");\r\n                            } else {\r\n                                $firstDisplayedBullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\r\n                                $lastDisplayedBullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\r\n                            }\r\n                        } else {\r\n                            $firstDisplayedBullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\r\n                            $lastDisplayedBullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (params.dynamicBullets) {\r\n                    var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\r\n                    var bulletsOffset = (swiper.pagination.bulletSize * dynamicBulletsLength - swiper.pagination.bulletSize) / 2 - midIndex * swiper.pagination.bulletSize;\r\n                    var offsetProp = rtl ? 'right' : 'left';\r\n                    bullets.css(swiper.isHorizontal() ? offsetProp : 'top', bulletsOffset + \"px\");\r\n                }\r\n            }\r\n\r\n            if (params.type === 'fraction') {\r\n                $el.find(\".\" + params.currentClass).text(params.formatFractionCurrent(current + 1));\r\n                $el.find(\".\" + params.totalClass).text(params.formatFractionTotal(total));\r\n            }\r\n\r\n            if (params.type === 'progressbar') {\r\n                var progressbarDirection;\r\n\r\n                if (params.progressbarOpposite) {\r\n                    progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\r\n                } else {\r\n                    progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\r\n                }\r\n\r\n                var scale = (current + 1) / total;\r\n                var scaleX = 1;\r\n                var scaleY = 1;\r\n\r\n                if (progressbarDirection === 'horizontal') {\r\n                    scaleX = scale;\r\n                } else {\r\n                    scaleY = scale;\r\n                }\r\n\r\n                $el.find(\".\" + params.progressbarFillClass).transform(\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\").transition(swiper.params.speed);\r\n            }\r\n\r\n            if (params.type === 'custom' && params.renderCustom) {\r\n                $el.html(params.renderCustom(swiper, current + 1, total));\r\n                swiper.emit('paginationRender', $el[0]);\r\n            } else {\r\n                swiper.emit('paginationUpdate', $el[0]);\r\n            }\r\n\r\n            $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\r\n        },\r\n        render: function render() {\r\n            // Render Container\r\n            var swiper = this;\r\n            var params = swiper.params.pagination;\r\n            if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\r\n            var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\r\n            var $el = swiper.pagination.$el;\r\n            var paginationHTML = '';\r\n\r\n            if (params.type === 'bullets') {\r\n                var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\r\n\r\n                for (var i = 0; i < numberOfBullets; i += 1) {\r\n                    if (params.renderBullet) {\r\n                        paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\r\n                    } else {\r\n                        paginationHTML += \"<\" + params.bulletElement + \" class=\\\"\" + params.bulletClass + \"\\\"></\" + params.bulletElement + \">\";\r\n                    }\r\n                }\r\n\r\n                $el.html(paginationHTML);\r\n                swiper.pagination.bullets = $el.find(\".\" + params.bulletClass);\r\n            }\r\n\r\n            if (params.type === 'fraction') {\r\n                if (params.renderFraction) {\r\n                    paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\r\n                } else {\r\n                    paginationHTML = \"<span class=\\\"\" + params.currentClass + \"\\\"></span>\" + ' / ' + (\"<span class=\\\"\" + params.totalClass + \"\\\"></span>\");\r\n                }\r\n\r\n                $el.html(paginationHTML);\r\n            }\r\n\r\n            if (params.type === 'progressbar') {\r\n                if (params.renderProgressbar) {\r\n                    paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\r\n                } else {\r\n                    paginationHTML = \"<span class=\\\"\" + params.progressbarFillClass + \"\\\"></span>\";\r\n                }\r\n\r\n                $el.html(paginationHTML);\r\n            }\r\n\r\n            if (params.type !== 'custom') {\r\n                swiper.emit('paginationRender', swiper.pagination.$el[0]);\r\n            }\r\n        },\r\n        init: function init() {\r\n            var swiper = this;\r\n            var params = swiper.params.pagination;\r\n            if (!params.el) return;\r\n            var $el = $(params.el);\r\n            if ($el.length === 0) return;\r\n\r\n            if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1) {\r\n                $el = swiper.$el.find(params.el);\r\n            }\r\n\r\n            if (params.type === 'bullets' && params.clickable) {\r\n                $el.addClass(params.clickableClass);\r\n            }\r\n\r\n            $el.addClass(params.modifierClass + params.type);\r\n\r\n            if (params.type === 'bullets' && params.dynamicBullets) {\r\n                $el.addClass(\"\" + params.modifierClass + params.type + \"-dynamic\");\r\n                swiper.pagination.dynamicBulletIndex = 0;\r\n\r\n                if (params.dynamicMainBullets < 1) {\r\n                    params.dynamicMainBullets = 1;\r\n                }\r\n            }\r\n\r\n            if (params.type === 'progressbar' && params.progressbarOpposite) {\r\n                $el.addClass(params.progressbarOppositeClass);\r\n            }\r\n\r\n            if (params.clickable) {\r\n                $el.on('click', \".\" + params.bulletClass, function onClick(e) {\r\n                    e.preventDefault();\r\n                    var index = $(this).index() * swiper.params.slidesPerGroup;\r\n                    if (swiper.params.loop) index += swiper.loopedSlides;\r\n                    swiper.slideTo(index);\r\n                });\r\n            }\r\n\r\n            extend$1(swiper.pagination, {\r\n                $el: $el,\r\n                el: $el[0]\r\n            });\r\n        },\r\n        destroy: function destroy() {\r\n            var swiper = this;\r\n            var params = swiper.params.pagination;\r\n            if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\r\n            var $el = swiper.pagination.$el;\r\n            $el.removeClass(params.hiddenClass);\r\n            $el.removeClass(params.modifierClass + params.type);\r\n            if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\r\n\r\n            if (params.clickable) {\r\n                $el.off('click', \".\" + params.bulletClass);\r\n            }\r\n        }\r\n    };\r\n    var Pagination$1 = {\r\n        name: 'pagination',\r\n        params: {\r\n            pagination: {\r\n                el: null,\r\n                bulletElement: 'span',\r\n                clickable: false,\r\n                hideOnClick: false,\r\n                renderBullet: null,\r\n                renderProgressbar: null,\r\n                renderFraction: null,\r\n                renderCustom: null,\r\n                progressbarOpposite: false,\r\n                type: 'bullets',\r\n                // 'bullets' or 'progressbar' or 'fraction' or 'custom'\r\n                dynamicBullets: false,\r\n                dynamicMainBullets: 1,\r\n                formatFractionCurrent: function formatFractionCurrent(number) {\r\n                    return number;\r\n                },\r\n                formatFractionTotal: function formatFractionTotal(number) {\r\n                    return number;\r\n                },\r\n                bulletClass: 'swiper-pagination-bullet',\r\n                bulletActiveClass: 'swiper-pagination-bullet-active',\r\n                modifierClass: 'swiper-pagination-',\r\n                // NEW\r\n                currentClass: 'swiper-pagination-current',\r\n                totalClass: 'swiper-pagination-total',\r\n                hiddenClass: 'swiper-pagination-hidden',\r\n                progressbarFillClass: 'swiper-pagination-progressbar-fill',\r\n                progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\r\n                clickableClass: 'swiper-pagination-clickable',\r\n                // NEW\r\n                lockClass: 'swiper-pagination-lock'\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                pagination: _extends({\r\n                    dynamicBulletIndex: 0\r\n                }, Pagination)\r\n            });\r\n        },\r\n        on: {\r\n            init: function init(swiper) {\r\n                swiper.pagination.init();\r\n                swiper.pagination.render();\r\n                swiper.pagination.update();\r\n            },\r\n            activeIndexChange: function activeIndexChange(swiper) {\r\n                if (swiper.params.loop) {\r\n                    swiper.pagination.update();\r\n                } else if (typeof swiper.snapIndex === 'undefined') {\r\n                    swiper.pagination.update();\r\n                }\r\n            },\r\n            snapIndexChange: function snapIndexChange(swiper) {\r\n                if (!swiper.params.loop) {\r\n                    swiper.pagination.update();\r\n                }\r\n            },\r\n            slidesLengthChange: function slidesLengthChange(swiper) {\r\n                if (swiper.params.loop) {\r\n                    swiper.pagination.render();\r\n                    swiper.pagination.update();\r\n                }\r\n            },\r\n            snapGridLengthChange: function snapGridLengthChange(swiper) {\r\n                if (!swiper.params.loop) {\r\n                    swiper.pagination.render();\r\n                    swiper.pagination.update();\r\n                }\r\n            },\r\n            destroy: function destroy(swiper) {\r\n                swiper.pagination.destroy();\r\n            },\r\n            click: function click(swiper, e) {\r\n                if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && swiper.pagination.$el.length > 0 && !$(e.target).hasClass(swiper.params.pagination.bulletClass)) {\r\n                    var isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\r\n\r\n                    if (isHidden === true) {\r\n                        swiper.emit('paginationShow');\r\n                    } else {\r\n                        swiper.emit('paginationHide');\r\n                    }\r\n\r\n                    swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var Scrollbar = {\r\n        setTranslate: function setTranslate() {\r\n            var swiper = this;\r\n            if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n            var scrollbar = swiper.scrollbar,\r\n                rtl = swiper.rtlTranslate,\r\n                progress = swiper.progress;\r\n            var dragSize = scrollbar.dragSize,\r\n                trackSize = scrollbar.trackSize,\r\n                $dragEl = scrollbar.$dragEl,\r\n                $el = scrollbar.$el;\r\n            var params = swiper.params.scrollbar;\r\n            var newSize = dragSize;\r\n            var newPos = (trackSize - dragSize) * progress;\r\n\r\n            if (rtl) {\r\n                newPos = -newPos;\r\n\r\n                if (newPos > 0) {\r\n                    newSize = dragSize - newPos;\r\n                    newPos = 0;\r\n                } else if (-newPos + dragSize > trackSize) {\r\n                    newSize = trackSize + newPos;\r\n                }\r\n            } else if (newPos < 0) {\r\n                newSize = dragSize + newPos;\r\n                newPos = 0;\r\n            } else if (newPos + dragSize > trackSize) {\r\n                newSize = trackSize - newPos;\r\n            }\r\n\r\n            if (swiper.isHorizontal()) {\r\n                $dragEl.transform(\"translate3d(\" + newPos + \"px, 0, 0)\");\r\n                $dragEl[0].style.width = newSize + \"px\";\r\n            } else {\r\n                $dragEl.transform(\"translate3d(0px, \" + newPos + \"px, 0)\");\r\n                $dragEl[0].style.height = newSize + \"px\";\r\n            }\r\n\r\n            if (params.hide) {\r\n                clearTimeout(swiper.scrollbar.timeout);\r\n                $el[0].style.opacity = 1;\r\n                swiper.scrollbar.timeout = setTimeout(function () {\r\n                    $el[0].style.opacity = 0;\r\n                    $el.transition(400);\r\n                }, 1000);\r\n            }\r\n        },\r\n        setTransition: function setTransition(duration) {\r\n            var swiper = this;\r\n            if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n            swiper.scrollbar.$dragEl.transition(duration);\r\n        },\r\n        updateSize: function updateSize() {\r\n            var swiper = this;\r\n            if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n            var scrollbar = swiper.scrollbar;\r\n            var $dragEl = scrollbar.$dragEl,\r\n                $el = scrollbar.$el;\r\n            $dragEl[0].style.width = '';\r\n            $dragEl[0].style.height = '';\r\n            var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\r\n            var divider = swiper.size / swiper.virtualSize;\r\n            var moveDivider = divider * (trackSize / swiper.size);\r\n            var dragSize;\r\n\r\n            if (swiper.params.scrollbar.dragSize === 'auto') {\r\n                dragSize = trackSize * divider;\r\n            } else {\r\n                dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\r\n            }\r\n\r\n            if (swiper.isHorizontal()) {\r\n                $dragEl[0].style.width = dragSize + \"px\";\r\n            } else {\r\n                $dragEl[0].style.height = dragSize + \"px\";\r\n            }\r\n\r\n            if (divider >= 1) {\r\n                $el[0].style.display = 'none';\r\n            } else {\r\n                $el[0].style.display = '';\r\n            }\r\n\r\n            if (swiper.params.scrollbar.hide) {\r\n                $el[0].style.opacity = 0;\r\n            }\r\n\r\n            extend$1(scrollbar, {\r\n                trackSize: trackSize,\r\n                divider: divider,\r\n                moveDivider: moveDivider,\r\n                dragSize: dragSize\r\n            });\r\n            scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\r\n        },\r\n        getPointerPosition: function getPointerPosition(e) {\r\n            var swiper = this;\r\n\r\n            if (swiper.isHorizontal()) {\r\n                return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientX : e.clientX;\r\n            }\r\n\r\n            return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientY : e.clientY;\r\n        },\r\n        setDragPosition: function setDragPosition(e) {\r\n            var swiper = this;\r\n            var scrollbar = swiper.scrollbar,\r\n                rtl = swiper.rtlTranslate;\r\n            var $el = scrollbar.$el,\r\n                dragSize = scrollbar.dragSize,\r\n                trackSize = scrollbar.trackSize,\r\n                dragStartPos = scrollbar.dragStartPos;\r\n            var positionRatio;\r\n            positionRatio = (scrollbar.getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\r\n            positionRatio = Math.max(Math.min(positionRatio, 1), 0);\r\n\r\n            if (rtl) {\r\n                positionRatio = 1 - positionRatio;\r\n            }\r\n\r\n            var position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\r\n            swiper.updateProgress(position);\r\n            swiper.setTranslate(position);\r\n            swiper.updateActiveIndex();\r\n            swiper.updateSlidesClasses();\r\n        },\r\n        onDragStart: function onDragStart(e) {\r\n            var swiper = this;\r\n            var params = swiper.params.scrollbar;\r\n            var scrollbar = swiper.scrollbar,\r\n                $wrapperEl = swiper.$wrapperEl;\r\n            var $el = scrollbar.$el,\r\n                $dragEl = scrollbar.$dragEl;\r\n            swiper.scrollbar.isTouched = true;\r\n            swiper.scrollbar.dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            $wrapperEl.transition(100);\r\n            $dragEl.transition(100);\r\n            scrollbar.setDragPosition(e);\r\n            clearTimeout(swiper.scrollbar.dragTimeout);\r\n            $el.transition(0);\r\n\r\n            if (params.hide) {\r\n                $el.css('opacity', 1);\r\n            }\r\n\r\n            if (swiper.params.cssMode) {\r\n                swiper.$wrapperEl.css('scroll-snap-type', 'none');\r\n            }\r\n\r\n            swiper.emit('scrollbarDragStart', e);\r\n        },\r\n        onDragMove: function onDragMove(e) {\r\n            var swiper = this;\r\n            var scrollbar = swiper.scrollbar,\r\n                $wrapperEl = swiper.$wrapperEl;\r\n            var $el = scrollbar.$el,\r\n                $dragEl = scrollbar.$dragEl;\r\n            if (!swiper.scrollbar.isTouched) return;\r\n            if (e.preventDefault) e.preventDefault();else e.returnValue = false;\r\n            scrollbar.setDragPosition(e);\r\n            $wrapperEl.transition(0);\r\n            $el.transition(0);\r\n            $dragEl.transition(0);\r\n            swiper.emit('scrollbarDragMove', e);\r\n        },\r\n        onDragEnd: function onDragEnd(e) {\r\n            var swiper = this;\r\n            var params = swiper.params.scrollbar;\r\n            var scrollbar = swiper.scrollbar,\r\n                $wrapperEl = swiper.$wrapperEl;\r\n            var $el = scrollbar.$el;\r\n            if (!swiper.scrollbar.isTouched) return;\r\n            swiper.scrollbar.isTouched = false;\r\n\r\n            if (swiper.params.cssMode) {\r\n                swiper.$wrapperEl.css('scroll-snap-type', '');\r\n                $wrapperEl.transition('');\r\n            }\r\n\r\n            if (params.hide) {\r\n                clearTimeout(swiper.scrollbar.dragTimeout);\r\n                swiper.scrollbar.dragTimeout = nextTick(function () {\r\n                    $el.css('opacity', 0);\r\n                    $el.transition(400);\r\n                }, 1000);\r\n            }\r\n\r\n            swiper.emit('scrollbarDragEnd', e);\r\n\r\n            if (params.snapOnRelease) {\r\n                swiper.slideToClosest();\r\n            }\r\n        },\r\n        enableDraggable: function enableDraggable() {\r\n            var swiper = this;\r\n            if (!swiper.params.scrollbar.el) return;\r\n            var document = getDocument();\r\n            var scrollbar = swiper.scrollbar,\r\n                touchEventsTouch = swiper.touchEventsTouch,\r\n                touchEventsDesktop = swiper.touchEventsDesktop,\r\n                params = swiper.params,\r\n                support = swiper.support;\r\n            var $el = scrollbar.$el;\r\n            var target = $el[0];\r\n            var activeListener = support.passiveListener && params.passiveListeners ? {\r\n                passive: false,\r\n                capture: false\r\n            } : false;\r\n            var passiveListener = support.passiveListener && params.passiveListeners ? {\r\n                passive: true,\r\n                capture: false\r\n            } : false;\r\n\r\n            if (!support.touch) {\r\n                target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\r\n                document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\r\n                document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\r\n            } else {\r\n                target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\r\n                target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\r\n                target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\r\n            }\r\n        },\r\n        disableDraggable: function disableDraggable() {\r\n            var swiper = this;\r\n            if (!swiper.params.scrollbar.el) return;\r\n            var document = getDocument();\r\n            var scrollbar = swiper.scrollbar,\r\n                touchEventsTouch = swiper.touchEventsTouch,\r\n                touchEventsDesktop = swiper.touchEventsDesktop,\r\n                params = swiper.params,\r\n                support = swiper.support;\r\n            var $el = scrollbar.$el;\r\n            var target = $el[0];\r\n            var activeListener = support.passiveListener && params.passiveListeners ? {\r\n                passive: false,\r\n                capture: false\r\n            } : false;\r\n            var passiveListener = support.passiveListener && params.passiveListeners ? {\r\n                passive: true,\r\n                capture: false\r\n            } : false;\r\n\r\n            if (!support.touch) {\r\n                target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\r\n                document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\r\n                document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\r\n            } else {\r\n                target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\r\n                target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\r\n                target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\r\n            }\r\n        },\r\n        init: function init() {\r\n            var swiper = this;\r\n            if (!swiper.params.scrollbar.el) return;\r\n            var scrollbar = swiper.scrollbar,\r\n                $swiperEl = swiper.$el;\r\n            var params = swiper.params.scrollbar;\r\n            var $el = $(params.el);\r\n\r\n            if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\r\n                $el = $swiperEl.find(params.el);\r\n            }\r\n\r\n            var $dragEl = $el.find(\".\" + swiper.params.scrollbar.dragClass);\r\n\r\n            if ($dragEl.length === 0) {\r\n                $dragEl = $(\"<div class=\\\"\" + swiper.params.scrollbar.dragClass + \"\\\"></div>\");\r\n                $el.append($dragEl);\r\n            }\r\n\r\n            extend$1(scrollbar, {\r\n                $el: $el,\r\n                el: $el[0],\r\n                $dragEl: $dragEl,\r\n                dragEl: $dragEl[0]\r\n            });\r\n\r\n            if (params.draggable) {\r\n                scrollbar.enableDraggable();\r\n            }\r\n        },\r\n        destroy: function destroy() {\r\n            var swiper = this;\r\n            swiper.scrollbar.disableDraggable();\r\n        }\r\n    };\r\n    var Scrollbar$1 = {\r\n        name: 'scrollbar',\r\n        params: {\r\n            scrollbar: {\r\n                el: null,\r\n                dragSize: 'auto',\r\n                hide: false,\r\n                draggable: false,\r\n                snapOnRelease: true,\r\n                lockClass: 'swiper-scrollbar-lock',\r\n                dragClass: 'swiper-scrollbar-drag'\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                scrollbar: _extends({\r\n                    isTouched: false,\r\n                    timeout: null,\r\n                    dragTimeout: null\r\n                }, Scrollbar)\r\n            });\r\n        },\r\n        on: {\r\n            init: function init(swiper) {\r\n                swiper.scrollbar.init();\r\n                swiper.scrollbar.updateSize();\r\n                swiper.scrollbar.setTranslate();\r\n            },\r\n            update: function update(swiper) {\r\n                swiper.scrollbar.updateSize();\r\n            },\r\n            resize: function resize(swiper) {\r\n                swiper.scrollbar.updateSize();\r\n            },\r\n            observerUpdate: function observerUpdate(swiper) {\r\n                swiper.scrollbar.updateSize();\r\n            },\r\n            setTranslate: function setTranslate(swiper) {\r\n                swiper.scrollbar.setTranslate();\r\n            },\r\n            setTransition: function setTransition(swiper, duration) {\r\n                swiper.scrollbar.setTransition(duration);\r\n            },\r\n            destroy: function destroy(swiper) {\r\n                swiper.scrollbar.destroy();\r\n            }\r\n        }\r\n    };\r\n\r\n    var Parallax = {\r\n        setTransform: function setTransform(el, progress) {\r\n            var swiper = this;\r\n            var rtl = swiper.rtl;\r\n            var $el = $(el);\r\n            var rtlFactor = rtl ? -1 : 1;\r\n            var p = $el.attr('data-swiper-parallax') || '0';\r\n            var x = $el.attr('data-swiper-parallax-x');\r\n            var y = $el.attr('data-swiper-parallax-y');\r\n            var scale = $el.attr('data-swiper-parallax-scale');\r\n            var opacity = $el.attr('data-swiper-parallax-opacity');\r\n\r\n            if (x || y) {\r\n                x = x || '0';\r\n                y = y || '0';\r\n            } else if (swiper.isHorizontal()) {\r\n                x = p;\r\n                y = '0';\r\n            } else {\r\n                y = p;\r\n                x = '0';\r\n            }\r\n\r\n            if (x.indexOf('%') >= 0) {\r\n                x = parseInt(x, 10) * progress * rtlFactor + \"%\";\r\n            } else {\r\n                x = x * progress * rtlFactor + \"px\";\r\n            }\r\n\r\n            if (y.indexOf('%') >= 0) {\r\n                y = parseInt(y, 10) * progress + \"%\";\r\n            } else {\r\n                y = y * progress + \"px\";\r\n            }\r\n\r\n            if (typeof opacity !== 'undefined' && opacity !== null) {\r\n                var currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\r\n                $el[0].style.opacity = currentOpacity;\r\n            }\r\n\r\n            if (typeof scale === 'undefined' || scale === null) {\r\n                $el.transform(\"translate3d(\" + x + \", \" + y + \", 0px)\");\r\n            } else {\r\n                var currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\r\n                $el.transform(\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\");\r\n            }\r\n        },\r\n        setTranslate: function setTranslate() {\r\n            var swiper = this;\r\n            var $el = swiper.$el,\r\n                slides = swiper.slides,\r\n                progress = swiper.progress,\r\n                snapGrid = swiper.snapGrid;\r\n            $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (el) {\r\n                swiper.parallax.setTransform(el, progress);\r\n            });\r\n            slides.each(function (slideEl, slideIndex) {\r\n                var slideProgress = slideEl.progress;\r\n\r\n                if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\r\n                    slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\r\n                }\r\n\r\n                slideProgress = Math.min(Math.max(slideProgress, -1), 1);\r\n                $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (el) {\r\n                    swiper.parallax.setTransform(el, slideProgress);\r\n                });\r\n            });\r\n        },\r\n        setTransition: function setTransition(duration) {\r\n            if (duration === void 0) {\r\n                duration = this.params.speed;\r\n            }\r\n\r\n            var swiper = this;\r\n            var $el = swiper.$el;\r\n            $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (parallaxEl) {\r\n                var $parallaxEl = $(parallaxEl);\r\n                var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\r\n                if (duration === 0) parallaxDuration = 0;\r\n                $parallaxEl.transition(parallaxDuration);\r\n            });\r\n        }\r\n    };\r\n    var Parallax$1 = {\r\n        name: 'parallax',\r\n        params: {\r\n            parallax: {\r\n                enabled: false\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                parallax: _extends({}, Parallax)\r\n            });\r\n        },\r\n        on: {\r\n            beforeInit: function beforeInit(swiper) {\r\n                if (!swiper.params.parallax.enabled) return;\r\n                swiper.params.watchSlidesProgress = true;\r\n                swiper.originalParams.watchSlidesProgress = true;\r\n            },\r\n            init: function init(swiper) {\r\n                if (!swiper.params.parallax.enabled) return;\r\n                swiper.parallax.setTranslate();\r\n            },\r\n            setTranslate: function setTranslate(swiper) {\r\n                if (!swiper.params.parallax.enabled) return;\r\n                swiper.parallax.setTranslate();\r\n            },\r\n            setTransition: function setTransition(swiper, duration) {\r\n                if (!swiper.params.parallax.enabled) return;\r\n                swiper.parallax.setTransition(duration);\r\n            }\r\n        }\r\n    };\r\n\r\n    var Zoom = {\r\n        // Calc Scale From Multi-touches\r\n        getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\r\n            if (e.targetTouches.length < 2) return 1;\r\n            var x1 = e.targetTouches[0].pageX;\r\n            var y1 = e.targetTouches[0].pageY;\r\n            var x2 = e.targetTouches[1].pageX;\r\n            var y2 = e.targetTouches[1].pageY;\r\n            var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\r\n            return distance;\r\n        },\r\n        // Events\r\n        onGestureStart: function onGestureStart(e) {\r\n            var swiper = this;\r\n            var support = swiper.support;\r\n            var params = swiper.params.zoom;\r\n            var zoom = swiper.zoom;\r\n            var gesture = zoom.gesture;\r\n            zoom.fakeGestureTouched = false;\r\n            zoom.fakeGestureMoved = false;\r\n\r\n            if (!support.gestures) {\r\n                if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\r\n                    return;\r\n                }\r\n\r\n                zoom.fakeGestureTouched = true;\r\n                gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\r\n            }\r\n\r\n            if (!gesture.$slideEl || !gesture.$slideEl.length) {\r\n                gesture.$slideEl = $(e.target).closest(\".\" + swiper.params.slideClass);\r\n                if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\r\n                gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\r\n                gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\r\n                gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\r\n\r\n                if (gesture.$imageWrapEl.length === 0) {\r\n                    gesture.$imageEl = undefined;\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (gesture.$imageEl) {\r\n                gesture.$imageEl.transition(0);\r\n            }\r\n\r\n            swiper.zoom.isScaling = true;\r\n        },\r\n        onGestureChange: function onGestureChange(e) {\r\n            var swiper = this;\r\n            var support = swiper.support;\r\n            var params = swiper.params.zoom;\r\n            var zoom = swiper.zoom;\r\n            var gesture = zoom.gesture;\r\n\r\n            if (!support.gestures) {\r\n                if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\r\n                    return;\r\n                }\r\n\r\n                zoom.fakeGestureMoved = true;\r\n                gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\r\n            }\r\n\r\n            if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\r\n                if (e.type === 'gesturechange') zoom.onGestureStart(e);\r\n                return;\r\n            }\r\n\r\n            if (support.gestures) {\r\n                zoom.scale = e.scale * zoom.currentScale;\r\n            } else {\r\n                zoom.scale = gesture.scaleMove / gesture.scaleStart * zoom.currentScale;\r\n            }\r\n\r\n            if (zoom.scale > gesture.maxRatio) {\r\n                zoom.scale = gesture.maxRatio - 1 + Math.pow(zoom.scale - gesture.maxRatio + 1, 0.5);\r\n            }\r\n\r\n            if (zoom.scale < params.minRatio) {\r\n                zoom.scale = params.minRatio + 1 - Math.pow(params.minRatio - zoom.scale + 1, 0.5);\r\n            }\r\n\r\n            gesture.$imageEl.transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\r\n        },\r\n        onGestureEnd: function onGestureEnd(e) {\r\n            var swiper = this;\r\n            var device = swiper.device;\r\n            var support = swiper.support;\r\n            var params = swiper.params.zoom;\r\n            var zoom = swiper.zoom;\r\n            var gesture = zoom.gesture;\r\n\r\n            if (!support.gestures) {\r\n                if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\r\n                    return;\r\n                }\r\n\r\n                if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !device.android) {\r\n                    return;\r\n                }\r\n\r\n                zoom.fakeGestureTouched = false;\r\n                zoom.fakeGestureMoved = false;\r\n            }\r\n\r\n            if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n            zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\r\n            gesture.$imageEl.transition(swiper.params.speed).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\r\n            zoom.currentScale = zoom.scale;\r\n            zoom.isScaling = false;\r\n            if (zoom.scale === 1) gesture.$slideEl = undefined;\r\n        },\r\n        onTouchStart: function onTouchStart(e) {\r\n            var swiper = this;\r\n            var device = swiper.device;\r\n            var zoom = swiper.zoom;\r\n            var gesture = zoom.gesture,\r\n                image = zoom.image;\r\n            if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n            if (image.isTouched) return;\r\n            if (device.android && e.cancelable) e.preventDefault();\r\n            image.isTouched = true;\r\n            image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\r\n            image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\r\n        },\r\n        onTouchMove: function onTouchMove(e) {\r\n            var swiper = this;\r\n            var zoom = swiper.zoom;\r\n            var gesture = zoom.gesture,\r\n                image = zoom.image,\r\n                velocity = zoom.velocity;\r\n            if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n            swiper.allowClick = false;\r\n            if (!image.isTouched || !gesture.$slideEl) return;\r\n\r\n            if (!image.isMoved) {\r\n                image.width = gesture.$imageEl[0].offsetWidth;\r\n                image.height = gesture.$imageEl[0].offsetHeight;\r\n                image.startX = getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\r\n                image.startY = getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\r\n                gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\r\n                gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\r\n                gesture.$imageWrapEl.transition(0);\r\n\r\n                if (swiper.rtl) {\r\n                    image.startX = -image.startX;\r\n                    image.startY = -image.startY;\r\n                }\r\n            } // Define if we need image drag\r\n\r\n\r\n            var scaledWidth = image.width * zoom.scale;\r\n            var scaledHeight = image.height * zoom.scale;\r\n            if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\r\n            image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\r\n            image.maxX = -image.minX;\r\n            image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\r\n            image.maxY = -image.minY;\r\n            image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\r\n            image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\r\n\r\n            if (!image.isMoved && !zoom.isScaling) {\r\n                if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\r\n                    image.isTouched = false;\r\n                    return;\r\n                }\r\n\r\n                if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\r\n                    image.isTouched = false;\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (e.cancelable) {\r\n                e.preventDefault();\r\n            }\r\n\r\n            e.stopPropagation();\r\n            image.isMoved = true;\r\n            image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\r\n            image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\r\n\r\n            if (image.currentX < image.minX) {\r\n                image.currentX = image.minX + 1 - Math.pow(image.minX - image.currentX + 1, 0.8);\r\n            }\r\n\r\n            if (image.currentX > image.maxX) {\r\n                image.currentX = image.maxX - 1 + Math.pow(image.currentX - image.maxX + 1, 0.8);\r\n            }\r\n\r\n            if (image.currentY < image.minY) {\r\n                image.currentY = image.minY + 1 - Math.pow(image.minY - image.currentY + 1, 0.8);\r\n            }\r\n\r\n            if (image.currentY > image.maxY) {\r\n                image.currentY = image.maxY - 1 + Math.pow(image.currentY - image.maxY + 1, 0.8);\r\n            } // Velocity\r\n\r\n\r\n            if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\r\n            if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\r\n            if (!velocity.prevTime) velocity.prevTime = Date.now();\r\n            velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\r\n            velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\r\n            if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\r\n            if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\r\n            velocity.prevPositionX = image.touchesCurrent.x;\r\n            velocity.prevPositionY = image.touchesCurrent.y;\r\n            velocity.prevTime = Date.now();\r\n            gesture.$imageWrapEl.transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\r\n        },\r\n        onTouchEnd: function onTouchEnd() {\r\n            var swiper = this;\r\n            var zoom = swiper.zoom;\r\n            var gesture = zoom.gesture,\r\n                image = zoom.image,\r\n                velocity = zoom.velocity;\r\n            if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n\r\n            if (!image.isTouched || !image.isMoved) {\r\n                image.isTouched = false;\r\n                image.isMoved = false;\r\n                return;\r\n            }\r\n\r\n            image.isTouched = false;\r\n            image.isMoved = false;\r\n            var momentumDurationX = 300;\r\n            var momentumDurationY = 300;\r\n            var momentumDistanceX = velocity.x * momentumDurationX;\r\n            var newPositionX = image.currentX + momentumDistanceX;\r\n            var momentumDistanceY = velocity.y * momentumDurationY;\r\n            var newPositionY = image.currentY + momentumDistanceY; // Fix duration\r\n\r\n            if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\r\n            if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\r\n            var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\r\n            image.currentX = newPositionX;\r\n            image.currentY = newPositionY; // Define if we need image drag\r\n\r\n            var scaledWidth = image.width * zoom.scale;\r\n            var scaledHeight = image.height * zoom.scale;\r\n            image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\r\n            image.maxX = -image.minX;\r\n            image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\r\n            image.maxY = -image.minY;\r\n            image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\r\n            image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\r\n            gesture.$imageWrapEl.transition(momentumDuration).transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\r\n        },\r\n        onTransitionEnd: function onTransitionEnd() {\r\n            var swiper = this;\r\n            var zoom = swiper.zoom;\r\n            var gesture = zoom.gesture;\r\n\r\n            if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\r\n                if (gesture.$imageEl) {\r\n                    gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\r\n                }\r\n\r\n                if (gesture.$imageWrapEl) {\r\n                    gesture.$imageWrapEl.transform('translate3d(0,0,0)');\r\n                }\r\n\r\n                zoom.scale = 1;\r\n                zoom.currentScale = 1;\r\n                gesture.$slideEl = undefined;\r\n                gesture.$imageEl = undefined;\r\n                gesture.$imageWrapEl = undefined;\r\n            }\r\n        },\r\n        // Toggle Zoom\r\n        toggle: function toggle(e) {\r\n            var swiper = this;\r\n            var zoom = swiper.zoom;\r\n\r\n            if (zoom.scale && zoom.scale !== 1) {\r\n                // Zoom Out\r\n                zoom.out();\r\n            } else {\r\n                // Zoom In\r\n                zoom.in(e);\r\n            }\r\n        },\r\n        in: function _in(e) {\r\n            var swiper = this;\r\n            var zoom = swiper.zoom;\r\n            var params = swiper.params.zoom;\r\n            var gesture = zoom.gesture,\r\n                image = zoom.image;\r\n\r\n            if (!gesture.$slideEl) {\r\n                if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\r\n                    gesture.$slideEl = swiper.$wrapperEl.children(\".\" + swiper.params.slideActiveClass);\r\n                } else {\r\n                    gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\r\n                }\r\n\r\n                gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\r\n                gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\r\n            }\r\n\r\n            if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n            gesture.$slideEl.addClass(\"\" + params.zoomedSlideClass);\r\n            var touchX;\r\n            var touchY;\r\n            var offsetX;\r\n            var offsetY;\r\n            var diffX;\r\n            var diffY;\r\n            var translateX;\r\n            var translateY;\r\n            var imageWidth;\r\n            var imageHeight;\r\n            var scaledWidth;\r\n            var scaledHeight;\r\n            var translateMinX;\r\n            var translateMinY;\r\n            var translateMaxX;\r\n            var translateMaxY;\r\n            var slideWidth;\r\n            var slideHeight;\r\n\r\n            if (typeof image.touchesStart.x === 'undefined' && e) {\r\n                touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\r\n                touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\r\n            } else {\r\n                touchX = image.touchesStart.x;\r\n                touchY = image.touchesStart.y;\r\n            }\r\n\r\n            zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\r\n            zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\r\n\r\n            if (e) {\r\n                slideWidth = gesture.$slideEl[0].offsetWidth;\r\n                slideHeight = gesture.$slideEl[0].offsetHeight;\r\n                offsetX = gesture.$slideEl.offset().left;\r\n                offsetY = gesture.$slideEl.offset().top;\r\n                diffX = offsetX + slideWidth / 2 - touchX;\r\n                diffY = offsetY + slideHeight / 2 - touchY;\r\n                imageWidth = gesture.$imageEl[0].offsetWidth;\r\n                imageHeight = gesture.$imageEl[0].offsetHeight;\r\n                scaledWidth = imageWidth * zoom.scale;\r\n                scaledHeight = imageHeight * zoom.scale;\r\n                translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\r\n                translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\r\n                translateMaxX = -translateMinX;\r\n                translateMaxY = -translateMinY;\r\n                translateX = diffX * zoom.scale;\r\n                translateY = diffY * zoom.scale;\r\n\r\n                if (translateX < translateMinX) {\r\n                    translateX = translateMinX;\r\n                }\r\n\r\n                if (translateX > translateMaxX) {\r\n                    translateX = translateMaxX;\r\n                }\r\n\r\n                if (translateY < translateMinY) {\r\n                    translateY = translateMinY;\r\n                }\r\n\r\n                if (translateY > translateMaxY) {\r\n                    translateY = translateMaxY;\r\n                }\r\n            } else {\r\n                translateX = 0;\r\n                translateY = 0;\r\n            }\r\n\r\n            gesture.$imageWrapEl.transition(300).transform(\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\");\r\n            gesture.$imageEl.transition(300).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\r\n        },\r\n        out: function out() {\r\n            var swiper = this;\r\n            var zoom = swiper.zoom;\r\n            var params = swiper.params.zoom;\r\n            var gesture = zoom.gesture;\r\n\r\n            if (!gesture.$slideEl) {\r\n                if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\r\n                    gesture.$slideEl = swiper.$wrapperEl.children(\".\" + swiper.params.slideActiveClass);\r\n                } else {\r\n                    gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\r\n                }\r\n\r\n                gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\r\n                gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\r\n            }\r\n\r\n            if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n            zoom.scale = 1;\r\n            zoom.currentScale = 1;\r\n            gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\r\n            gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\r\n            gesture.$slideEl.removeClass(\"\" + params.zoomedSlideClass);\r\n            gesture.$slideEl = undefined;\r\n        },\r\n        toggleGestures: function toggleGestures(method) {\r\n            var swiper = this;\r\n            var zoom = swiper.zoom;\r\n            var selector = zoom.slideSelector,\r\n                passive = zoom.passiveListener;\r\n            swiper.$wrapperEl[method]('gesturestart', selector, zoom.onGestureStart, passive);\r\n            swiper.$wrapperEl[method]('gesturechange', selector, zoom.onGestureChange, passive);\r\n            swiper.$wrapperEl[method]('gestureend', selector, zoom.onGestureEnd, passive);\r\n        },\r\n        enableGestures: function enableGestures() {\r\n            if (this.zoom.gesturesEnabled) return;\r\n            this.zoom.gesturesEnabled = true;\r\n            this.zoom.toggleGestures('on');\r\n        },\r\n        disableGestures: function disableGestures() {\r\n            if (!this.zoom.gesturesEnabled) return;\r\n            this.zoom.gesturesEnabled = false;\r\n            this.zoom.toggleGestures('off');\r\n        },\r\n        // Attach/Detach Events\r\n        enable: function enable() {\r\n            var swiper = this;\r\n            var support = swiper.support;\r\n            var zoom = swiper.zoom;\r\n            if (zoom.enabled) return;\r\n            zoom.enabled = true;\r\n            var passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {\r\n                passive: true,\r\n                capture: false\r\n            } : false;\r\n            var activeListenerWithCapture = support.passiveListener ? {\r\n                passive: false,\r\n                capture: true\r\n            } : true;\r\n            var slideSelector = \".\" + swiper.params.slideClass;\r\n            swiper.zoom.passiveListener = passiveListener;\r\n            swiper.zoom.slideSelector = slideSelector; // Scale image\r\n\r\n            if (support.gestures) {\r\n                swiper.$wrapperEl.on(swiper.touchEvents.start, swiper.zoom.enableGestures, passiveListener);\r\n                swiper.$wrapperEl.on(swiper.touchEvents.end, swiper.zoom.disableGestures, passiveListener);\r\n            } else if (swiper.touchEvents.start === 'touchstart') {\r\n                swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\r\n                swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\r\n                swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\r\n\r\n                if (swiper.touchEvents.cancel) {\r\n                    swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\r\n                }\r\n            } // Move image\r\n\r\n\r\n            swiper.$wrapperEl.on(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove, activeListenerWithCapture);\r\n        },\r\n        disable: function disable() {\r\n            var swiper = this;\r\n            var zoom = swiper.zoom;\r\n            if (!zoom.enabled) return;\r\n            var support = swiper.support;\r\n            swiper.zoom.enabled = false;\r\n            var passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {\r\n                passive: true,\r\n                capture: false\r\n            } : false;\r\n            var activeListenerWithCapture = support.passiveListener ? {\r\n                passive: false,\r\n                capture: true\r\n            } : true;\r\n            var slideSelector = \".\" + swiper.params.slideClass; // Scale image\r\n\r\n            if (support.gestures) {\r\n                swiper.$wrapperEl.off(swiper.touchEvents.start, swiper.zoom.enableGestures, passiveListener);\r\n                swiper.$wrapperEl.off(swiper.touchEvents.end, swiper.zoom.disableGestures, passiveListener);\r\n            } else if (swiper.touchEvents.start === 'touchstart') {\r\n                swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\r\n                swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\r\n                swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\r\n\r\n                if (swiper.touchEvents.cancel) {\r\n                    swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\r\n                }\r\n            } // Move image\r\n\r\n\r\n            swiper.$wrapperEl.off(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove, activeListenerWithCapture);\r\n        }\r\n    };\r\n    var Zoom$1 = {\r\n        name: 'zoom',\r\n        params: {\r\n            zoom: {\r\n                enabled: false,\r\n                maxRatio: 3,\r\n                minRatio: 1,\r\n                toggle: true,\r\n                containerClass: 'swiper-zoom-container',\r\n                zoomedSlideClass: 'swiper-slide-zoomed'\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                zoom: _extends({\r\n                    enabled: false,\r\n                    scale: 1,\r\n                    currentScale: 1,\r\n                    isScaling: false,\r\n                    gesture: {\r\n                        $slideEl: undefined,\r\n                        slideWidth: undefined,\r\n                        slideHeight: undefined,\r\n                        $imageEl: undefined,\r\n                        $imageWrapEl: undefined,\r\n                        maxRatio: 3\r\n                    },\r\n                    image: {\r\n                        isTouched: undefined,\r\n                        isMoved: undefined,\r\n                        currentX: undefined,\r\n                        currentY: undefined,\r\n                        minX: undefined,\r\n                        minY: undefined,\r\n                        maxX: undefined,\r\n                        maxY: undefined,\r\n                        width: undefined,\r\n                        height: undefined,\r\n                        startX: undefined,\r\n                        startY: undefined,\r\n                        touchesStart: {},\r\n                        touchesCurrent: {}\r\n                    },\r\n                    velocity: {\r\n                        x: undefined,\r\n                        y: undefined,\r\n                        prevPositionX: undefined,\r\n                        prevPositionY: undefined,\r\n                        prevTime: undefined\r\n                    }\r\n                }, Zoom)\r\n            });\r\n            var scale = 1;\r\n            Object.defineProperty(swiper.zoom, 'scale', {\r\n                get: function get() {\r\n                    return scale;\r\n                },\r\n                set: function set(value) {\r\n                    if (scale !== value) {\r\n                        var imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\r\n                        var slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\r\n                        swiper.emit('zoomChange', value, imageEl, slideEl);\r\n                    }\r\n\r\n                    scale = value;\r\n                }\r\n            });\r\n        },\r\n        on: {\r\n            init: function init(swiper) {\r\n                if (swiper.params.zoom.enabled) {\r\n                    swiper.zoom.enable();\r\n                }\r\n            },\r\n            destroy: function destroy(swiper) {\r\n                swiper.zoom.disable();\r\n            },\r\n            touchStart: function touchStart(swiper, e) {\r\n                if (!swiper.zoom.enabled) return;\r\n                swiper.zoom.onTouchStart(e);\r\n            },\r\n            touchEnd: function touchEnd(swiper, e) {\r\n                if (!swiper.zoom.enabled) return;\r\n                swiper.zoom.onTouchEnd(e);\r\n            },\r\n            doubleTap: function doubleTap(swiper, e) {\r\n                if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\r\n                    swiper.zoom.toggle(e);\r\n                }\r\n            },\r\n            transitionEnd: function transitionEnd(swiper) {\r\n                if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\r\n                    swiper.zoom.onTransitionEnd();\r\n                }\r\n            },\r\n            slideChange: function slideChange(swiper) {\r\n                if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\r\n                    swiper.zoom.onTransitionEnd();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var Lazy = {\r\n        loadInSlide: function loadInSlide(index, loadInDuplicate) {\r\n            if (loadInDuplicate === void 0) {\r\n                loadInDuplicate = true;\r\n            }\r\n\r\n            var swiper = this;\r\n            var params = swiper.params.lazy;\r\n            if (typeof index === 'undefined') return;\r\n            if (swiper.slides.length === 0) return;\r\n            var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n            var $slideEl = isVirtual ? swiper.$wrapperEl.children(\".\" + swiper.params.slideClass + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\") : swiper.slides.eq(index);\r\n            var $images = $slideEl.find(\".\" + params.elementClass + \":not(.\" + params.loadedClass + \"):not(.\" + params.loadingClass + \")\");\r\n\r\n            if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\r\n                $images.push($slideEl[0]);\r\n            }\r\n\r\n            if ($images.length === 0) return;\r\n            $images.each(function (imageEl) {\r\n                var $imageEl = $(imageEl);\r\n                $imageEl.addClass(params.loadingClass);\r\n                var background = $imageEl.attr('data-background');\r\n                var src = $imageEl.attr('data-src');\r\n                var srcset = $imageEl.attr('data-srcset');\r\n                var sizes = $imageEl.attr('data-sizes');\r\n                var $pictureEl = $imageEl.parent('picture');\r\n                swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, function () {\r\n                    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) return;\r\n\r\n                    if (background) {\r\n                        $imageEl.css('background-image', \"url(\\\"\" + background + \"\\\")\");\r\n                        $imageEl.removeAttr('data-background');\r\n                    } else {\r\n                        if (srcset) {\r\n                            $imageEl.attr('srcset', srcset);\r\n                            $imageEl.removeAttr('data-srcset');\r\n                        }\r\n\r\n                        if (sizes) {\r\n                            $imageEl.attr('sizes', sizes);\r\n                            $imageEl.removeAttr('data-sizes');\r\n                        }\r\n\r\n                        if ($pictureEl.length) {\r\n                            $pictureEl.children('source').each(function (sourceEl) {\r\n                                var $source = $(sourceEl);\r\n\r\n                                if ($source.attr('data-srcset')) {\r\n                                    $source.attr('srcset', $source.attr('data-srcset'));\r\n                                    $source.removeAttr('data-srcset');\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        if (src) {\r\n                            $imageEl.attr('src', src);\r\n                            $imageEl.removeAttr('data-src');\r\n                        }\r\n                    }\r\n\r\n                    $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\r\n                    $slideEl.find(\".\" + params.preloaderClass).remove();\r\n\r\n                    if (swiper.params.loop && loadInDuplicate) {\r\n                        var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\r\n\r\n                        if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\r\n                            var originalSlide = swiper.$wrapperEl.children(\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + swiper.params.slideDuplicateClass + \")\");\r\n                            swiper.lazy.loadInSlide(originalSlide.index(), false);\r\n                        } else {\r\n                            var duplicatedSlide = swiper.$wrapperEl.children(\".\" + swiper.params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\");\r\n                            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\r\n                        }\r\n                    }\r\n\r\n                    swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\r\n\r\n                    if (swiper.params.autoHeight) {\r\n                        swiper.updateAutoHeight();\r\n                    }\r\n                });\r\n                swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\r\n            });\r\n        },\r\n        load: function load() {\r\n            var swiper = this;\r\n            var $wrapperEl = swiper.$wrapperEl,\r\n                swiperParams = swiper.params,\r\n                slides = swiper.slides,\r\n                activeIndex = swiper.activeIndex;\r\n            var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\r\n            var params = swiperParams.lazy;\r\n            var slidesPerView = swiperParams.slidesPerView;\r\n\r\n            if (slidesPerView === 'auto') {\r\n                slidesPerView = 0;\r\n            }\r\n\r\n            function slideExist(index) {\r\n                if (isVirtual) {\r\n                    if ($wrapperEl.children(\".\" + swiperParams.slideClass + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\").length) {\r\n                        return true;\r\n                    }\r\n                } else if (slides[index]) return true;\r\n\r\n                return false;\r\n            }\r\n\r\n            function slideIndex(slideEl) {\r\n                if (isVirtual) {\r\n                    return $(slideEl).attr('data-swiper-slide-index');\r\n                }\r\n\r\n                return $(slideEl).index();\r\n            }\r\n\r\n            if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\r\n\r\n            if (swiper.params.watchSlidesVisibility) {\r\n                $wrapperEl.children(\".\" + swiperParams.slideVisibleClass).each(function (slideEl) {\r\n                    var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\r\n                    swiper.lazy.loadInSlide(index);\r\n                });\r\n            } else if (slidesPerView > 1) {\r\n                for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\r\n                    if (slideExist(i)) swiper.lazy.loadInSlide(i);\r\n                }\r\n            } else {\r\n                swiper.lazy.loadInSlide(activeIndex);\r\n            }\r\n\r\n            if (params.loadPrevNext) {\r\n                if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {\r\n                    var amount = params.loadPrevNextAmount;\r\n                    var spv = slidesPerView;\r\n                    var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\r\n                    var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides\r\n\r\n                    for (var _i = activeIndex + slidesPerView; _i < maxIndex; _i += 1) {\r\n                        if (slideExist(_i)) swiper.lazy.loadInSlide(_i);\r\n                    } // Prev Slides\r\n\r\n\r\n                    for (var _i2 = minIndex; _i2 < activeIndex; _i2 += 1) {\r\n                        if (slideExist(_i2)) swiper.lazy.loadInSlide(_i2);\r\n                    }\r\n                } else {\r\n                    var nextSlide = $wrapperEl.children(\".\" + swiperParams.slideNextClass);\r\n                    if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\r\n                    var prevSlide = $wrapperEl.children(\".\" + swiperParams.slidePrevClass);\r\n                    if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    var Lazy$1 = {\r\n        name: 'lazy',\r\n        params: {\r\n            lazy: {\r\n                enabled: false,\r\n                loadPrevNext: false,\r\n                loadPrevNextAmount: 1,\r\n                loadOnTransitionStart: false,\r\n                elementClass: 'swiper-lazy',\r\n                loadingClass: 'swiper-lazy-loading',\r\n                loadedClass: 'swiper-lazy-loaded',\r\n                preloaderClass: 'swiper-lazy-preloader'\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                lazy: _extends({\r\n                    initialImageLoaded: false\r\n                }, Lazy)\r\n            });\r\n        },\r\n        on: {\r\n            beforeInit: function beforeInit(swiper) {\r\n                if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\r\n                    swiper.params.preloadImages = false;\r\n                }\r\n            },\r\n            init: function init(swiper) {\r\n                if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\r\n                    swiper.lazy.load();\r\n                }\r\n            },\r\n            scroll: function scroll(swiper) {\r\n                if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\r\n                    swiper.lazy.load();\r\n                }\r\n            },\r\n            resize: function resize(swiper) {\r\n                if (swiper.params.lazy.enabled) {\r\n                    swiper.lazy.load();\r\n                }\r\n            },\r\n            scrollbarDragMove: function scrollbarDragMove(swiper) {\r\n                if (swiper.params.lazy.enabled) {\r\n                    swiper.lazy.load();\r\n                }\r\n            },\r\n            transitionStart: function transitionStart(swiper) {\r\n                if (swiper.params.lazy.enabled) {\r\n                    if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded) {\r\n                        swiper.lazy.load();\r\n                    }\r\n                }\r\n            },\r\n            transitionEnd: function transitionEnd(swiper) {\r\n                if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\r\n                    swiper.lazy.load();\r\n                }\r\n            },\r\n            slideChange: function slideChange(swiper) {\r\n                if (swiper.params.lazy.enabled && swiper.params.cssMode) {\r\n                    swiper.lazy.load();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var Controller = {\r\n        LinearSpline: function LinearSpline(x, y) {\r\n            var binarySearch = function search() {\r\n                var maxIndex;\r\n                var minIndex;\r\n                var guess;\r\n                return function (array, val) {\r\n                    minIndex = -1;\r\n                    maxIndex = array.length;\r\n\r\n                    while (maxIndex - minIndex > 1) {\r\n                        guess = maxIndex + minIndex >> 1;\r\n\r\n                        if (array[guess] <= val) {\r\n                            minIndex = guess;\r\n                        } else {\r\n                            maxIndex = guess;\r\n                        }\r\n                    }\r\n\r\n                    return maxIndex;\r\n                };\r\n            }();\r\n\r\n            this.x = x;\r\n            this.y = y;\r\n            this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:\r\n            // (x1,y1) is the known point before given value,\r\n            // (x3,y3) is the known point after given value.\r\n\r\n            var i1;\r\n            var i3;\r\n\r\n            this.interpolate = function interpolate(x2) {\r\n                if (!x2) return 0; // Get the indexes of x1 and x3 (the array indexes before and after given x2):\r\n\r\n                i3 = binarySearch(this.x, x2);\r\n                i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:\r\n                // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\r\n\r\n                return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\r\n            };\r\n\r\n            return this;\r\n        },\r\n        // xxx: for now i will just save one spline function to to\r\n        getInterpolateFunction: function getInterpolateFunction(c) {\r\n            var swiper = this;\r\n\r\n            if (!swiper.controller.spline) {\r\n                swiper.controller.spline = swiper.params.loop ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid) : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\r\n            }\r\n        },\r\n        setTranslate: function setTranslate(_setTranslate, byController) {\r\n            var swiper = this;\r\n            var controlled = swiper.controller.control;\r\n            var multiplier;\r\n            var controlledTranslate;\r\n            var Swiper = swiper.constructor;\r\n\r\n            function setControlledTranslate(c) {\r\n                // this will create an Interpolate function based on the snapGrids\r\n                // x is the Grid of the scrolled scroller and y will be the controlled scroller\r\n                // it makes sense to create this only once and recall it for the interpolation\r\n                // the function does a lot of value caching for performance\r\n                var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\r\n\r\n                if (swiper.params.controller.by === 'slide') {\r\n                    swiper.controller.getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\r\n                    // but it did not work out\r\n\r\n                    controlledTranslate = -swiper.controller.spline.interpolate(-translate);\r\n                }\r\n\r\n                if (!controlledTranslate || swiper.params.controller.by === 'container') {\r\n                    multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\r\n                    controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\r\n                }\r\n\r\n                if (swiper.params.controller.inverse) {\r\n                    controlledTranslate = c.maxTranslate() - controlledTranslate;\r\n                }\r\n\r\n                c.updateProgress(controlledTranslate);\r\n                c.setTranslate(controlledTranslate, swiper);\r\n                c.updateActiveIndex();\r\n                c.updateSlidesClasses();\r\n            }\r\n\r\n            if (Array.isArray(controlled)) {\r\n                for (var i = 0; i < controlled.length; i += 1) {\r\n                    if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\r\n                        setControlledTranslate(controlled[i]);\r\n                    }\r\n                }\r\n            } else if (controlled instanceof Swiper && byController !== controlled) {\r\n                setControlledTranslate(controlled);\r\n            }\r\n        },\r\n        setTransition: function setTransition(duration, byController) {\r\n            var swiper = this;\r\n            var Swiper = swiper.constructor;\r\n            var controlled = swiper.controller.control;\r\n            var i;\r\n\r\n            function setControlledTransition(c) {\r\n                c.setTransition(duration, swiper);\r\n\r\n                if (duration !== 0) {\r\n                    c.transitionStart();\r\n\r\n                    if (c.params.autoHeight) {\r\n                        nextTick(function () {\r\n                            c.updateAutoHeight();\r\n                        });\r\n                    }\r\n\r\n                    c.$wrapperEl.transitionEnd(function () {\r\n                        if (!controlled) return;\r\n\r\n                        if (c.params.loop && swiper.params.controller.by === 'slide') {\r\n                            c.loopFix();\r\n                        }\r\n\r\n                        c.transitionEnd();\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (Array.isArray(controlled)) {\r\n                for (i = 0; i < controlled.length; i += 1) {\r\n                    if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\r\n                        setControlledTransition(controlled[i]);\r\n                    }\r\n                }\r\n            } else if (controlled instanceof Swiper && byController !== controlled) {\r\n                setControlledTransition(controlled);\r\n            }\r\n        }\r\n    };\r\n    var Controller$1 = {\r\n        name: 'controller',\r\n        params: {\r\n            controller: {\r\n                control: undefined,\r\n                inverse: false,\r\n                by: 'slide' // or 'container'\r\n\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                controller: _extends({\r\n                    control: swiper.params.controller.control\r\n                }, Controller)\r\n            });\r\n        },\r\n        on: {\r\n            update: function update(swiper) {\r\n                if (!swiper.controller.control) return;\r\n\r\n                if (swiper.controller.spline) {\r\n                    swiper.controller.spline = undefined;\r\n                    delete swiper.controller.spline;\r\n                }\r\n            },\r\n            resize: function resize(swiper) {\r\n                if (!swiper.controller.control) return;\r\n\r\n                if (swiper.controller.spline) {\r\n                    swiper.controller.spline = undefined;\r\n                    delete swiper.controller.spline;\r\n                }\r\n            },\r\n            observerUpdate: function observerUpdate(swiper) {\r\n                if (!swiper.controller.control) return;\r\n\r\n                if (swiper.controller.spline) {\r\n                    swiper.controller.spline = undefined;\r\n                    delete swiper.controller.spline;\r\n                }\r\n            },\r\n            setTranslate: function setTranslate(swiper, translate, byController) {\r\n                if (!swiper.controller.control) return;\r\n                swiper.controller.setTranslate(translate, byController);\r\n            },\r\n            setTransition: function setTransition(swiper, duration, byController) {\r\n                if (!swiper.controller.control) return;\r\n                swiper.controller.setTransition(duration, byController);\r\n            }\r\n        }\r\n    };\r\n\r\n    var A11y = {\r\n        getRandomNumber: function getRandomNumber(size) {\r\n            if (size === void 0) {\r\n                size = 16;\r\n            }\r\n\r\n            var randomChar = function randomChar() {\r\n                return Math.round(16 * Math.random()).toString(16);\r\n            };\r\n\r\n            return 'x'.repeat(size).replace(/x/g, randomChar);\r\n        },\r\n        makeElFocusable: function makeElFocusable($el) {\r\n            $el.attr('tabIndex', '0');\r\n            return $el;\r\n        },\r\n        makeElNotFocusable: function makeElNotFocusable($el) {\r\n            $el.attr('tabIndex', '-1');\r\n            return $el;\r\n        },\r\n        addElRole: function addElRole($el, role) {\r\n            $el.attr('role', role);\r\n            return $el;\r\n        },\r\n        addElRoleDescription: function addElRoleDescription($el, description) {\r\n            $el.attr('aria-role-description', description);\r\n            return $el;\r\n        },\r\n        addElControls: function addElControls($el, controls) {\r\n            $el.attr('aria-controls', controls);\r\n            return $el;\r\n        },\r\n        addElLabel: function addElLabel($el, label) {\r\n            $el.attr('aria-label', label);\r\n            return $el;\r\n        },\r\n        addElId: function addElId($el, id) {\r\n            $el.attr('id', id);\r\n            return $el;\r\n        },\r\n        addElLive: function addElLive($el, live) {\r\n            $el.attr('aria-live', live);\r\n            return $el;\r\n        },\r\n        disableEl: function disableEl($el) {\r\n            $el.attr('aria-disabled', true);\r\n            return $el;\r\n        },\r\n        enableEl: function enableEl($el) {\r\n            $el.attr('aria-disabled', false);\r\n            return $el;\r\n        },\r\n        onEnterKey: function onEnterKey(e) {\r\n            var swiper = this;\r\n            var params = swiper.params.a11y;\r\n            if (e.keyCode !== 13) return;\r\n            var $targetEl = $(e.target);\r\n\r\n            if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\r\n                if (!(swiper.isEnd && !swiper.params.loop)) {\r\n                    swiper.slideNext();\r\n                }\r\n\r\n                if (swiper.isEnd) {\r\n                    swiper.a11y.notify(params.lastSlideMessage);\r\n                } else {\r\n                    swiper.a11y.notify(params.nextSlideMessage);\r\n                }\r\n            }\r\n\r\n            if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\r\n                if (!(swiper.isBeginning && !swiper.params.loop)) {\r\n                    swiper.slidePrev();\r\n                }\r\n\r\n                if (swiper.isBeginning) {\r\n                    swiper.a11y.notify(params.firstSlideMessage);\r\n                } else {\r\n                    swiper.a11y.notify(params.prevSlideMessage);\r\n                }\r\n            }\r\n\r\n            if (swiper.pagination && $targetEl.is(\".\" + swiper.params.pagination.bulletClass)) {\r\n                $targetEl[0].click();\r\n            }\r\n        },\r\n        notify: function notify(message) {\r\n            var swiper = this;\r\n            var notification = swiper.a11y.liveRegion;\r\n            if (notification.length === 0) return;\r\n            notification.html('');\r\n            notification.html(message);\r\n        },\r\n        updateNavigation: function updateNavigation() {\r\n            var swiper = this;\r\n            if (swiper.params.loop || !swiper.navigation) return;\r\n            var _swiper$navigation = swiper.navigation,\r\n                $nextEl = _swiper$navigation.$nextEl,\r\n                $prevEl = _swiper$navigation.$prevEl;\r\n\r\n            if ($prevEl && $prevEl.length > 0) {\r\n                if (swiper.isBeginning) {\r\n                    swiper.a11y.disableEl($prevEl);\r\n                    swiper.a11y.makeElNotFocusable($prevEl);\r\n                } else {\r\n                    swiper.a11y.enableEl($prevEl);\r\n                    swiper.a11y.makeElFocusable($prevEl);\r\n                }\r\n            }\r\n\r\n            if ($nextEl && $nextEl.length > 0) {\r\n                if (swiper.isEnd) {\r\n                    swiper.a11y.disableEl($nextEl);\r\n                    swiper.a11y.makeElNotFocusable($nextEl);\r\n                } else {\r\n                    swiper.a11y.enableEl($nextEl);\r\n                    swiper.a11y.makeElFocusable($nextEl);\r\n                }\r\n            }\r\n        },\r\n        updatePagination: function updatePagination() {\r\n            var swiper = this;\r\n            var params = swiper.params.a11y;\r\n\r\n            if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\r\n                swiper.pagination.bullets.each(function (bulletEl) {\r\n                    var $bulletEl = $(bulletEl);\r\n                    swiper.a11y.makeElFocusable($bulletEl);\r\n\r\n                    if (!swiper.params.pagination.renderBullet) {\r\n                        swiper.a11y.addElRole($bulletEl, 'button');\r\n                        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1));\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        init: function init() {\r\n            var swiper = this;\r\n            var params = swiper.params.a11y;\r\n            swiper.$el.append(swiper.a11y.liveRegion); // Container\r\n\r\n            var $containerEl = swiper.$el;\r\n\r\n            if (params.containerRoleDescriptionMessage) {\r\n                swiper.a11y.addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);\r\n            }\r\n\r\n            if (params.containerMessage) {\r\n                swiper.a11y.addElLabel($containerEl, params.containerMessage);\r\n            } // Wrapper\r\n\r\n\r\n            var $wrapperEl = swiper.$wrapperEl;\r\n            var wrapperId = $wrapperEl.attr('id') || \"swiper-wrapper-\" + swiper.a11y.getRandomNumber(16);\r\n            var live;\r\n            swiper.a11y.addElId($wrapperEl, wrapperId);\r\n\r\n            if (swiper.params.autoplay && swiper.params.autoplay.enabled) {\r\n                live = 'off';\r\n            } else {\r\n                live = 'polite';\r\n            }\r\n\r\n            swiper.a11y.addElLive($wrapperEl, live); // Slide\r\n\r\n            if (params.itemRoleDescriptionMessage) {\r\n                swiper.a11y.addElRoleDescription($(swiper.slides), params.itemRoleDescriptionMessage);\r\n            }\r\n\r\n            swiper.a11y.addElRole($(swiper.slides), 'group');\r\n            swiper.slides.each(function (slideEl) {\r\n                var $slideEl = $(slideEl);\r\n                swiper.a11y.addElLabel($slideEl, $slideEl.index() + 1 + \" / \" + swiper.slides.length);\r\n            }); // Navigation\r\n\r\n            var $nextEl;\r\n            var $prevEl;\r\n\r\n            if (swiper.navigation && swiper.navigation.$nextEl) {\r\n                $nextEl = swiper.navigation.$nextEl;\r\n            }\r\n\r\n            if (swiper.navigation && swiper.navigation.$prevEl) {\r\n                $prevEl = swiper.navigation.$prevEl;\r\n            }\r\n\r\n            if ($nextEl && $nextEl.length) {\r\n                swiper.a11y.makeElFocusable($nextEl);\r\n\r\n                if ($nextEl[0].tagName !== 'BUTTON') {\r\n                    swiper.a11y.addElRole($nextEl, 'button');\r\n                    $nextEl.on('keydown', swiper.a11y.onEnterKey);\r\n                }\r\n\r\n                swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\r\n                swiper.a11y.addElControls($nextEl, wrapperId);\r\n            }\r\n\r\n            if ($prevEl && $prevEl.length) {\r\n                swiper.a11y.makeElFocusable($prevEl);\r\n\r\n                if ($prevEl[0].tagName !== 'BUTTON') {\r\n                    swiper.a11y.addElRole($prevEl, 'button');\r\n                    $prevEl.on('keydown', swiper.a11y.onEnterKey);\r\n                }\r\n\r\n                swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\r\n                swiper.a11y.addElControls($prevEl, wrapperId);\r\n            } // Pagination\r\n\r\n\r\n            if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\r\n                swiper.pagination.$el.on('keydown', \".\" + swiper.params.pagination.bulletClass, swiper.a11y.onEnterKey);\r\n            }\r\n        },\r\n        destroy: function destroy() {\r\n            var swiper = this;\r\n            if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\r\n            var $nextEl;\r\n            var $prevEl;\r\n\r\n            if (swiper.navigation && swiper.navigation.$nextEl) {\r\n                $nextEl = swiper.navigation.$nextEl;\r\n            }\r\n\r\n            if (swiper.navigation && swiper.navigation.$prevEl) {\r\n                $prevEl = swiper.navigation.$prevEl;\r\n            }\r\n\r\n            if ($nextEl) {\r\n                $nextEl.off('keydown', swiper.a11y.onEnterKey);\r\n            }\r\n\r\n            if ($prevEl) {\r\n                $prevEl.off('keydown', swiper.a11y.onEnterKey);\r\n            } // Pagination\r\n\r\n\r\n            if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\r\n                swiper.pagination.$el.off('keydown', \".\" + swiper.params.pagination.bulletClass, swiper.a11y.onEnterKey);\r\n            }\r\n        }\r\n    };\r\n    var A11y$1 = {\r\n        name: 'a11y',\r\n        params: {\r\n            a11y: {\r\n                enabled: true,\r\n                notificationClass: 'swiper-notification',\r\n                prevSlideMessage: 'Previous slide',\r\n                nextSlideMessage: 'Next slide',\r\n                firstSlideMessage: 'This is the first slide',\r\n                lastSlideMessage: 'This is the last slide',\r\n                paginationBulletMessage: 'Go to slide {{index}}',\r\n                containerMessage: null,\r\n                containerRoleDescriptionMessage: null,\r\n                itemRoleDescriptionMessage: null\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                a11y: _extends(_extends({}, A11y), {}, {\r\n                    liveRegion: $(\"<span class=\\\"\" + swiper.params.a11y.notificationClass + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")\r\n                })\r\n            });\r\n        },\r\n        on: {\r\n            afterInit: function afterInit(swiper) {\r\n                if (!swiper.params.a11y.enabled) return;\r\n                swiper.a11y.init();\r\n                swiper.a11y.updateNavigation();\r\n            },\r\n            toEdge: function toEdge(swiper) {\r\n                if (!swiper.params.a11y.enabled) return;\r\n                swiper.a11y.updateNavigation();\r\n            },\r\n            fromEdge: function fromEdge(swiper) {\r\n                if (!swiper.params.a11y.enabled) return;\r\n                swiper.a11y.updateNavigation();\r\n            },\r\n            paginationUpdate: function paginationUpdate(swiper) {\r\n                if (!swiper.params.a11y.enabled) return;\r\n                swiper.a11y.updatePagination();\r\n            },\r\n            destroy: function destroy(swiper) {\r\n                if (!swiper.params.a11y.enabled) return;\r\n                swiper.a11y.destroy();\r\n            }\r\n        }\r\n    };\r\n\r\n    var History = {\r\n        init: function init() {\r\n            var swiper = this;\r\n            var window = getWindow();\r\n            if (!swiper.params.history) return;\r\n\r\n            if (!window.history || !window.history.pushState) {\r\n                swiper.params.history.enabled = false;\r\n                swiper.params.hashNavigation.enabled = true;\r\n                return;\r\n            }\r\n\r\n            var history = swiper.history;\r\n            history.initialized = true;\r\n            history.paths = History.getPathValues(swiper.params.url);\r\n            if (!history.paths.key && !history.paths.value) return;\r\n            history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\r\n\r\n            if (!swiper.params.history.replaceState) {\r\n                window.addEventListener('popstate', swiper.history.setHistoryPopState);\r\n            }\r\n        },\r\n        destroy: function destroy() {\r\n            var swiper = this;\r\n            var window = getWindow();\r\n\r\n            if (!swiper.params.history.replaceState) {\r\n                window.removeEventListener('popstate', swiper.history.setHistoryPopState);\r\n            }\r\n        },\r\n        setHistoryPopState: function setHistoryPopState() {\r\n            var swiper = this;\r\n            swiper.history.paths = History.getPathValues(swiper.params.url);\r\n            swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\r\n        },\r\n        getPathValues: function getPathValues(urlOverride) {\r\n            var window = getWindow();\r\n            var location;\r\n\r\n            if (urlOverride) {\r\n                location = new URL(urlOverride);\r\n            } else {\r\n                location = window.location;\r\n            }\r\n\r\n            var pathArray = location.pathname.slice(1).split('/').filter(function (part) {\r\n                return part !== '';\r\n            });\r\n            var total = pathArray.length;\r\n            var key = pathArray[total - 2];\r\n            var value = pathArray[total - 1];\r\n            return {\r\n                key: key,\r\n                value: value\r\n            };\r\n        },\r\n        setHistory: function setHistory(key, index) {\r\n            var swiper = this;\r\n            var window = getWindow();\r\n            if (!swiper.history.initialized || !swiper.params.history.enabled) return;\r\n            var location;\r\n\r\n            if (swiper.params.url) {\r\n                location = new URL(swiper.params.url);\r\n            } else {\r\n                location = window.location;\r\n            }\r\n\r\n            var slide = swiper.slides.eq(index);\r\n            var value = History.slugify(slide.attr('data-history'));\r\n\r\n            if (!location.pathname.includes(key)) {\r\n                value = key + \"/\" + value;\r\n            }\r\n\r\n            var currentState = window.history.state;\r\n\r\n            if (currentState && currentState.value === value) {\r\n                return;\r\n            }\r\n\r\n            if (swiper.params.history.replaceState) {\r\n                window.history.replaceState({\r\n                    value: value\r\n                }, null, value);\r\n            } else {\r\n                window.history.pushState({\r\n                    value: value\r\n                }, null, value);\r\n            }\r\n        },\r\n        slugify: function slugify(text) {\r\n            return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\r\n        },\r\n        scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\r\n            var swiper = this;\r\n\r\n            if (value) {\r\n                for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\r\n                    var slide = swiper.slides.eq(i);\r\n                    var slideHistory = History.slugify(slide.attr('data-history'));\r\n\r\n                    if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\r\n                        var index = slide.index();\r\n                        swiper.slideTo(index, speed, runCallbacks);\r\n                    }\r\n                }\r\n            } else {\r\n                swiper.slideTo(0, speed, runCallbacks);\r\n            }\r\n        }\r\n    };\r\n    var History$1 = {\r\n        name: 'history',\r\n        params: {\r\n            history: {\r\n                enabled: false,\r\n                replaceState: false,\r\n                key: 'slides'\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                history: _extends({}, History)\r\n            });\r\n        },\r\n        on: {\r\n            init: function init(swiper) {\r\n                if (swiper.params.history.enabled) {\r\n                    swiper.history.init();\r\n                }\r\n            },\r\n            destroy: function destroy(swiper) {\r\n                if (swiper.params.history.enabled) {\r\n                    swiper.history.destroy();\r\n                }\r\n            },\r\n            transitionEnd: function transitionEnd(swiper) {\r\n                if (swiper.history.initialized) {\r\n                    swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\r\n                }\r\n            },\r\n            slideChange: function slideChange(swiper) {\r\n                if (swiper.history.initialized && swiper.params.cssMode) {\r\n                    swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var HashNavigation = {\r\n        onHashCange: function onHashCange() {\r\n            var swiper = this;\r\n            var document = getDocument();\r\n            swiper.emit('hashChange');\r\n            var newHash = document.location.hash.replace('#', '');\r\n            var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\r\n\r\n            if (newHash !== activeSlideHash) {\r\n                var newIndex = swiper.$wrapperEl.children(\".\" + swiper.params.slideClass + \"[data-hash=\\\"\" + newHash + \"\\\"]\").index();\r\n                if (typeof newIndex === 'undefined') return;\r\n                swiper.slideTo(newIndex);\r\n            }\r\n        },\r\n        setHash: function setHash() {\r\n            var swiper = this;\r\n            var window = getWindow();\r\n            var document = getDocument();\r\n            if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\r\n\r\n            if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\r\n                window.history.replaceState(null, null, \"#\" + swiper.slides.eq(swiper.activeIndex).attr('data-hash') || 0);\r\n                swiper.emit('hashSet');\r\n            } else {\r\n                var slide = swiper.slides.eq(swiper.activeIndex);\r\n                var hash = slide.attr('data-hash') || slide.attr('data-history');\r\n                document.location.hash = hash || '';\r\n                swiper.emit('hashSet');\r\n            }\r\n        },\r\n        init: function init() {\r\n            var swiper = this;\r\n            var document = getDocument();\r\n            var window = getWindow();\r\n            if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\r\n            swiper.hashNavigation.initialized = true;\r\n            var hash = document.location.hash.replace('#', '');\r\n\r\n            if (hash) {\r\n                var speed = 0;\r\n\r\n                for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\r\n                    var slide = swiper.slides.eq(i);\r\n                    var slideHash = slide.attr('data-hash') || slide.attr('data-history');\r\n\r\n                    if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\r\n                        var index = slide.index();\r\n                        swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (swiper.params.hashNavigation.watchState) {\r\n                $(window).on('hashchange', swiper.hashNavigation.onHashCange);\r\n            }\r\n        },\r\n        destroy: function destroy() {\r\n            var swiper = this;\r\n            var window = getWindow();\r\n\r\n            if (swiper.params.hashNavigation.watchState) {\r\n                $(window).off('hashchange', swiper.hashNavigation.onHashCange);\r\n            }\r\n        }\r\n    };\r\n    var HashNavigation$1 = {\r\n        name: 'hash-navigation',\r\n        params: {\r\n            hashNavigation: {\r\n                enabled: false,\r\n                replaceState: false,\r\n                watchState: false\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                hashNavigation: _extends({\r\n                    initialized: false\r\n                }, HashNavigation)\r\n            });\r\n        },\r\n        on: {\r\n            init: function init(swiper) {\r\n                if (swiper.params.hashNavigation.enabled) {\r\n                    swiper.hashNavigation.init();\r\n                }\r\n            },\r\n            destroy: function destroy(swiper) {\r\n                if (swiper.params.hashNavigation.enabled) {\r\n                    swiper.hashNavigation.destroy();\r\n                }\r\n            },\r\n            transitionEnd: function transitionEnd(swiper) {\r\n                if (swiper.hashNavigation.initialized) {\r\n                    swiper.hashNavigation.setHash();\r\n                }\r\n            },\r\n            slideChange: function slideChange(swiper) {\r\n                if (swiper.hashNavigation.initialized && swiper.params.cssMode) {\r\n                    swiper.hashNavigation.setHash();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var Autoplay = {\r\n        run: function run() {\r\n            var swiper = this;\r\n            var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\r\n            var delay = swiper.params.autoplay.delay;\r\n\r\n            if ($activeSlideEl.attr('data-swiper-autoplay')) {\r\n                delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\r\n            }\r\n\r\n            clearTimeout(swiper.autoplay.timeout);\r\n            swiper.autoplay.timeout = nextTick(function () {\r\n                var autoplayResult;\r\n\r\n                if (swiper.params.autoplay.reverseDirection) {\r\n                    if (swiper.params.loop) {\r\n                        swiper.loopFix();\r\n                        autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\r\n                        swiper.emit('autoplay');\r\n                    } else if (!swiper.isBeginning) {\r\n                        autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\r\n                        swiper.emit('autoplay');\r\n                    } else if (!swiper.params.autoplay.stopOnLastSlide) {\r\n                        autoplayResult = swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\r\n                        swiper.emit('autoplay');\r\n                    } else {\r\n                        swiper.autoplay.stop();\r\n                    }\r\n                } else if (swiper.params.loop) {\r\n                    swiper.loopFix();\r\n                    autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\r\n                    swiper.emit('autoplay');\r\n                } else if (!swiper.isEnd) {\r\n                    autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\r\n                    swiper.emit('autoplay');\r\n                } else if (!swiper.params.autoplay.stopOnLastSlide) {\r\n                    autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);\r\n                    swiper.emit('autoplay');\r\n                } else {\r\n                    swiper.autoplay.stop();\r\n                }\r\n\r\n                if (swiper.params.cssMode && swiper.autoplay.running) swiper.autoplay.run();else if (autoplayResult === false) {\r\n                    swiper.autoplay.run();\r\n                }\r\n            }, delay);\r\n        },\r\n        start: function start() {\r\n            var swiper = this;\r\n            if (typeof swiper.autoplay.timeout !== 'undefined') return false;\r\n            if (swiper.autoplay.running) return false;\r\n            swiper.autoplay.running = true;\r\n            swiper.emit('autoplayStart');\r\n            swiper.autoplay.run();\r\n            return true;\r\n        },\r\n        stop: function stop() {\r\n            var swiper = this;\r\n            if (!swiper.autoplay.running) return false;\r\n            if (typeof swiper.autoplay.timeout === 'undefined') return false;\r\n\r\n            if (swiper.autoplay.timeout) {\r\n                clearTimeout(swiper.autoplay.timeout);\r\n                swiper.autoplay.timeout = undefined;\r\n            }\r\n\r\n            swiper.autoplay.running = false;\r\n            swiper.emit('autoplayStop');\r\n            return true;\r\n        },\r\n        pause: function pause(speed) {\r\n            var swiper = this;\r\n            if (!swiper.autoplay.running) return;\r\n            if (swiper.autoplay.paused) return;\r\n            if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\r\n            swiper.autoplay.paused = true;\r\n\r\n            if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\r\n                swiper.autoplay.paused = false;\r\n                swiper.autoplay.run();\r\n            } else {\r\n                swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\r\n                swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\r\n            }\r\n        },\r\n        onVisibilityChange: function onVisibilityChange() {\r\n            var swiper = this;\r\n            var document = getDocument();\r\n\r\n            if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\r\n                swiper.autoplay.pause();\r\n            }\r\n\r\n            if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\r\n                swiper.autoplay.run();\r\n                swiper.autoplay.paused = false;\r\n            }\r\n        },\r\n        onTransitionEnd: function onTransitionEnd(e) {\r\n            var swiper = this;\r\n            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\r\n            if (e.target !== swiper.$wrapperEl[0]) return;\r\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\r\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\r\n            swiper.autoplay.paused = false;\r\n\r\n            if (!swiper.autoplay.running) {\r\n                swiper.autoplay.stop();\r\n            } else {\r\n                swiper.autoplay.run();\r\n            }\r\n        }\r\n    };\r\n    var Autoplay$1 = {\r\n        name: 'autoplay',\r\n        params: {\r\n            autoplay: {\r\n                enabled: false,\r\n                delay: 3000,\r\n                waitForTransition: true,\r\n                disableOnInteraction: true,\r\n                stopOnLastSlide: false,\r\n                reverseDirection: false\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                autoplay: _extends(_extends({}, Autoplay), {}, {\r\n                    running: false,\r\n                    paused: false\r\n                })\r\n            });\r\n        },\r\n        on: {\r\n            init: function init(swiper) {\r\n                if (swiper.params.autoplay.enabled) {\r\n                    swiper.autoplay.start();\r\n                    var document = getDocument();\r\n                    document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\r\n                }\r\n            },\r\n            beforeTransitionStart: function beforeTransitionStart(swiper, speed, internal) {\r\n                if (swiper.autoplay.running) {\r\n                    if (internal || !swiper.params.autoplay.disableOnInteraction) {\r\n                        swiper.autoplay.pause(speed);\r\n                    } else {\r\n                        swiper.autoplay.stop();\r\n                    }\r\n                }\r\n            },\r\n            sliderFirstMove: function sliderFirstMove(swiper) {\r\n                if (swiper.autoplay.running) {\r\n                    if (swiper.params.autoplay.disableOnInteraction) {\r\n                        swiper.autoplay.stop();\r\n                    } else {\r\n                        swiper.autoplay.pause();\r\n                    }\r\n                }\r\n            },\r\n            touchEnd: function touchEnd(swiper) {\r\n                if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\r\n                    swiper.autoplay.run();\r\n                }\r\n            },\r\n            destroy: function destroy(swiper) {\r\n                if (swiper.autoplay.running) {\r\n                    swiper.autoplay.stop();\r\n                }\r\n\r\n                var document = getDocument();\r\n                document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\r\n            }\r\n        }\r\n    };\r\n\r\n    var Fade = {\r\n        setTranslate: function setTranslate() {\r\n            var swiper = this;\r\n            var slides = swiper.slides;\r\n\r\n            for (var i = 0; i < slides.length; i += 1) {\r\n                var $slideEl = swiper.slides.eq(i);\r\n                var offset = $slideEl[0].swiperSlideOffset;\r\n                var tx = -offset;\r\n                if (!swiper.params.virtualTranslate) tx -= swiper.translate;\r\n                var ty = 0;\r\n\r\n                if (!swiper.isHorizontal()) {\r\n                    ty = tx;\r\n                    tx = 0;\r\n                }\r\n\r\n                var slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\r\n                $slideEl.css({\r\n                    opacity: slideOpacity\r\n                }).transform(\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\");\r\n            }\r\n        },\r\n        setTransition: function setTransition(duration) {\r\n            var swiper = this;\r\n            var slides = swiper.slides,\r\n                $wrapperEl = swiper.$wrapperEl;\r\n            slides.transition(duration);\r\n\r\n            if (swiper.params.virtualTranslate && duration !== 0) {\r\n                var eventTriggered = false;\r\n                slides.transitionEnd(function () {\r\n                    if (eventTriggered) return;\r\n                    if (!swiper || swiper.destroyed) return;\r\n                    eventTriggered = true;\r\n                    swiper.animating = false;\r\n                    var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\r\n\r\n                    for (var i = 0; i < triggerEvents.length; i += 1) {\r\n                        $wrapperEl.trigger(triggerEvents[i]);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n    var EffectFade = {\r\n        name: 'effect-fade',\r\n        params: {\r\n            fadeEffect: {\r\n                crossFade: false\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                fadeEffect: _extends({}, Fade)\r\n            });\r\n        },\r\n        on: {\r\n            beforeInit: function beforeInit(swiper) {\r\n                if (swiper.params.effect !== 'fade') return;\r\n                swiper.classNames.push(swiper.params.containerModifierClass + \"fade\");\r\n                var overwriteParams = {\r\n                    slidesPerView: 1,\r\n                    slidesPerColumn: 1,\r\n                    slidesPerGroup: 1,\r\n                    watchSlidesProgress: true,\r\n                    spaceBetween: 0,\r\n                    virtualTranslate: true\r\n                };\r\n                extend$1(swiper.params, overwriteParams);\r\n                extend$1(swiper.originalParams, overwriteParams);\r\n            },\r\n            setTranslate: function setTranslate(swiper) {\r\n                if (swiper.params.effect !== 'fade') return;\r\n                swiper.fadeEffect.setTranslate();\r\n            },\r\n            setTransition: function setTransition(swiper, duration) {\r\n                if (swiper.params.effect !== 'fade') return;\r\n                swiper.fadeEffect.setTransition(duration);\r\n            }\r\n        }\r\n    };\r\n\r\n    var Cube = {\r\n        setTranslate: function setTranslate() {\r\n            var swiper = this;\r\n            var $el = swiper.$el,\r\n                $wrapperEl = swiper.$wrapperEl,\r\n                slides = swiper.slides,\r\n                swiperWidth = swiper.width,\r\n                swiperHeight = swiper.height,\r\n                rtl = swiper.rtlTranslate,\r\n                swiperSize = swiper.size,\r\n                browser = swiper.browser;\r\n            var params = swiper.params.cubeEffect;\r\n            var isHorizontal = swiper.isHorizontal();\r\n            var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n            var wrapperRotate = 0;\r\n            var $cubeShadowEl;\r\n\r\n            if (params.shadow) {\r\n                if (isHorizontal) {\r\n                    $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\r\n\r\n                    if ($cubeShadowEl.length === 0) {\r\n                        $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\r\n                        $wrapperEl.append($cubeShadowEl);\r\n                    }\r\n\r\n                    $cubeShadowEl.css({\r\n                        height: swiperWidth + \"px\"\r\n                    });\r\n                } else {\r\n                    $cubeShadowEl = $el.find('.swiper-cube-shadow');\r\n\r\n                    if ($cubeShadowEl.length === 0) {\r\n                        $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\r\n                        $el.append($cubeShadowEl);\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (var i = 0; i < slides.length; i += 1) {\r\n                var $slideEl = slides.eq(i);\r\n                var slideIndex = i;\r\n\r\n                if (isVirtual) {\r\n                    slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\r\n                }\r\n\r\n                var slideAngle = slideIndex * 90;\r\n                var round = Math.floor(slideAngle / 360);\r\n\r\n                if (rtl) {\r\n                    slideAngle = -slideAngle;\r\n                    round = Math.floor(-slideAngle / 360);\r\n                }\r\n\r\n                var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\r\n                var tx = 0;\r\n                var ty = 0;\r\n                var tz = 0;\r\n\r\n                if (slideIndex % 4 === 0) {\r\n                    tx = -round * 4 * swiperSize;\r\n                    tz = 0;\r\n                } else if ((slideIndex - 1) % 4 === 0) {\r\n                    tx = 0;\r\n                    tz = -round * 4 * swiperSize;\r\n                } else if ((slideIndex - 2) % 4 === 0) {\r\n                    tx = swiperSize + round * 4 * swiperSize;\r\n                    tz = swiperSize;\r\n                } else if ((slideIndex - 3) % 4 === 0) {\r\n                    tx = -swiperSize;\r\n                    tz = 3 * swiperSize + swiperSize * 4 * round;\r\n                }\r\n\r\n                if (rtl) {\r\n                    tx = -tx;\r\n                }\r\n\r\n                if (!isHorizontal) {\r\n                    ty = tx;\r\n                    tx = 0;\r\n                }\r\n\r\n                var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\r\n\r\n                if (progress <= 1 && progress > -1) {\r\n                    wrapperRotate = slideIndex * 90 + progress * 90;\r\n                    if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\r\n                }\r\n\r\n                $slideEl.transform(transform);\r\n\r\n                if (params.slideShadows) {\r\n                    // Set shadows\r\n                    var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\r\n                    var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\r\n\r\n                    if (shadowBefore.length === 0) {\r\n                        shadowBefore = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\");\r\n                        $slideEl.append(shadowBefore);\r\n                    }\r\n\r\n                    if (shadowAfter.length === 0) {\r\n                        shadowAfter = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\");\r\n                        $slideEl.append(shadowAfter);\r\n                    }\r\n\r\n                    if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\r\n                    if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\r\n                }\r\n            }\r\n\r\n            $wrapperEl.css({\r\n                '-webkit-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\r\n                '-moz-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\r\n                '-ms-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\r\n                'transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\"\r\n            });\r\n\r\n            if (params.shadow) {\r\n                if (isHorizontal) {\r\n                    $cubeShadowEl.transform(\"translate3d(0px, \" + (swiperWidth / 2 + params.shadowOffset) + \"px, \" + -swiperWidth / 2 + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + params.shadowScale + \")\");\r\n                } else {\r\n                    var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\r\n                    var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\r\n                    var scale1 = params.shadowScale;\r\n                    var scale2 = params.shadowScale / multiplier;\r\n                    var offset = params.shadowOffset;\r\n                    $cubeShadowEl.transform(\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + (swiperHeight / 2 + offset) + \"px, \" + -swiperHeight / 2 / scale2 + \"px) rotateX(-90deg)\");\r\n                }\r\n            }\r\n\r\n            var zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\r\n            $wrapperEl.transform(\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\");\r\n        },\r\n        setTransition: function setTransition(duration) {\r\n            var swiper = this;\r\n            var $el = swiper.$el,\r\n                slides = swiper.slides;\r\n            slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\r\n\r\n            if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\r\n                $el.find('.swiper-cube-shadow').transition(duration);\r\n            }\r\n        }\r\n    };\r\n    var EffectCube = {\r\n        name: 'effect-cube',\r\n        params: {\r\n            cubeEffect: {\r\n                slideShadows: true,\r\n                shadow: true,\r\n                shadowOffset: 20,\r\n                shadowScale: 0.94\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                cubeEffect: _extends({}, Cube)\r\n            });\r\n        },\r\n        on: {\r\n            beforeInit: function beforeInit(swiper) {\r\n                if (swiper.params.effect !== 'cube') return;\r\n                swiper.classNames.push(swiper.params.containerModifierClass + \"cube\");\r\n                swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\r\n                var overwriteParams = {\r\n                    slidesPerView: 1,\r\n                    slidesPerColumn: 1,\r\n                    slidesPerGroup: 1,\r\n                    watchSlidesProgress: true,\r\n                    resistanceRatio: 0,\r\n                    spaceBetween: 0,\r\n                    centeredSlides: false,\r\n                    virtualTranslate: true\r\n                };\r\n                extend$1(swiper.params, overwriteParams);\r\n                extend$1(swiper.originalParams, overwriteParams);\r\n            },\r\n            setTranslate: function setTranslate(swiper) {\r\n                if (swiper.params.effect !== 'cube') return;\r\n                swiper.cubeEffect.setTranslate();\r\n            },\r\n            setTransition: function setTransition(swiper, duration) {\r\n                if (swiper.params.effect !== 'cube') return;\r\n                swiper.cubeEffect.setTransition(duration);\r\n            }\r\n        }\r\n    };\r\n\r\n    var Flip = {\r\n        setTranslate: function setTranslate() {\r\n            var swiper = this;\r\n            var slides = swiper.slides,\r\n                rtl = swiper.rtlTranslate;\r\n\r\n            for (var i = 0; i < slides.length; i += 1) {\r\n                var $slideEl = slides.eq(i);\r\n                var progress = $slideEl[0].progress;\r\n\r\n                if (swiper.params.flipEffect.limitRotation) {\r\n                    progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\r\n                }\r\n\r\n                var offset = $slideEl[0].swiperSlideOffset;\r\n                var rotate = -180 * progress;\r\n                var rotateY = rotate;\r\n                var rotateX = 0;\r\n                var tx = -offset;\r\n                var ty = 0;\r\n\r\n                if (!swiper.isHorizontal()) {\r\n                    ty = tx;\r\n                    tx = 0;\r\n                    rotateX = -rotateY;\r\n                    rotateY = 0;\r\n                } else if (rtl) {\r\n                    rotateY = -rotateY;\r\n                }\r\n\r\n                $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\r\n\r\n                if (swiper.params.flipEffect.slideShadows) {\r\n                    // Set shadows\r\n                    var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\r\n                    var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\r\n\r\n                    if (shadowBefore.length === 0) {\r\n                        shadowBefore = $(\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\");\r\n                        $slideEl.append(shadowBefore);\r\n                    }\r\n\r\n                    if (shadowAfter.length === 0) {\r\n                        shadowAfter = $(\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\");\r\n                        $slideEl.append(shadowAfter);\r\n                    }\r\n\r\n                    if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\r\n                    if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\r\n                }\r\n\r\n                $slideEl.transform(\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\");\r\n            }\r\n        },\r\n        setTransition: function setTransition(duration) {\r\n            var swiper = this;\r\n            var slides = swiper.slides,\r\n                activeIndex = swiper.activeIndex,\r\n                $wrapperEl = swiper.$wrapperEl;\r\n            slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\r\n\r\n            if (swiper.params.virtualTranslate && duration !== 0) {\r\n                var eventTriggered = false; // eslint-disable-next-line\r\n\r\n                slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\r\n                    if (eventTriggered) return;\r\n                    if (!swiper || swiper.destroyed) return; // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\r\n\r\n                    eventTriggered = true;\r\n                    swiper.animating = false;\r\n                    var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\r\n\r\n                    for (var i = 0; i < triggerEvents.length; i += 1) {\r\n                        $wrapperEl.trigger(triggerEvents[i]);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n    var EffectFlip = {\r\n        name: 'effect-flip',\r\n        params: {\r\n            flipEffect: {\r\n                slideShadows: true,\r\n                limitRotation: true\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                flipEffect: _extends({}, Flip)\r\n            });\r\n        },\r\n        on: {\r\n            beforeInit: function beforeInit(swiper) {\r\n                if (swiper.params.effect !== 'flip') return;\r\n                swiper.classNames.push(swiper.params.containerModifierClass + \"flip\");\r\n                swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\r\n                var overwriteParams = {\r\n                    slidesPerView: 1,\r\n                    slidesPerColumn: 1,\r\n                    slidesPerGroup: 1,\r\n                    watchSlidesProgress: true,\r\n                    spaceBetween: 0,\r\n                    virtualTranslate: true\r\n                };\r\n                extend$1(swiper.params, overwriteParams);\r\n                extend$1(swiper.originalParams, overwriteParams);\r\n            },\r\n            setTranslate: function setTranslate(swiper) {\r\n                if (swiper.params.effect !== 'flip') return;\r\n                swiper.flipEffect.setTranslate();\r\n            },\r\n            setTransition: function setTransition(swiper, duration) {\r\n                if (swiper.params.effect !== 'flip') return;\r\n                swiper.flipEffect.setTransition(duration);\r\n            }\r\n        }\r\n    };\r\n\r\n    var Coverflow = {\r\n        setTranslate: function setTranslate() {\r\n            var swiper = this;\r\n            var swiperWidth = swiper.width,\r\n                swiperHeight = swiper.height,\r\n                slides = swiper.slides,\r\n                slidesSizesGrid = swiper.slidesSizesGrid;\r\n            var params = swiper.params.coverflowEffect;\r\n            var isHorizontal = swiper.isHorizontal();\r\n            var transform = swiper.translate;\r\n            var center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\r\n            var rotate = isHorizontal ? params.rotate : -params.rotate;\r\n            var translate = params.depth; // Each slide offset from center\r\n\r\n            for (var i = 0, length = slides.length; i < length; i += 1) {\r\n                var $slideEl = slides.eq(i);\r\n                var slideSize = slidesSizesGrid[i];\r\n                var slideOffset = $slideEl[0].swiperSlideOffset;\r\n                var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * params.modifier;\r\n                var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\r\n                var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\r\n\r\n                var translateZ = -translate * Math.abs(offsetMultiplier);\r\n                var stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\r\n\r\n                if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\r\n                    stretch = parseFloat(params.stretch) / 100 * slideSize;\r\n                }\r\n\r\n                var translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\r\n                var translateX = isHorizontal ? stretch * offsetMultiplier : 0;\r\n                var scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values\r\n\r\n                if (Math.abs(translateX) < 0.001) translateX = 0;\r\n                if (Math.abs(translateY) < 0.001) translateY = 0;\r\n                if (Math.abs(translateZ) < 0.001) translateZ = 0;\r\n                if (Math.abs(rotateY) < 0.001) rotateY = 0;\r\n                if (Math.abs(rotateX) < 0.001) rotateX = 0;\r\n                if (Math.abs(scale) < 0.001) scale = 0;\r\n                var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg) scale(\" + scale + \")\";\r\n                $slideEl.transform(slideTransform);\r\n                $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\r\n\r\n                if (params.slideShadows) {\r\n                    // Set shadows\r\n                    var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\r\n                    var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\r\n\r\n                    if ($shadowBeforeEl.length === 0) {\r\n                        $shadowBeforeEl = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\");\r\n                        $slideEl.append($shadowBeforeEl);\r\n                    }\r\n\r\n                    if ($shadowAfterEl.length === 0) {\r\n                        $shadowAfterEl = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\");\r\n                        $slideEl.append($shadowAfterEl);\r\n                    }\r\n\r\n                    if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\r\n                    if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\r\n                }\r\n            }\r\n        },\r\n        setTransition: function setTransition(duration) {\r\n            var swiper = this;\r\n            swiper.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\r\n        }\r\n    };\r\n    var EffectCoverflow = {\r\n        name: 'effect-coverflow',\r\n        params: {\r\n            coverflowEffect: {\r\n                rotate: 50,\r\n                stretch: 0,\r\n                depth: 100,\r\n                scale: 1,\r\n                modifier: 1,\r\n                slideShadows: true\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                coverflowEffect: _extends({}, Coverflow)\r\n            });\r\n        },\r\n        on: {\r\n            beforeInit: function beforeInit(swiper) {\r\n                if (swiper.params.effect !== 'coverflow') return;\r\n                swiper.classNames.push(swiper.params.containerModifierClass + \"coverflow\");\r\n                swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\r\n                swiper.params.watchSlidesProgress = true;\r\n                swiper.originalParams.watchSlidesProgress = true;\r\n            },\r\n            setTranslate: function setTranslate(swiper) {\r\n                if (swiper.params.effect !== 'coverflow') return;\r\n                swiper.coverflowEffect.setTranslate();\r\n            },\r\n            setTransition: function setTransition(swiper, duration) {\r\n                if (swiper.params.effect !== 'coverflow') return;\r\n                swiper.coverflowEffect.setTransition(duration);\r\n            }\r\n        }\r\n    };\r\n\r\n    var Thumbs = {\r\n        init: function init() {\r\n            var swiper = this;\r\n            var thumbsParams = swiper.params.thumbs;\r\n            if (swiper.thumbs.initialized) return false;\r\n            swiper.thumbs.initialized = true;\r\n            var SwiperClass = swiper.constructor;\r\n\r\n            if (thumbsParams.swiper instanceof SwiperClass) {\r\n                swiper.thumbs.swiper = thumbsParams.swiper;\r\n                extend$1(swiper.thumbs.swiper.originalParams, {\r\n                    watchSlidesProgress: true,\r\n                    slideToClickedSlide: false\r\n                });\r\n                extend$1(swiper.thumbs.swiper.params, {\r\n                    watchSlidesProgress: true,\r\n                    slideToClickedSlide: false\r\n                });\r\n            } else if (isObject$1(thumbsParams.swiper)) {\r\n                swiper.thumbs.swiper = new SwiperClass(extend$1({}, thumbsParams.swiper, {\r\n                    watchSlidesVisibility: true,\r\n                    watchSlidesProgress: true,\r\n                    slideToClickedSlide: false\r\n                }));\r\n                swiper.thumbs.swiperCreated = true;\r\n            }\r\n\r\n            swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\r\n            swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\r\n            return true;\r\n        },\r\n        onThumbClick: function onThumbClick() {\r\n            var swiper = this;\r\n            var thumbsSwiper = swiper.thumbs.swiper;\r\n            if (!thumbsSwiper) return;\r\n            var clickedIndex = thumbsSwiper.clickedIndex;\r\n            var clickedSlide = thumbsSwiper.clickedSlide;\r\n            if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\r\n            if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\r\n            var slideToIndex;\r\n\r\n            if (thumbsSwiper.params.loop) {\r\n                slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\r\n            } else {\r\n                slideToIndex = clickedIndex;\r\n            }\r\n\r\n            if (swiper.params.loop) {\r\n                var currentIndex = swiper.activeIndex;\r\n\r\n                if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\r\n                    swiper.loopFix(); // eslint-disable-next-line\r\n\r\n                    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\r\n                    currentIndex = swiper.activeIndex;\r\n                }\r\n\r\n                var prevIndex = swiper.slides.eq(currentIndex).prevAll(\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\").eq(0).index();\r\n                var nextIndex = swiper.slides.eq(currentIndex).nextAll(\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\").eq(0).index();\r\n                if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;else slideToIndex = prevIndex;\r\n            }\r\n\r\n            swiper.slideTo(slideToIndex);\r\n        },\r\n        update: function update(initial) {\r\n            var swiper = this;\r\n            var thumbsSwiper = swiper.thumbs.swiper;\r\n            if (!thumbsSwiper) return;\r\n            var slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\r\n            var autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\r\n            var useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\r\n\r\n            if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\r\n                var currentThumbsIndex = thumbsSwiper.activeIndex;\r\n                var newThumbsIndex;\r\n                var direction;\r\n\r\n                if (thumbsSwiper.params.loop) {\r\n                    if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\r\n                        thumbsSwiper.loopFix(); // eslint-disable-next-line\r\n\r\n                        thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\r\n                        currentThumbsIndex = thumbsSwiper.activeIndex;\r\n                    } // Find actual thumbs index to slide to\r\n\r\n\r\n                    var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(\"[data-swiper-slide-index=\\\"\" + swiper.realIndex + \"\\\"]\").eq(0).index();\r\n                    var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(\"[data-swiper-slide-index=\\\"\" + swiper.realIndex + \"\\\"]\").eq(0).index();\r\n                    if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;else newThumbsIndex = prevThumbsIndex;\r\n                    direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\r\n                } else {\r\n                    newThumbsIndex = swiper.realIndex;\r\n                    direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\r\n                }\r\n\r\n                if (useOffset) {\r\n                    newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\r\n                }\r\n\r\n                if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\r\n                    if (thumbsSwiper.params.centeredSlides) {\r\n                        if (newThumbsIndex > currentThumbsIndex) {\r\n                            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\r\n                        } else {\r\n                            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\r\n                        }\r\n                    } else if (newThumbsIndex > currentThumbsIndex) {\r\n                        newThumbsIndex = newThumbsIndex - slidesPerView + 1;\r\n                    }\r\n\r\n                    thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\r\n                }\r\n            } // Activate thumbs\r\n\r\n\r\n            var thumbsToActivate = 1;\r\n            var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\r\n\r\n            if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\r\n                thumbsToActivate = swiper.params.slidesPerView;\r\n            }\r\n\r\n            if (!swiper.params.thumbs.multipleActiveThumbs) {\r\n                thumbsToActivate = 1;\r\n            }\r\n\r\n            thumbsToActivate = Math.floor(thumbsToActivate);\r\n            thumbsSwiper.slides.removeClass(thumbActiveClass);\r\n\r\n            if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\r\n                for (var i = 0; i < thumbsToActivate; i += 1) {\r\n                    thumbsSwiper.$wrapperEl.children(\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex + i) + \"\\\"]\").addClass(thumbActiveClass);\r\n                }\r\n            } else {\r\n                for (var _i = 0; _i < thumbsToActivate; _i += 1) {\r\n                    thumbsSwiper.slides.eq(swiper.realIndex + _i).addClass(thumbActiveClass);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    var Thumbs$1 = {\r\n        name: 'thumbs',\r\n        params: {\r\n            thumbs: {\r\n                swiper: null,\r\n                multipleActiveThumbs: true,\r\n                autoScrollOffset: 0,\r\n                slideThumbActiveClass: 'swiper-slide-thumb-active',\r\n                thumbsContainerClass: 'swiper-container-thumbs'\r\n            }\r\n        },\r\n        create: function create() {\r\n            var swiper = this;\r\n            bindModuleMethods(swiper, {\r\n                thumbs: _extends({\r\n                    swiper: null,\r\n                    initialized: false\r\n                }, Thumbs)\r\n            });\r\n        },\r\n        on: {\r\n            beforeInit: function beforeInit(swiper) {\r\n                var thumbs = swiper.params.thumbs;\r\n                if (!thumbs || !thumbs.swiper) return;\r\n                swiper.thumbs.init();\r\n                swiper.thumbs.update(true);\r\n            },\r\n            slideChange: function slideChange(swiper) {\r\n                if (!swiper.thumbs.swiper) return;\r\n                swiper.thumbs.update();\r\n            },\r\n            update: function update(swiper) {\r\n                if (!swiper.thumbs.swiper) return;\r\n                swiper.thumbs.update();\r\n            },\r\n            resize: function resize(swiper) {\r\n                if (!swiper.thumbs.swiper) return;\r\n                swiper.thumbs.update();\r\n            },\r\n            observerUpdate: function observerUpdate(swiper) {\r\n                if (!swiper.thumbs.swiper) return;\r\n                swiper.thumbs.update();\r\n            },\r\n            setTransition: function setTransition(swiper, duration) {\r\n                var thumbsSwiper = swiper.thumbs.swiper;\r\n                if (!thumbsSwiper) return;\r\n                thumbsSwiper.setTransition(duration);\r\n            },\r\n            beforeDestroy: function beforeDestroy(swiper) {\r\n                var thumbsSwiper = swiper.thumbs.swiper;\r\n                if (!thumbsSwiper) return;\r\n\r\n                if (swiper.thumbs.swiperCreated && thumbsSwiper) {\r\n                    thumbsSwiper.destroy();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // Swiper Class\r\n    var components = [Virtual$1, Keyboard$1, Mousewheel$1, Navigation$1, Pagination$1, Scrollbar$1, Parallax$1, Zoom$1, Lazy$1, Controller$1, A11y$1, History$1, HashNavigation$1, Autoplay$1, EffectFade, EffectCube, EffectFlip, EffectCoverflow, Thumbs$1];\r\n    Swiper.use(components);\r\n\r\n    return Swiper;\r\n\r\n})));\r\n//# sourceMappingURL=swiper-bundle.js.map\n\n//# sourceURL=webpack://name-project/./src/temp/slider-swiper/swiper-lib.js?");

/***/ }),

/***/ "./src/temp/slider-swiper/swiper.js":
/*!******************************************!*\
  !*** ./src/temp/slider-swiper/swiper.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var swiper_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! swiper/css */ \"./node_modules/swiper/swiper.css\");\n/* harmony import */ var _swiper_lib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./swiper-lib */ \"./src/temp/slider-swiper/swiper-lib.js\");\n/* harmony import */ var _swiper_lib__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_swiper_lib__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _swiper_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./swiper.scss */ \"./src/temp/slider-swiper/swiper.scss\");\n/** подключение из node modules************************************************************/\r\n// import Swiper from 'swiper';\r\n\r\n// /** ************************************************************************************* */\r\n\r\n\r\n\r\n\r\n// /** Локальное подключение **************************************************************** */\r\n\r\n\r\n\r\n\r\nvar swiper = new (_swiper_lib__WEBPACK_IMPORTED_MODULE_1___default())(\".swiper\", {\r\n    navigation: {\r\n        nextEl: \".swiper-button-next\",\r\n        prevEl: \".swiper-button-prev\",\r\n    },\r\n    autoplay:{\r\n        delay: 5000,// пауза между прокруткой\r\n        stopOnLastSlide: false,// закончить на последнем слайде\r\n        disableOnInteraction: false,// отключить после ручной прокрутки\r\n    },\r\n});\r\n// /** ************************************************************************************* */\r\n//\r\n// /**manual******************************************************************************** */\r\n// //https://www.youtube.com/watch?v=ddbxsrGPRY0&t=527s\r\n// //https://swiperjs.com/\r\n// /** *************************************************************************************** */\r\n// const sswiper = new Swiper('.sswiper', {\r\n//     /** Буллеты, положение, прогрессбар************************************************** */\r\n//     pagination: {\r\n//         el: '.swiper-pagination',\r\n//         /** Буллеты **===============================================*/\r\n//         clickable: true,// нажатие на буллеты\r\n//         dynamicBullets: true,// эффект увеличения активного буллета\r\n//         /** Кастом буллетов (цифры и т.д.) */\r\n//             // renderBullet: function (index, className){\r\n//             //     return '<span class=\"' + className + '\">' + (index + 1) + '</span>>';\r\n//             // },\r\n//         /** ======================================================= */\r\n//\r\n//         /** Порядковый номер (Фракции) ============================ */\r\n//         type: 'fraction',\r\n//         /** Кастом фракций */\r\n//         // renderFraction: function (currentClass, totalClass){\r\n//         //   return 'Фото <span class=\"' + currentClass + '\"></span>' + ' из ' +\r\n//         //          '<span class=\"' + totalClass + '\"></span>'\r\n//         // },\r\n//         /** ======================================================= */\r\n//\r\n//         /** Прогрессбар =========================================== */\r\n//         // type: 'progressbar',\r\n//         /** ======================================================= */\r\n//     },\r\n//     /** *********************************************************************************** */\r\n//\r\n//\r\n//     /** Скролл=================================================================== */\r\n//     scrollbar:{\r\n//         el: '.swiper-scrollbar',\r\n//         /** возможность перетаскивать скролл */\r\n//         draggable: true,\r\n//     },\r\n//     /** ========================================================================= */\r\n//\r\n//     /** Стрелки================================================================== */\r\n//     navigation: {\r\n//         nextEl: '.swiper-button-next',\r\n//         prevEl: '.swiper-button-prev',\r\n//     },\r\n//     /** ========================================================================= */\r\n//\r\n//     /** Настройка свайпа ======================================================== */\r\n//     simulateTouch: true,/** вкл/выкл перетаскивания слайдов на пк */\r\n//     touchRatio: 1,/** чувствительность свайпа */\r\n//     touchAngle: 45,/** угол срабатывания свайпа */\r\n//     grabCursor: true,/** курсор перетаскивания */\r\n//     slideToClickedSlide: true,/** переключение при клике на слайд */\r\n//     /** ========================================================================= */\r\n//\r\n//     /** Навигация по хешу ======================================================= */\r\n//     // hashNavigation:{\r\n//     //     watchState: true,\r\n//     // }\r\n//     /** ========================================================================= */\r\n//\r\n//     /** управление клавиатурой=================================================== */\r\n//     keyboard:{\r\n//         enabled: true,// вкл/выкл клавиатуру\r\n//         onlyInViewport: true,// вкл/выкл только когда слайдер в пределах вьюпорта\r\n//         pageUpDown: true,// вкл/выкл управление вверх/вниз\r\n//     },\r\n//     /** ========================================================================= */\r\n//\r\n//     /** Ууправление колесом мыши ================================================ */\r\n//     mousewheel:{\r\n//         sensitivity: 1,// чувствтельность колеса мыши\r\n//         /** Явно указать слайдер.\r\n//          * Если много - будут прокручиваться все одновременно */\r\n//         // eventsTarget: \".swiper-wrapper\",\r\n//     },\r\n//     /** ========================================================================= */\r\n//\r\n//     // Настройки==================================================================\r\n//     autoHeight: false,// автовысота\r\n//     slidesPerView: 1,// количество слайдов для показа. Можно указать дробное число/auto\r\n//     watchOverflow: true,// если слайдов меньше чем нужно\r\n//     spaceBetween: 30,// отступ между слайдами\r\n//     slidesPerGroup: 1,// количество пролистываемых слайдов\r\n//     centeredSlides: true,// активный слайд по центру\r\n//     initialSlide: 1,// активный первый слайд (от 0)\r\n//     slidesPerColumn: 1,//  количество рядов\r\n//     loop: true,// бесконечное пролистывание (желательно без скроллбара)\r\n//     loopedSlides: 0,// для корректной работы бесконечности\r\n//     freeMode: false,// свободный режим пролистывания\r\n//     speed: 400,// скорость переключения\r\n//     // direction: 'vertical',// вертикальный слайдер\r\n//     /** ========================================================================= */\r\n//\r\n//     /** Автопрокрутка =========================================================== */\r\n//     autoplay:{\r\n//         delay: 2000,// пауза между прокруткой\r\n//         stopOnLastSlide: false,// закончить на последнем слайде\r\n//         disableOnInteraction: false,// отключить после ручной прокрутки\r\n//     },\r\n//     /** ========================================================================= */\r\n//\r\n//     /** Эффекты переключения слайдов============================================= */\r\n//\r\n//     /** Листание ===================================== */\r\n//     effect: 'slide',\r\n//     /** Смена прозрачности */\r\n//     // effect: 'fade',\r\n//     // fadeEffect:{\r\n//     /** Параллельная смена прозрачности ============== */\r\n//     //     crossFade: true,\r\n//     // },\r\n//     /** ============================================== */\r\n//\r\n//     /** Переворачивание слайдов ====================== */\r\n//     // effect: 'flip',\r\n//     // flipEffect:{\r\n//     /** Тень слайдов */\r\n//     //     slideShadows: true,\r\n//     /** Показ только активного слайда */\r\n//     //     limitRotation: true,\r\n//     // }\r\n//     /** ============================================== */\r\n//\r\n//     /** Эффект 3D куб ================================ */\r\n//     // effect: 'cube',\r\n//     // cubeEffect:{\r\n//     /** Настройка тени */\r\n//     //     slideShadows: true,\r\n//     //     shadow: true,\r\n//     //     shadowOffset: 20,\r\n//     //     shadowScale: 0.9,\r\n//     // }\r\n//     /** ============================================== */\r\n//\r\n//     /** 3D пролистывание ============================= */\r\n//     // effect: 'coverflow',\r\n//     // coverflowEffect:{\r\n//     /** Угол */\r\n//     //     rotate: 20,\r\n//     /** Наложение */\r\n//     //     stretch: 50,\r\n//     /** Тень */\r\n//     //     slideShadows: true,\r\n//     // }\r\n//     /** ============================================== */\r\n//     /** ========================================================================= */\r\n//\r\n//     /** Адаптив (брейк поинты)=================================================== */\r\n//     /** Ширина экрана */\r\n//     // breakpoints:{\r\n//     //     320:{\r\n//     //         slidesPerView:1,\r\n//     //     },\r\n//     //     480:{\r\n//     //         slidesPerView:2,\r\n//     //     },\r\n//     //     992:{\r\n//     //         slidesPerView:3,\r\n//     //     },\r\n//     // }\r\n//     /** ========================================================================= */\r\n//\r\n//     /** Отключение предзагрузки картинок========================================= */\r\n//     // preloadImages: false,\r\n//     // lazy:{\r\n//     /** Подкружать на старте переключения слайда */\r\n//     //     loadOnTransitionStart: false,\r\n//     /** Подгружать предыдущую и следущую картинку */\r\n//     //     loadPrevNext: false,\r\n//     // },\r\n//     /** Слежка за видимыми слайдами */\r\n//     // watchSlidesProgress: true,\r\n//     /** Добавление класса видимым слайдам */\r\n//     // watchSlidesVisibility: true,\r\n//     /** ========================================================================= */\r\n//\r\n//     /** Зум картинки ============================================================ */\r\n//     // zoom:{\r\n//         /** Максимальное увеличение */\r\n//         // maxRatio: 5,\r\n//         /** Минимальное увеличение */\r\n//         // minRatio: 1,\r\n//     // },\r\n//     /** ========================================================================= */\r\n//\r\n//     /** Миниатюры =============================================================== */\r\n//     thumbs: {\r\n//         swiper:{\r\n//             el: '.swiper-thumbnails',\r\n//         },\r\n//     },\r\n//     /** ========================================================================= */\r\n//\r\n// });\n\n//# sourceURL=webpack://name-project/./src/temp/slider-swiper/swiper.js?");

/***/ }),

/***/ "./src/img/Rectangle 24.jpeg":
/*!***********************************!*\
  !*** ./src/img/Rectangle 24.jpeg ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/9f50f9f244bb74ca1306.jpeg\";\n\n//# sourceURL=webpack://name-project/./src/img/Rectangle_24.jpeg?");

/***/ }),

/***/ "./src/img/Rectangle 25.jpeg":
/*!***********************************!*\
  !*** ./src/img/Rectangle 25.jpeg ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/2885ea672b8c72ba9d4c.jpeg\";\n\n//# sourceURL=webpack://name-project/./src/img/Rectangle_25.jpeg?");

/***/ }),

/***/ "./src/img/Rectangle 26.jpeg":
/*!***********************************!*\
  !*** ./src/img/Rectangle 26.jpeg ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/2d4455267853a5d093e4.jpeg\";\n\n//# sourceURL=webpack://name-project/./src/img/Rectangle_26.jpeg?");

/***/ }),

/***/ "./src/img/avatar_1.png":
/*!******************************!*\
  !*** ./src/img/avatar_1.png ***!
  \******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/a05030eb68fa1b95bc59.png\";\n\n//# sourceURL=webpack://name-project/./src/img/avatar_1.png?");

/***/ }),

/***/ "./src/img/avatar_2.jpg":
/*!******************************!*\
  !*** ./src/img/avatar_2.jpg ***!
  \******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/e689d7260ebb5923bf4c.jpg\";\n\n//# sourceURL=webpack://name-project/./src/img/avatar_2.jpg?");

/***/ }),

/***/ "./src/img/card1.jpeg":
/*!****************************!*\
  !*** ./src/img/card1.jpeg ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/a29d4270f19983cbb62b.jpeg\";\n\n//# sourceURL=webpack://name-project/./src/img/card1.jpeg?");

/***/ }),

/***/ "./src/img/card2.jpeg":
/*!****************************!*\
  !*** ./src/img/card2.jpeg ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/6314e363c6642fe4460b.jpeg\";\n\n//# sourceURL=webpack://name-project/./src/img/card2.jpeg?");

/***/ }),

/***/ "./src/img/card3.jpeg":
/*!****************************!*\
  !*** ./src/img/card3.jpeg ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/13cdb4c6f5f1095aa212.jpeg\";\n\n//# sourceURL=webpack://name-project/./src/img/card3.jpeg?");

/***/ }),

/***/ "./src/img/card4.jpeg":
/*!****************************!*\
  !*** ./src/img/card4.jpeg ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/753ce085a53a092ed69a.jpeg\";\n\n//# sourceURL=webpack://name-project/./src/img/card4.jpeg?");

/***/ }),

/***/ "./src/img/hero.png":
/*!**************************!*\
  !*** ./src/img/hero.png ***!
  \**************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/f3845e85e3e6a0421007.png\";\n\n//# sourceURL=webpack://name-project/./src/img/hero.png?");

/***/ }),

/***/ "./src/img/icons/Ornament.png":
/*!************************************!*\
  !*** ./src/img/icons/Ornament.png ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/9b606a3e56a289b8cf0f.png\";\n\n//# sourceURL=webpack://name-project/./src/img/icons/Ornament.png?");

/***/ }),

/***/ "./src/img/icons/Vector.png":
/*!**********************************!*\
  !*** ./src/img/icons/Vector.png ***!
  \**********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/c1d21a80f50330134df8.png\";\n\n//# sourceURL=webpack://name-project/./src/img/icons/Vector.png?");

/***/ }),

/***/ "./src/img/icons/company1.png":
/*!************************************!*\
  !*** ./src/img/icons/company1.png ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/9acd82124042277c1dfd.png\";\n\n//# sourceURL=webpack://name-project/./src/img/icons/company1.png?");

/***/ }),

/***/ "./src/img/icons/company2.png":
/*!************************************!*\
  !*** ./src/img/icons/company2.png ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/8daa36b4b7aa1eb9e8bc.png\";\n\n//# sourceURL=webpack://name-project/./src/img/icons/company2.png?");

/***/ }),

/***/ "./src/img/icons/company3.png":
/*!************************************!*\
  !*** ./src/img/icons/company3.png ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/0869c6559d2ff64677ea.png\";\n\n//# sourceURL=webpack://name-project/./src/img/icons/company3.png?");

/***/ }),

/***/ "./src/img/icons/company4.png":
/*!************************************!*\
  !*** ./src/img/icons/company4.png ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/937f1cf86ae20f9f9eb4.png\";\n\n//# sourceURL=webpack://name-project/./src/img/icons/company4.png?");

/***/ }),

/***/ "./src/img/icons/facebook.png":
/*!************************************!*\
  !*** ./src/img/icons/facebook.png ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/2ff70c38f18f2ae9b0dd.png\";\n\n//# sourceURL=webpack://name-project/./src/img/icons/facebook.png?");

/***/ }),

/***/ "./src/img/icons/favicon.png":
/*!***********************************!*\
  !*** ./src/img/icons/favicon.png ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/d03a8b42bb8fe8694567.png\";\n\n//# sourceURL=webpack://name-project/./src/img/icons/favicon.png?");

/***/ }),

/***/ "./src/img/icons/instagram.png":
/*!*************************************!*\
  !*** ./src/img/icons/instagram.png ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/2d206493c3793ccb591b.png\";\n\n//# sourceURL=webpack://name-project/./src/img/icons/instagram.png?");

/***/ }),

/***/ "./src/img/icons/linkedin.png":
/*!************************************!*\
  !*** ./src/img/icons/linkedin.png ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/c2dbff7563800df1304b.png\";\n\n//# sourceURL=webpack://name-project/./src/img/icons/linkedin.png?");

/***/ }),

/***/ "./src/img/icons/logo.png":
/*!********************************!*\
  !*** ./src/img/icons/logo.png ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"img/d03a8b42bb8fe8694567.png\";\n\n//# sourceURL=webpack://name-project/./src/img/icons/logo.png?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = document.baseURI || self.location.href;
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;